{"version":3,"file":"static/js/166.374a9d9b.chunk.js","mappings":"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","sources":["components/blog-components/Draft-js-wysiwyg/components/ImageComponent.js","components/blog-components/Draft-js-wysiwyg/components/LinkComponent.js","components/blog-components/Draft-js-wysiwyg/components/EmbedComponent.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/UndoRedoButtons.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/FontControls.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/TextStyleButtons.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/ColorButtons.js","components/blog-components/Draft-js-wysiwyg/utils/editorUtils.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/AlignmentButtons.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/ListButtons.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/ImageUrlDialog.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/MiscButtons.js","components/blog-components/Draft-js-wysiwyg/components/EditorToolbar.js","components/blog-components/Draft-js-wysiwyg/hooks/useFontHandlers.js","components/blog-components/Draft-js-wysiwyg/Draft-js-wysiwyg.js","components/blog-components/Draft-js-wysiwyg/hooks/useEditorHandlers.js","components/blog-components/Draft-js-wysiwyg/hooks/useImageHandlers.js","components/blog-components/Draft-js-wysiwyg/hooks/useLinkHandlers.js","components/blog-components/Draft-js-wysiwyg/hooks/useEmbedHandlers.js","services/BlogService.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { EditorState } from 'draft-js';\r\n\r\n// Image component for rendering in editor - compatible with draft-js-wysiwyg original format\r\nconst ImageComponent = ({ block, contentState, editorState, onEditorStateChange, readOnly }) => {\r\n  const entity = contentState.getEntity(block.getEntityAt(0));\r\n  const entityData = entity.getData();\r\n  \r\n  // Compatible with original draft-js-wysiwyg format\r\n  const src = entityData.src;\r\n  const alt = entityData.alt;\r\n  // Original format uses 'height' and 'width' as strings with units or just numbers\r\n  const originalWidth = entityData.width;\r\n  const originalHeight = entityData.height;\r\n  \r\n  // Parse width and height, handling both string and number formats\r\n  const parseSize = (size, defaultValue) => {\r\n    if (!size) return defaultValue;\r\n    if (typeof size === 'number') return size;\r\n    if (typeof size === 'string') {\r\n      // Remove 'px', '%', or other units and convert to number\r\n      const numValue = parseInt(size.replace(/[^\\d]/g, ''));\r\n      return isNaN(numValue) ? defaultValue : numValue;\r\n    }\r\n    return defaultValue;\r\n  };\r\n  \r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const [isResizing, setIsResizing] = useState(false);\r\n  const [currentWidth, setCurrentWidth] = useState(() => parseSize(originalWidth, 300));\r\n  const [currentHeight, setCurrentHeight] = useState(() => parseSize(originalHeight, 200));\r\n  const imageRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const alignment = block.getData().get('text-align') || 'none';\r\n  \r\n  // Handle image selection\r\n  const handleImageClick = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsSelected(true);\r\n  };\r\n\r\n  // Handle click outside to deselect\r\n  useEffect(() => {\r\n    const handleClickOutside = (e) => {\r\n      if (containerRef.current && !containerRef.current.contains(e.target)) {\r\n        setIsSelected(false);\r\n      }\r\n    };\r\n\r\n    if (isSelected) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    }\r\n  }, [isSelected]);\r\n\r\n  // Update image size in entity - maintain original format\r\n  const updateImageSize = (newWidth, newHeight) => {\r\n    if (!editorState || !onEditorStateChange) {\r\n      console.warn('EditorState or onEditorStateChange is not available');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const contentState = editorState.getCurrentContent();\r\n      const entityKey = block.getEntityAt(0);\r\n      const entity = contentState.getEntity(entityKey);\r\n      \r\n      // Keep original format - store as string with 'px' unit like original\r\n      const newEntityData = { \r\n        ...entity.getData(), \r\n        width: `${newWidth}px`, \r\n        height: `${newHeight}px` \r\n      };\r\n      \r\n      const newContentState = contentState.replaceEntityData(entityKey, newEntityData);\r\n      const newEditorState = EditorState.push(\r\n        editorState,\r\n        newContentState,\r\n        'apply-entity'\r\n      );\r\n      onEditorStateChange(newEditorState);\r\n    } catch (error) {\r\n      console.error('Error updating image size:', error);\r\n    }\r\n  };\r\n\r\n  // Handle resize drag\r\n  const handleResizeStart = (e, direction) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsResizing(true);\r\n    \r\n    const startX = e.clientX;\r\n    const startY = e.clientY;\r\n    const startWidth = currentWidth;\r\n    const startHeight = currentHeight;\r\n    const aspectRatio = startWidth / startHeight;\r\n\r\n    const handleMouseMove = (e) => {\r\n      const deltaX = e.clientX - startX;\r\n      const deltaY = e.clientY - startY;\r\n      \r\n      let newWidth, newHeight;\r\n      \r\n      if (direction === 'se') {\r\n        // Bottom-right corner - maintain aspect ratio\r\n        newWidth = Math.max(50, startWidth + deltaX);\r\n        newHeight = newWidth / aspectRatio;\r\n      } else if (direction === 'e') {\r\n        // Right edge\r\n        newWidth = Math.max(50, startWidth + deltaX);\r\n        newHeight = newWidth / aspectRatio;\r\n      } else if (direction === 's') {\r\n        // Bottom edge\r\n        newHeight = Math.max(50, startHeight + deltaY);\r\n        newWidth = newHeight * aspectRatio;\r\n      }\r\n      \r\n      setCurrentWidth(Math.min(newWidth, 800)); // Max width limit\r\n      setCurrentHeight(Math.min(newHeight, 600)); // Max height limit\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      setIsResizing(false);\r\n      \r\n      // Update entity data with safety check\r\n      if (editorState && onEditorStateChange) {\r\n        updateImageSize(currentWidth, currentHeight);\r\n      }\r\n      \r\n      document.removeEventListener('mousemove', handleMouseMove);\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n  };\r\n\r\n  // Get container style based on alignment (compatible with original)\r\n  const getContainerStyle = () => {\r\n    let textAlign = 'none';\r\n    if (alignment === 'left') textAlign = 'left';\r\n    else if (alignment === 'right') textAlign = 'right';\r\n    else if (alignment === 'center') textAlign = 'center';\r\n    \r\n    return {\r\n      textAlign: textAlign !== 'none' ? textAlign : 'left',\r\n      margin: '10px 0',\r\n      position: 'relative',\r\n      display: 'inline-block',\r\n      cursor: isSelected ? 'move' : 'pointer'\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div \r\n      ref={containerRef}\r\n      style={getContainerStyle()}\r\n      onClick={handleImageClick}\r\n    >\r\n      <img\r\n        ref={imageRef}\r\n        src={src}\r\n        alt={alt || ''}\r\n        style={{\r\n          width: `${currentWidth}px`,\r\n          height: `${currentHeight}px`,\r\n          border: isSelected ? '2px solid #1976d2' : 'none',\r\n          borderRadius: isSelected ? '4px' : '0',\r\n          display: 'block',\r\n          margin: alignment === 'center' ? '0 auto' : '0'\r\n        }}\r\n        draggable={false}\r\n      />\r\n      \r\n      {/* Resize handles */}\r\n      {isSelected && !readOnly && (\r\n        <>\r\n          {/* Corner handle (bottom-right) */}\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: -4,\r\n              right: -4,\r\n              width: 8,\r\n              height: 8,\r\n              backgroundColor: '#1976d2',\r\n              cursor: 'se-resize',\r\n              borderRadius: '50%'\r\n            }}\r\n            onMouseDown={(e) => handleResizeStart(e, 'se')}\r\n          />\r\n          \r\n          {/* Right edge handle */}\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              right: -4,\r\n              top: '50%',\r\n              transform: 'translateY(-50%)',\r\n              width: 8,\r\n              height: 20,\r\n              backgroundColor: '#1976d2',\r\n              cursor: 'e-resize',\r\n              borderRadius: '4px'\r\n            }}\r\n            onMouseDown={(e) => handleResizeStart(e, 'e')}\r\n          />\r\n          \r\n          {/* Bottom edge handle */}\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              bottom: -4,\r\n              left: '50%',\r\n              transform: 'translateX(-50%)',\r\n              width: 20,\r\n              height: 8,\r\n              backgroundColor: '#1976d2',\r\n              cursor: 's-resize',\r\n              borderRadius: '4px'\r\n            }}\r\n            onMouseDown={(e) => handleResizeStart(e, 's')}\r\n          />\r\n\r\n          {/* Size info */}\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: -30,\r\n            left: '50%',\r\n            transform: 'translateX(-50%)',\r\n            backgroundColor: 'rgba(0,0,0,0.8)',\r\n            color: 'white',\r\n            padding: '4px 8px',\r\n            borderRadius: '4px',\r\n            fontSize: '12px',\r\n            whiteSpace: 'nowrap'\r\n          }}>\r\n            <span>{Math.round(currentWidth)} × {Math.round(currentHeight)}</span>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageComponent;","import { Link as MuiLink } from '@mui/material';\r\n\r\nconst LinkComponent = ({ children, entityKey, contentState }) => {\r\n  const entity = contentState.getEntity(entityKey);\r\n  const { url } = entity.getData();\r\n  \r\n  return (\r\n    <MuiLink\r\n      href={url}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      underline=\"hover\"\r\n      color=\"primary\"\r\n      sx={{\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n          textDecoration: 'underline',\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </MuiLink>\r\n  );\r\n};\r\n\r\nexport default LinkComponent;","import { useState } from 'react';\r\nimport { \r\n  Box, \r\n  Paper, \r\n  Typography, \r\n  IconButton, \r\n  Tooltip,\r\n  Link,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Button\r\n} from '@mui/material';\r\nimport { \r\n  OpenInNew, \r\n  Delete, \r\n  Refresh,\r\n  Language\r\n} from '@mui/icons-material';\r\n\r\nconst EmbedComponent = ({ \r\n  block, \r\n  contentState, \r\n  blockProps \r\n}) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  \r\n  const entity = contentState.getEntity(block.getEntityAt(0));\r\n  const { url, type = 'iframe', width = '100%', height = '400' } = entity.getData();\r\n  \r\n  // 获取 readonly 状态\r\n  const isReadOnly = blockProps?.readOnly || false;\r\n\r\n  const handleLoad = () => {\r\n    setLoading(false);\r\n    setError(false);\r\n  };\r\n\r\n  const handleError = () => {\r\n    setLoading(false);\r\n    setError(true);\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    setLoading(true);\r\n    setError(false);\r\n    // Force iframe reload by changing src\r\n    const iframe = document.querySelector(`iframe[data-embed-url=\"${url}\"]`);\r\n    if (iframe) {\r\n      iframe.src = iframe.src;\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (blockProps && blockProps.onRemove) {\r\n      blockProps.onRemove(block.getKey());\r\n    }\r\n  };\r\n\r\n  const getDomainFromUrl = (url) => {\r\n    try {\r\n      return new URL(url).hostname;\r\n    } catch {\r\n      return url;\r\n    }\r\n  };\r\n\r\n  if (type === 'preview') {\r\n    return (\r\n      <Box sx={{ my: 2 }}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n              <Language sx={{ mr: 1, color: 'text.secondary' }} />\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {getDomainFromUrl(url)}\r\n              </Typography>\r\n            </Box>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ mb: 1 }}>\r\n              Embedded Website\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\r\n              {url}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button \r\n              size=\"small\" \r\n              startIcon={<OpenInNew />}\r\n              onClick={() => window.open(url, '_blank')}\r\n            >\r\n              Open\r\n            </Button>\r\n            {/* 只在非 readonly 模式下显示 Remove 按钮 */}\r\n            {!isReadOnly && (\r\n              <Button \r\n                size=\"small\" \r\n                startIcon={<Delete />}\r\n                onClick={handleDelete}\r\n                color=\"error\"\r\n              >\r\n                Remove\r\n              </Button>\r\n            )}\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ my: 2 }}>\r\n      <Paper \r\n        variant=\"outlined\" \r\n        sx={{ \r\n          overflow: 'hidden',\r\n          position: 'relative'\r\n        }}\r\n      >\r\n        {/* Header - 修复暗色模式兼容性 */}\r\n        <Box sx={{ \r\n          display: 'flex', \r\n          alignItems: 'center', \r\n          justifyContent: 'space-between',\r\n          p: 1,\r\n          bgcolor: (theme) => theme.palette.mode === 'dark' \r\n            ? 'grey.900' \r\n            : 'grey.50',\r\n          borderBottom: '1px solid',\r\n          borderColor: 'divider'\r\n        }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Language sx={{ mr: 1, fontSize: 16, color: 'text.secondary' }} />\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {getDomainFromUrl(url)}\r\n            </Typography>\r\n          </Box>\r\n          \r\n          <Box>\r\n            <Tooltip title=\"Refresh\">\r\n              <IconButton size=\"small\" onClick={handleRefresh}>\r\n                <Refresh fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Open in new tab\">\r\n              <IconButton \r\n                size=\"small\" \r\n                onClick={() => window.open(url, '_blank')}\r\n              >\r\n                <OpenInNew fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            {/* 只在非 readonly 模式下显示 Remove 按钮 */}\r\n            {!isReadOnly && (\r\n              <Tooltip title=\"Remove embed\">\r\n                <IconButton \r\n                  size=\"small\" \r\n                  onClick={handleDelete}\r\n                  color=\"error\"\r\n                >\r\n                  <Delete fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* Loading indicator - 优化暗色模式 */}\r\n        {loading && (\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'center',\r\n            height: height + 'px',\r\n            bgcolor: (theme) => theme.palette.mode === 'dark' \r\n              ? 'grey.800' \r\n              : 'grey.100'\r\n          }}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Loading...\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n\r\n        {/* Error state - 优化暗色模式 */}\r\n        {error && (\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            flexDirection: 'column',\r\n            alignItems: 'center', \r\n            justifyContent: 'center',\r\n            height: height + 'px',\r\n            bgcolor: (theme) => theme.palette.mode === 'dark' \r\n              ? 'grey.800' \r\n              : 'grey.100',\r\n            textAlign: 'center',\r\n            p: 2\r\n          }}>\r\n            <Typography variant=\"body2\" color=\"error\" gutterBottom>\r\n              Failed to load website\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n              This website may not allow embedding or may be temporarily unavailable.\r\n            </Typography>\r\n            <Box sx={{ mt: 2 }}>\r\n              {/* 只在非 readonly 模式下显示 Try Again 按钮 */}\r\n              {!isReadOnly && (\r\n                <Button \r\n                  size=\"small\" \r\n                  variant=\"outlined\"\r\n                  startIcon={<Refresh />}\r\n                  onClick={handleRefresh}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  Try Again\r\n                </Button>\r\n              )}\r\n              <Button \r\n                size=\"small\" \r\n                variant=\"outlined\"\r\n                startIcon={<OpenInNew />}\r\n                onClick={() => window.open(url, '_blank')}\r\n              >\r\n                Open in New Tab\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n\r\n        {/* IFrame */}\r\n        <iframe\r\n          data-embed-url={url}\r\n          src={url}\r\n          width={width}\r\n          height={height + 'px'}\r\n          style={{ \r\n            border: 'none',\r\n            display: loading || error ? 'none' : 'block'\r\n          }}\r\n          onLoad={handleLoad}\r\n          onError={handleError}\r\n          title={`Embedded content from ${getDomainFromUrl(url)}`}\r\n          sandbox=\"allow-scripts allow-same-origin allow-forms allow-popups allow-presentation\"\r\n        />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EmbedComponent;","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport { Undo, Redo } from '@mui/icons-material';\r\n\r\nconst UndoRedoButtons = ({ editorState, onUndo, onRedo }) => (\r\n  <Box sx={{ display: 'flex', gap: 0 }}>\r\n    <Tooltip title=\"Undo\">\r\n      <span>\r\n      <IconButton \r\n        size=\"small\" \r\n        onClick={onUndo}\r\n        disabled={editorState.getUndoStack().size === 0}\r\n      >\r\n        <Undo fontSize=\"small\" />\r\n      </IconButton>\r\n      </span>\r\n    </Tooltip>\r\n    <Tooltip title=\"Redo\">\r\n      <span>\r\n      <IconButton \r\n        size=\"small\" \r\n        onClick={onRedo}\r\n        disabled={editorState.getRedoStack().size === 0}\r\n      >\r\n        <Redo fontSize=\"small\" />\r\n      </IconButton>\r\n      </span>\r\n    </Tooltip>\r\n  </Box>\r\n);\r\n\r\nexport default UndoRedoButtons;","import { FormControl, Select, MenuItem, Box } from '@mui/material';\r\n\r\nconst FontControls = ({ fontHandlers }) => (\r\n  <Box display=\"flex\" alignItems=\"center\" gap={0.5}>\r\n    <FormControl size=\"small\" sx={{ width: 100 }}>\r\n      <Select\r\n        value={fontHandlers.getCurrentFontFamily()}\r\n        onChange={(e) => fontHandlers.handleFontFamily(e.target.value)}\r\n        displayEmpty\r\n        sx={{ height: 32 }}\r\n      >\r\n        {fontHandlers.fontFamilies.map(family => (\r\n          <MenuItem key={family} value={family} sx={{ fontFamily: family }}>\r\n            {family}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n\r\n    <FormControl size=\"small\" sx={{ minWidth: 70 }}>\r\n      <Select\r\n        value={fontHandlers.getCurrentFontSize()}\r\n        onChange={(e) => fontHandlers.handleFontSize(e.target.value)}\r\n        sx={{ height: 32 }}\r\n      >\r\n        {fontHandlers.fontSizes.map(size => (\r\n          <MenuItem key={size} value={size}>\r\n            {size}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  </Box>\r\n);\r\n\r\nexport default FontControls;","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport {\r\n  FormatBold,\r\n  FormatItalic,\r\n  FormatUnderlined,\r\n  FormatStrikethrough,\r\n  Superscript,\r\n  Subscript,\r\n  Code\r\n} from '@mui/icons-material';\r\n\r\nconst TextStyleButtons = ({ editorState, onInlineStyle }) => {\r\n  const currentInlineStyle = editorState.getCurrentInlineStyle();\r\n\r\n  const styleButtons = [\r\n    { style: 'BOLD', icon: FormatBold, title: 'Bold' },\r\n    { style: 'ITALIC', icon: FormatItalic, title: 'Italic' },\r\n    { style: 'UNDERLINE', icon: FormatUnderlined, title: 'Underline' },\r\n    { style: 'STRIKETHROUGH', icon: FormatStrikethrough, title: 'Strikethrough' },\r\n    { style: 'SUPERSCRIPT', icon: Superscript, title: 'Superscript' },\r\n    { style: 'SUBSCRIPT', icon: Subscript, title: 'Subscript' },\r\n    { style: 'CODE', icon: Code, title: 'Code' }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', gap: 0 }}>\r\n      {styleButtons.map(({ style, icon: Icon, title }) => (\r\n        <Tooltip key={style} title={title}>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() => onInlineStyle(style)}\r\n            color={currentInlineStyle.has(style) ? 'primary' : 'default'}\r\n          >\r\n            <Icon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TextStyleButtons;","import { useState } from 'react';\r\nimport { \r\n  Box, \r\n  IconButton, \r\n  Tooltip, \r\n  Popover, \r\n  Grid,\r\n  Typography\r\n} from '@mui/material';\r\nimport {\r\n  FormatColorText,\r\n  FormatColorFill\r\n} from '@mui/icons-material';\r\n\r\nconst ColorButtons = ({ editorState, onInlineStyle }) => {\r\n  const [textColorAnchor, setTextColorAnchor] = useState(null);\r\n  const [highlightAnchor, setHighlightAnchor] = useState(null);\r\n  \r\n  const currentInlineStyle = editorState.getCurrentInlineStyle();\r\n\r\n  // 预定义颜色选项\r\n  const colors = [\r\n    { name: 'Black', value: '#000000' },\r\n    { name: 'Red', value: '#FF0000' },\r\n    { name: 'Green', value: '#00FF00' },\r\n    { name: 'Blue', value: '#0000FF' },\r\n    { name: 'Orange', value: '#FFA500' },\r\n    { name: 'Purple', value: '#800080' },\r\n    { name: 'Pink', value: '#FFC0CB' },\r\n    { name: 'Brown', value: '#A52A2A' },\r\n    { name: 'Gray', value: '#808080' },\r\n    { name: 'Navy', value: '#000080' },\r\n    { name: 'Teal', value: '#008080' },\r\n    { name: 'Maroon', value: '#800000' }\r\n  ];\r\n\r\n  const highlightColors = [\r\n    { name: 'None', value: 'transparent' },\r\n    { name: 'Yellow', value: '#FFFF00' },\r\n    { name: 'Green', value: '#90EE90' },\r\n    { name: 'Pink', value: '#FFB6C1' },\r\n    { name: 'Blue', value: '#ADD8E6' },\r\n    { name: 'Orange', value: '#FFE4B5' },\r\n    { name: 'Purple', value: '#DDA0DD' },\r\n    { name: 'Red', value: '#FFA07A' },\r\n    { name: 'Gray', value: '#D3D3D3' }\r\n  ];\r\n\r\n  const handleTextColorClick = (event) => {\r\n    setTextColorAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleHighlightClick = (event) => {\r\n    setHighlightAnchor(event.currentTarget);\r\n  };\r\n\r\n  const handleTextColorClose = () => {\r\n    setTextColorAnchor(null);\r\n  };\r\n\r\n  const handleHighlightClose = () => {\r\n    setHighlightAnchor(null);\r\n  };\r\n\r\n  const applyTextColor = (color) => {\r\n    // 移除所有现有的文字颜色样式\r\n    let newStyle = currentInlineStyle;\r\n    colors.forEach(c => {\r\n      const styleKey = `COLOR_${c.value.replace('#', '')}`;\r\n      if (newStyle.has(styleKey)) {\r\n        newStyle = newStyle.remove(styleKey);\r\n      }\r\n    });\r\n\r\n    // 应用新的文字颜色\r\n    const colorStyle = `COLOR_${color.replace('#', '')}`;\r\n    onInlineStyle(colorStyle);\r\n    handleTextColorClose();\r\n  };\r\n\r\n  const applyHighlightColor = (color) => {\r\n    // 移除所有现有的高亮颜色样式\r\n    let newStyle = currentInlineStyle;\r\n    highlightColors.forEach(c => {\r\n      const styleKey = `HIGHLIGHT_${c.value.replace('#', '').replace('transparent', 'NONE')}`;\r\n      if (newStyle.has(styleKey)) {\r\n        newStyle = newStyle.remove(styleKey);\r\n      }\r\n    });\r\n\r\n    // 应用新的高亮颜色\r\n    const highlightStyle = `HIGHLIGHT_${color.replace('#', '').replace('transparent', 'NONE')}`;\r\n    onInlineStyle(highlightStyle);\r\n    handleHighlightClose();\r\n  };\r\n\r\n  // 检查当前是否有文字颜色样式\r\n  const hasTextColor = colors.some(color => \r\n    currentInlineStyle.has(`COLOR_${color.value.replace('#', '')}`)\r\n  );\r\n\r\n  // 检查当前是否有高亮样式\r\n  const hasHighlight = highlightColors.some(color => \r\n    currentInlineStyle.has(`HIGHLIGHT_${color.value.replace('#', '').replace('transparent', 'NONE')}`)\r\n  );\r\n\r\n  const ColorPalette = ({ colors, onColorSelect, title }) => (\r\n    <Box sx={{ p: 2, width: 240 }}>\r\n      <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\r\n        {title}\r\n      </Typography>\r\n      <Grid container spacing={1}>\r\n        {colors.map((color) => (\r\n          <Grid item key={color.name}>\r\n            <Tooltip title={color.name}>\r\n              <Box\r\n                onClick={() => onColorSelect(color.value)}\r\n                sx={{\r\n                  width: 24,\r\n                  height: 24,\r\n                  backgroundColor: color.value === 'transparent' ? '#fff' : color.value,\r\n                  border: color.value === 'transparent' ? '2px solid #ddd' : '1px solid #ddd',\r\n                  borderRadius: 1,\r\n                  cursor: 'pointer',\r\n                  position: 'relative',\r\n                  '&:hover': {\r\n                    transform: 'scale(1.1)',\r\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\r\n                  },\r\n                  ...(color.value === 'transparent' && {\r\n                    '&::before': {\r\n                      content: '\"\"',\r\n                      position: 'absolute',\r\n                      top: '50%',\r\n                      left: '10%',\r\n                      right: '10%',\r\n                      height: '2px',\r\n                      backgroundColor: '#ff0000',\r\n                      transform: 'translateY(-50%) rotate(45deg)',\r\n                    }\r\n                  })\r\n                }}\r\n              />\r\n            </Tooltip>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', gap: 0.2}}>\r\n      {/* 文字颜色按钮 */}\r\n      <Tooltip title=\"Text Color\">\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={handleTextColorClick}\r\n          color={hasTextColor ? 'primary' : 'default'}\r\n        >\r\n          <FormatColorText fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      {/* 高亮颜色按钮 */}\r\n      <Tooltip title=\"Highlight Color\">\r\n        <IconButton\r\n          size=\"small\"\r\n          onClick={handleHighlightClick}\r\n          color={hasHighlight ? 'primary' : 'default'}\r\n        >\r\n          <FormatColorFill fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      {/* 文字颜色选择器弹窗 */}\r\n      <Popover\r\n        open={Boolean(textColorAnchor)}\r\n        anchorEl={textColorAnchor}\r\n        onClose={handleTextColorClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n      >\r\n        <ColorPalette \r\n          colors={colors} \r\n          onColorSelect={applyTextColor}\r\n          title=\"Text Color\"\r\n        />\r\n      </Popover>\r\n\r\n      {/* 高亮颜色选择器弹窗 */}\r\n      <Popover\r\n        open={Boolean(highlightAnchor)}\r\n        anchorEl={highlightAnchor}\r\n        onClose={handleHighlightClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n      >\r\n        <ColorPalette \r\n          colors={highlightColors} \r\n          onColorSelect={applyHighlightColor}\r\n          title=\"Highlight Color\"\r\n        />\r\n      </Popover>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorButtons;","export const createStyleMap = (fontSizes, fontFamilies) => {\r\n  const styleMap = {};\r\n\r\n  // 字体大小样式\r\n  if (fontSizes) {\r\n    fontSizes.forEach(size => {\r\n      styleMap[`FONTSIZE_${size}`] = {\r\n        fontSize: `${size}px`,\r\n      };\r\n    });\r\n  }\r\n\r\n  // 字体系列样式\r\n  if (fontFamilies) {\r\n    fontFamilies.forEach(family => {\r\n      const key = family.replace(/\\s+/g, '_').toUpperCase();\r\n      styleMap[`FONTFAMILY_${key}`] = {\r\n        fontFamily: family,\r\n      };\r\n    });\r\n  }\r\n\r\n  // 文字颜色样式\r\n  const colors = [\r\n    { name: 'Black', value: '#000000' },\r\n    { name: 'Red', value: '#FF0000' },\r\n    { name: 'Green', value: '#00FF00' },\r\n    { name: 'Blue', value: '#0000FF' },\r\n    { name: 'Orange', value: '#FFA500' },\r\n    { name: 'Purple', value: '#800080' },\r\n    { name: 'Pink', value: '#FFC0CB' },\r\n    { name: 'Brown', value: '#A52A2A' },\r\n    { name: 'Gray', value: '#808080' },\r\n    { name: 'Navy', value: '#000080' },\r\n    { name: 'Teal', value: '#008080' },\r\n    { name: 'Maroon', value: '#800000' }\r\n  ];\r\n\r\n  colors.forEach(color => {\r\n    const colorKey = color.value.replace('#', '');\r\n    styleMap[`COLOR_${colorKey}`] = {\r\n      color: color.value,\r\n    };\r\n  });\r\n\r\n  // 高亮颜色样式\r\n  const highlightColors = [\r\n    { name: 'Yellow', value: '#FFFF00' },\r\n    { name: 'Green', value: '#90EE90' },\r\n    { name: 'Pink', value: '#FFB6C1' },\r\n    { name: 'Blue', value: '#ADD8E6' },\r\n    { name: 'Orange', value: '#FFE4B5' },\r\n    { name: 'Purple', value: '#DDA0DD' },\r\n    { name: 'Red', value: '#FFA07A' },\r\n    { name: 'Gray', value: '#D3D3D3' }\r\n  ];\r\n\r\n  highlightColors.forEach(color => {\r\n    const colorKey = color.value.replace('#', '');\r\n    styleMap[`HIGHLIGHT_${colorKey}`] = {\r\n      backgroundColor: color.value,\r\n    };\r\n  });\r\n\r\n  // 移除高亮的特殊样式\r\n  styleMap['HIGHLIGHT_NONE'] = {\r\n    backgroundColor: 'transparent',\r\n  };\r\n\r\n  return styleMap;\r\n};\r\n\r\nexport const getBlockStyle = (block) => {\r\n  const blockData = block.getData();\r\n  const textAlign = blockData.get('text-align');\r\n  return textAlign ? `text-align-${textAlign}` : null;\r\n};\r\n\r\nexport const getCurrentBlockData = (editorState) => {\r\n  const selection = editorState.getSelection();\r\n  const currentContent = editorState.getCurrentContent();\r\n  const blockKey = selection.getStartKey();\r\n  const block = currentContent.getBlockForKey(blockKey);\r\n  return {\r\n    blockType: block.getType(),\r\n    blockData: block.getData(),\r\n    currentAlignment: block.getData().get('text-align')\r\n  };\r\n};","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport {\r\n  FormatAlignLeft,\r\n  FormatAlignCenter,\r\n  FormatAlignRight,\r\n  FormatAlignJustify\r\n} from '@mui/icons-material';\r\nimport { getCurrentBlockData } from '../../utils/editorUtils';\r\n\r\nconst AlignmentButtons = ({ editorState, onAlignment }) => {\r\n  const { currentAlignment } = getCurrentBlockData(editorState);\r\n\r\n  const alignmentButtons = [\r\n    { alignment: 'left', icon: FormatAlignLeft, title: 'Align Left' },\r\n    { alignment: 'center', icon: FormatAlignCenter, title: 'Align Center' },\r\n    { alignment: 'right', icon: FormatAlignRight, title: 'Align Right' },\r\n    { alignment: 'justify', icon: FormatAlignJustify, title: 'Justify' }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', gap: 0 }}>\r\n      {alignmentButtons.map(({ alignment, icon: Icon, title }) => (\r\n        <Tooltip key={alignment} title={title}>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() => onAlignment(alignment)}\r\n            color={currentAlignment === alignment ? 'primary' : 'default'}\r\n          >\r\n            <Icon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AlignmentButtons;","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport {\r\n  FormatListBulleted,\r\n  FormatListNumbered\r\n} from '@mui/icons-material';\r\nimport { getCurrentBlockData } from '../../utils/editorUtils';\r\n\r\nconst ListButtons = ({ editorState, onBlockType }) => {\r\n  const { blockType } = getCurrentBlockData(editorState);\r\n\r\n  const listButtons = [\r\n    { type: 'unordered-list-item', icon: FormatListBulleted, title: 'Bullet List' },\r\n    { type: 'ordered-list-item', icon: FormatListNumbered, title: 'Numbered List' }\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', gap: 0 }}>\r\n      {listButtons.map(({ type, icon: Icon, title }) => (\r\n        <Tooltip key={type} title={title}>\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={() => onBlockType(type)}\r\n            color={blockType === type ? 'primary' : 'default'}\r\n          >\r\n            <Icon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListButtons;","import { useState, useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@mui/material';\r\n\r\nconst ImageUrlDialog = ({ \r\n  open, \r\n  onClose, \r\n  imageUrl, \r\n  setImageUrl, \r\n  imageAlt, \r\n  setImageAlt, \r\n  onInsert \r\n}) => {\r\n  const [imageWidth, setImageWidth] = useState('300');\r\n  const [imageHeight, setImageHeight] = useState('200');\r\n  const [alignment, setAlignment] = useState('none');\r\n  const [previewLoaded, setPreviewLoaded] = useState(false);\r\n  const [previewError, setPreviewError] = useState(false);\r\n\r\n  const isValidUrl = (url) => {\r\n    try {\r\n      new URL(url);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleImageLoad = () => {\r\n    setPreviewLoaded(true);\r\n    setPreviewError(false);\r\n  };\r\n\r\n  const handleImageError = () => {\r\n    setPreviewLoaded(false);\r\n    setPreviewError(true);\r\n  };\r\n\r\n  const handleInsert = () => {\r\n    if (imageUrl.trim() && isValidUrl(imageUrl)) {\r\n      onInsert({\r\n        url: imageUrl.trim(),\r\n        alt: imageAlt.trim(),\r\n        width: parseInt(imageWidth) || 300,\r\n        height: parseInt(imageHeight) || 200,\r\n        alignment: alignment\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setImageUrl('');\r\n    setImageAlt('');\r\n    setImageWidth('300');\r\n    setImageHeight('200');\r\n    setAlignment('none');\r\n    setPreviewLoaded(false);\r\n    setPreviewError(false);\r\n    onClose();\r\n  };\r\n\r\n  // Auto-detect image dimensions when URL changes\r\n  useEffect(() => {\r\n    if (imageUrl && isValidUrl(imageUrl)) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const maxWidth = 500;\r\n        const maxHeight = 400;\r\n        let { width, height } = img;\r\n        \r\n        if (width > maxWidth || height > maxHeight) {\r\n          const ratio = Math.min(maxWidth / width, maxHeight / height);\r\n          width = Math.round(width * ratio);\r\n          height = Math.round(height * ratio);\r\n        }\r\n        \r\n        setImageWidth(width.toString());\r\n        setImageHeight(height.toString());\r\n        setPreviewLoaded(true);\r\n        setPreviewError(false);\r\n      };\r\n      img.onerror = () => {\r\n        setPreviewError(true);\r\n        setPreviewLoaded(false);\r\n      };\r\n      img.src = imageUrl;\r\n    } else {\r\n      setPreviewLoaded(false);\r\n      setPreviewError(false);\r\n    }\r\n  }, [imageUrl]);\r\n\r\n  return (\r\n    <Dialog \r\n      open={open} \r\n      onClose={handleCancel}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n    >\r\n      <DialogTitle>\r\n        Insert Image from URL\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Box sx={{ mt: 1 }}>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"Image URL\"\r\n            type=\"url\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={imageUrl}\r\n            onChange={(e) => setImageUrl(e.target.value)}\r\n            placeholder=\"https://example.com/image.jpg\"\r\n            sx={{ mb: 2 }}\r\n            error={!!(imageUrl && !isValidUrl(imageUrl))}\r\n            helperText={\r\n              imageUrl && !isValidUrl(imageUrl) \r\n                ? 'Please enter a valid URL' \r\n                : 'Enter the URL of the image you want to insert'\r\n            }\r\n          />\r\n          \r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Alt Text\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={imageAlt}\r\n            onChange={(e) => setImageAlt(e.target.value)}\r\n            placeholder=\"Description of the image\"\r\n            sx={{ mb: 2 }}\r\n            helperText=\"Alternative text for accessibility (optional)\"\r\n          />\r\n\r\n          <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Width (px)\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              value={imageWidth}\r\n              onChange={(e) => setImageWidth(e.target.value)}\r\n              placeholder=\"300\"\r\n              sx={{ flex: 1 }}\r\n              inputProps={{ min: 50, max: 1000 }}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Height (px)\"\r\n              type=\"number\"\r\n              variant=\"outlined\"\r\n              value={imageHeight}\r\n              onChange={(e) => setImageHeight(e.target.value)}\r\n              placeholder=\"200\"\r\n              sx={{ flex: 1 }}\r\n              inputProps={{ min: 50, max: 800 }}\r\n            />\r\n          </Box>\r\n\r\n          <FormControl fullWidth margin=\"dense\" sx={{ mb: 2 }}>\r\n            <InputLabel>Alignment</InputLabel>\r\n            <Select\r\n              value={alignment}\r\n              onChange={(e) => setAlignment(e.target.value)}\r\n              label=\"Alignment\"\r\n            >\r\n              <MenuItem value=\"none\">Default</MenuItem>\r\n              <MenuItem value=\"left\">Left</MenuItem>\r\n              <MenuItem value=\"center\">Center</MenuItem>\r\n              <MenuItem value=\"right\">Right</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* Image Preview */}\r\n          {imageUrl && isValidUrl(imageUrl) && (\r\n            <Box sx={{ mt: 2, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                Preview:\r\n              </Typography>\r\n              <Box sx={{ \r\n                display: 'flex',\r\n                justifyContent: alignment === 'center' ? 'center' : \r\n                              alignment === 'right' ? 'flex-end' : 'flex-start',\r\n                p: 1,\r\n                border: '1px solid #ddd',\r\n                borderRadius: 1,\r\n                bgcolor: 'white',\r\n                minHeight: '100px',\r\n                alignItems: 'center'\r\n              }}>\r\n                {previewError ? (\r\n                  <Box sx={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    justifyContent: 'center',\r\n                    height: '100px',\r\n                    color: 'error.main'\r\n                  }}>\r\n                    <Typography variant=\"body2\">\r\n                      Failed to load image\r\n                    </Typography>\r\n                  </Box>\r\n                ) : (\r\n                  <img\r\n                    src={imageUrl}\r\n                    alt={imageAlt || 'Preview'}\r\n                    style={{\r\n                      maxWidth: '100%',\r\n                      maxHeight: '200px',\r\n                      width: 'auto',\r\n                      height: 'auto',\r\n                      border: '1px solid #ddd',\r\n                      borderRadius: '4px'\r\n                    }}\r\n                    onLoad={handleImageLoad}\r\n                    onError={handleImageError}\r\n                  />\r\n                )}\r\n              </Box>\r\n              {previewLoaded && (\r\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                  Image will be resized to {imageWidth} × {imageHeight} pixels\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel}>Cancel</Button>\r\n        <Button \r\n          onClick={handleInsert} \r\n          variant=\"contained\"\r\n          disabled={!imageUrl.trim() || !isValidUrl(imageUrl)}\r\n        >\r\n          Insert Image\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ImageUrlDialog;","import { useState } from 'react';\r\nimport { \r\n  Box, \r\n  IconButton, \r\n  Tooltip, \r\n  Button, \r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem\r\n} from '@mui/material';\r\nimport { createRoot } from 'react-dom/client';\r\nimport {\r\n  Link,\r\n  LinkOff,\r\n  Image as ImageIcon\r\n} from '@mui/icons-material';\r\nimport DatasetLinkedIcon from '@mui/icons-material/DatasetLinked';\r\nimport ImageUrlDialog from './ImageUrlDialog'; // 引入我们刚创建的组件\r\n\r\nconst MiscButtons = ({ editorState, imageHandlers, fileInputRef, linkHandlers, embedHandlers }) => {\r\n  const [linkDialogOpen, setLinkDialogOpen] = useState(false);\r\n  const [linkUrl, setLinkUrl] = useState('');\r\n  const [linkText, setLinkText] = useState('');\r\n  const [isEditingLink, setIsEditingLink] = useState(false);\r\n  \r\n  // Embedded website states\r\n  const [embedDialogOpen, setEmbedDialogOpen] = useState(false);\r\n  const [embedUrl, setEmbedUrl] = useState('');\r\n  const [embedType, setEmbedType] = useState('iframe');\r\n  const [embedWidth, setEmbedWidth] = useState('100%');\r\n  const [embedHeight, setEmbedHeight] = useState('400');\r\n\r\n  const openFilePicker = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const handleImageMenuClick = (event) => {\r\n    const rect = event.currentTarget.getBoundingClientRect();\r\n    const menu = (\r\n      <Box sx={{\r\n        position: 'fixed',\r\n        top: rect.bottom + 5,\r\n        left: rect.left,\r\n        bgcolor: 'background.paper',\r\n        boxShadow: 3,\r\n        borderRadius: 1,\r\n        p: 1,\r\n        zIndex: 1000,\r\n        minWidth: 150\r\n      }}>\r\n        <Button\r\n          size=\"small\"\r\n          fullWidth\r\n          onClick={() => {\r\n            openFilePicker();\r\n            document.getElementById('image-menu')?.remove();\r\n          }}\r\n          sx={{ mb: 1, justifyContent: 'flex-start', textTransform: 'none' }}\r\n        >\r\n          From Local\r\n        </Button>\r\n        <Button\r\n          size=\"small\"\r\n          fullWidth\r\n          onClick={() => {\r\n            imageHandlers.setImageDialogOpen(true);\r\n            document.getElementById('image-menu')?.remove();\r\n          }}\r\n          sx={{ justifyContent: 'flex-start', textTransform: 'none' }}\r\n        >\r\n          From URL\r\n        </Button>\r\n      </Box>\r\n    );\r\n    \r\n    // Remove existing menu\r\n    document.getElementById('image-menu')?.remove();\r\n    \r\n    // Create new menu\r\n    const menuElement = document.createElement('div');\r\n    menuElement.id = 'image-menu';\r\n    document.body.appendChild(menuElement);\r\n    \r\n    const root = createRoot(menuElement);\r\n    root.render(menu);\r\n    \r\n    // Click outside to close\r\n    const handleClickOutside = () => {\r\n      document.getElementById('image-menu')?.remove();\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n    setTimeout(() => {\r\n      document.addEventListener('click', handleClickOutside);\r\n    }, 100);\r\n  };\r\n\r\n  const handleLinkClick = () => {\r\n    const selection = editorState.getSelection();\r\n    const selectedText = editorState.getCurrentContent()\r\n      .getBlockForKey(selection.getStartKey())\r\n      .getText()\r\n      .slice(selection.getStartOffset(), selection.getEndOffset());\r\n    \r\n    // Check if current selection is already a link\r\n    const currentEntity = linkHandlers.getCurrentLinkEntity(editorState);\r\n    \r\n    if (currentEntity) {\r\n      // Editing existing link\r\n      const entityData = editorState.getCurrentContent().getEntity(currentEntity).getData();\r\n      setLinkUrl(entityData.url || '');\r\n      setLinkText(selectedText || entityData.text || '');\r\n      setIsEditingLink(true);\r\n    } else {\r\n      // Creating new link\r\n      setLinkUrl('');\r\n      setLinkText(selectedText || '');\r\n      setIsEditingLink(false);\r\n    }\r\n    \r\n    setLinkDialogOpen(true);\r\n  };\r\n\r\n  const handleLinkSave = () => {\r\n    if (linkUrl.trim()) {\r\n      if (isEditingLink) {\r\n        linkHandlers.updateLink(linkUrl, linkText);\r\n      } else {\r\n        linkHandlers.insertLink(linkUrl, linkText);\r\n      }\r\n    }\r\n    handleLinkCancel();\r\n  };\r\n\r\n  const handleLinkCancel = () => {\r\n    setLinkDialogOpen(false);\r\n    setLinkUrl('');\r\n    setLinkText('');\r\n    setIsEditingLink(false);\r\n  };\r\n\r\n  const handleRemoveLink = () => {\r\n    linkHandlers.removeLink();\r\n  };\r\n\r\n  // Embedded website handlers\r\n  const handleEmbedClick = () => {\r\n    setEmbedDialogOpen(true);\r\n  };\r\n\r\n  const handleEmbedSave = () => {\r\n    if (embedUrl.trim()) {\r\n      const embedData = {\r\n        url: embedUrl,\r\n        type: embedType,\r\n        width: embedWidth,\r\n        height: embedHeight\r\n      };\r\n      \r\n      if (embedHandlers && embedHandlers.insertEmbed) {\r\n        embedHandlers.insertEmbed(embedData);\r\n      }\r\n    }\r\n    handleEmbedCancel();\r\n  };\r\n\r\n  const handleEmbedCancel = () => {\r\n    setEmbedDialogOpen(false);\r\n    setEmbedUrl('');\r\n    setEmbedType('iframe');\r\n    setEmbedWidth('100%');\r\n    setEmbedHeight('400');\r\n  };\r\n\r\n  // Image URL handlers\r\n  const handleImageUrlInsert = (imageData) => {\r\n    if (imageHandlers && imageHandlers.handleImageUrlInsert) {\r\n      imageHandlers.handleImageUrlInsert(imageData);\r\n    }\r\n  };\r\n\r\n  const isValidUrl = (url) => {\r\n    try {\r\n      new URL(url);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Check if current selection has a link\r\n  const hasLink = linkHandlers.getCurrentLinkEntity(editorState) !== null;\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ display: 'flex', gap: 0 }}>\r\n        \r\n        <Tooltip title={hasLink ? \"Edit Link\" : \"Insert Link\"}>\r\n          <IconButton \r\n            size=\"small\" \r\n            onClick={handleLinkClick}\r\n            color={hasLink ? 'primary' : 'default'}\r\n          >\r\n            <Link fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n        \r\n        {hasLink && (\r\n          <Tooltip title=\"Remove Link\">\r\n            <IconButton size=\"small\" onClick={handleRemoveLink}>\r\n              <LinkOff fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n\r\n        <Tooltip title=\"Embed Website\">\r\n          <IconButton size=\"small\" onClick={handleEmbedClick}>\r\n            <DatasetLinkedIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n        \r\n        <Tooltip title=\"Insert Image\">\r\n          <span>\r\n            <IconButton size=\"small\" onClick={handleImageMenuClick}>\r\n              <ImageIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n\r\n      </Box>\r\n\r\n      {/* Link Dialog */}\r\n      <Dialog \r\n        open={linkDialogOpen} \r\n        onClose={handleLinkCancel}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          {isEditingLink ? 'Edit Link' : 'Insert Link'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mt: 1 }}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"URL\"\r\n              type=\"url\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={linkUrl}\r\n              onChange={(e) => setLinkUrl(e.target.value)}\r\n              placeholder=\"https://example.com\"\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Display Text\"\r\n              type=\"text\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={linkText}\r\n              onChange={(e) => setLinkText(e.target.value)}\r\n              placeholder=\"Link text (optional)\"\r\n              helperText=\"Leave empty to use the URL as display text\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleLinkCancel}>Cancel</Button>\r\n          <Button \r\n            onClick={handleLinkSave} \r\n            variant=\"contained\"\r\n            disabled={!linkUrl.trim()}\r\n          >\r\n            {isEditingLink ? 'Update' : 'Insert'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Image URL Dialog */}\r\n      <ImageUrlDialog\r\n        open={imageHandlers.imageDialogOpen}\r\n        onClose={() => imageHandlers.setImageDialogOpen(false)}\r\n        imageUrl={imageHandlers.imageUrl}\r\n        setImageUrl={imageHandlers.setImageUrl}\r\n        imageAlt={imageHandlers.imageAlt}\r\n        setImageAlt={imageHandlers.setImageAlt}\r\n        onInsert={handleImageUrlInsert}\r\n      />\r\n\r\n      {/* Embed Website Dialog */}\r\n      <Dialog \r\n        open={embedDialogOpen} \r\n        onClose={handleEmbedCancel}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          Embed Website\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mt: 1 }}>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Website URL\"\r\n              type=\"url\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={embedUrl}\r\n              onChange={(e) => setEmbedUrl(e.target.value)}\r\n              placeholder=\"https://example.com\"\r\n              sx={{ mb: 2 }}\r\n              error={!!(embedUrl && !isValidUrl(embedUrl))}\r\n              helperText={embedUrl && !isValidUrl(embedUrl) ? 'Please enter a valid URL' : 'Enter the URL of the website you want to embed'}\r\n            />\r\n            \r\n            <FormControl fullWidth margin=\"dense\" sx={{ mb: 2 }}>\r\n              <InputLabel>Embed Type</InputLabel>\r\n              <Select\r\n                value={embedType}\r\n                onChange={(e) => setEmbedType(e.target.value)}\r\n                label=\"Embed Type\"\r\n              >\r\n                <MenuItem value=\"iframe\">IFrame</MenuItem>\r\n                <MenuItem value=\"preview\">Link Preview</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <Box sx={{ display: 'flex', gap: 2 }}>\r\n              <TextField\r\n                margin=\"dense\"\r\n                label=\"Width\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                value={embedWidth}\r\n                onChange={(e) => setEmbedWidth(e.target.value)}\r\n                placeholder=\"100%\"\r\n                sx={{ flex: 1 }}\r\n                helperText=\"e.g., 100%, 800px\"\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                label=\"Height\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                value={embedHeight}\r\n                onChange={(e) => setEmbedHeight(e.target.value)}\r\n                placeholder=\"400\"\r\n                sx={{ flex: 1 }}\r\n                helperText=\"Height in pixels\"\r\n              />\r\n            </Box>\r\n\r\n            {embedUrl && isValidUrl(embedUrl) && (\r\n              <Box sx={{ mt: 2, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                  Preview:\r\n                </Typography>\r\n                <Box sx={{ \r\n                  border: '1px solid #ddd', \r\n                  borderRadius: 1, \r\n                  overflow: 'hidden',\r\n                  height: '200px'\r\n                }}>\r\n                  <iframe\r\n                    src={embedUrl}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    style={{ border: 'none' }}\r\n                    title=\"Website Preview\"\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEmbedCancel}>Cancel</Button>\r\n          <span>\r\n            <Button \r\n              onClick={handleEmbedSave} \r\n              variant=\"contained\"\r\n              disabled={!embedUrl.trim() || !isValidUrl(embedUrl)}\r\n            >\r\n              Embed\r\n            </Button>\r\n          </span>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MiscButtons;","import { Fragment } from 'react';\r\nimport { \r\n  Toolbar, \r\n  Box, \r\n  Divider \r\n} from \"@mui/material\";\r\nimport UndoRedoButtons from './toolbar/UndoRedoButtons';\r\nimport FontControls from './toolbar/FontControls';\r\nimport TextStyleButtons from './toolbar/TextStyleButtons';\r\nimport ColorButtons from './toolbar/ColorButtons';  // 新增\r\nimport AlignmentButtons from './toolbar/AlignmentButtons';\r\nimport ListButtons from './toolbar/ListButtons';\r\nimport MiscButtons from './toolbar/MiscButtons';\r\n\r\nconst EditorToolbar = ({ \r\n  editorState, \r\n  handlers, \r\n  fontHandlers, \r\n  imageHandlers,\r\n  linkHandlers,\r\n  embedHandlers,\r\n  fileInputRef \r\n}) => {\r\n  const buttonGroups = [\r\n    {\r\n      key: 'undo-redo',\r\n      component: (\r\n        <UndoRedoButtons \r\n          editorState={editorState}\r\n          onUndo={handlers.handleUndo}\r\n          onRedo={handlers.handleRedo}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      key: 'font-controls',\r\n      component: (\r\n        <FontControls \r\n          fontHandlers={fontHandlers}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      key: 'color-controls',\r\n      component: (\r\n        <ColorButtons \r\n          editorState={editorState}\r\n          onInlineStyle={handlers.handleInlineStyle}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      key: 'text-style',\r\n      component: (\r\n        <TextStyleButtons \r\n          editorState={editorState}\r\n          onInlineStyle={handlers.handleInlineStyle}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      key: 'alignment',\r\n      component: (\r\n        <AlignmentButtons \r\n          editorState={editorState}\r\n          onAlignment={handlers.handleAlignment}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      key: 'list',\r\n      component: (\r\n        <ListButtons \r\n          editorState={editorState}\r\n          onBlockType={handlers.handleBlockType}\r\n        />\r\n      )\r\n    },\r\n    {\r\n      key: 'misc',\r\n      component: (\r\n        <MiscButtons \r\n          editorState={editorState}\r\n          imageHandlers={imageHandlers}\r\n          linkHandlers={linkHandlers}\r\n          embedHandlers={embedHandlers} // 新增\r\n          fileInputRef={fileInputRef}\r\n        />\r\n      )\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Toolbar \r\n      variant=\"dense\" \r\n      sx={{ \r\n        minHeight: 48,\r\n        borderBottom: '1px solid #e0e0e0',\r\n        flexWrap: 'wrap',\r\n        gap: 0,\r\n        px: 1,\r\n        py: 0.5,\r\n        alignItems: 'flex-start',\r\n      }}\r\n    >\r\n      {buttonGroups.map((group, index) => (\r\n        <Fragment key={group.key}>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              flexShrink: 0,\r\n              minHeight: 40,\r\n            }}\r\n          >\r\n            {group.component}\r\n          </Box>\r\n          \r\n          {index < buttonGroups.length - 1 && (\r\n            <Divider \r\n              orientation=\"vertical\" \r\n              flexItem \r\n              sx={{ \r\n                mx: 1,\r\n                alignSelf: 'stretch',\r\n                minHeight: 30,\r\n              }} \r\n            />\r\n          )}\r\n        </Fragment>\r\n      ))}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default EditorToolbar;","import { RichUtils } from 'draft-js';\r\n\r\nconst FONT_SIZES = [10, 11, 12, 14, 16, 18, 20, 22, 24, 30, 36, 48, 60];\r\nconst FONT_FAMILIES = ['Arial', 'Georgia', 'Times New Roman', \"Impact\", \"Verdana\"];\r\n\r\n// 辅助函数：将字体名称转换为样式键\r\nconst getFontFamilyStyleKey = (fontFamily) => {\r\n  return `FONTFAMILY_${fontFamily.replace(/\\s+/g, '_').toUpperCase()}`;\r\n};\r\n\r\nexport const useFontHandlers = (editorState, onEditorStateChange) => {\r\n  const handleFontSize = (fontSize) => {\r\n    const selection = editorState.getSelection();\r\n    let newEditorState = editorState;\r\n    \r\n    // Remove existing font sizes\r\n    FONT_SIZES.forEach(size => {\r\n      if (newEditorState.getCurrentInlineStyle().has(`FONTSIZE_${size}`)) {\r\n        newEditorState = RichUtils.toggleInlineStyle(newEditorState, `FONTSIZE_${size}`);\r\n      }\r\n    });\r\n    \r\n    onEditorStateChange(RichUtils.toggleInlineStyle(newEditorState, `FONTSIZE_${fontSize}`));\r\n  };\r\n\r\n  const handleFontFamily = (fontFamily) => {\r\n    let newEditorState = editorState;\r\n    \r\n    // Remove existing font families - 使用正确的样式键格式\r\n    FONT_FAMILIES.forEach(family => {\r\n      const styleKey = getFontFamilyStyleKey(family);\r\n      if (newEditorState.getCurrentInlineStyle().has(styleKey)) {\r\n        newEditorState = RichUtils.toggleInlineStyle(newEditorState, styleKey);\r\n      }\r\n    });\r\n    \r\n    // 应用新的字体样式\r\n    const newStyleKey = getFontFamilyStyleKey(fontFamily);\r\n    onEditorStateChange(RichUtils.toggleInlineStyle(newEditorState, newStyleKey));\r\n  };\r\n\r\n  const getCurrentFontSize = () => {\r\n    const currentStyle = editorState.getCurrentInlineStyle();\r\n    return FONT_SIZES.find(size => currentStyle.has(`FONTSIZE_${size}`)) || '';\r\n  };\r\n\r\n  const getCurrentFontFamily = () => {\r\n    const currentStyle = editorState.getCurrentInlineStyle();\r\n    return FONT_FAMILIES.find(family => {\r\n      const styleKey = getFontFamilyStyleKey(family);\r\n      return currentStyle.has(styleKey);\r\n    }) || '';\r\n  };\r\n\r\n  return {\r\n    handleFontSize,\r\n    handleFontFamily,\r\n    getCurrentFontSize,\r\n    getCurrentFontFamily,\r\n    fontSizes: FONT_SIZES,\r\n    fontFamilies: FONT_FAMILIES\r\n  };\r\n};","import { useRef } from 'react';\r\nimport ImageComponent from './components/ImageComponent';\r\nimport LinkComponent from './components/LinkComponent';\r\nimport EmbedComponent from './components/EmbedComponent'; // 新增\r\nimport { Box } from \"@mui/material\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport EditorToolbar from './components/EditorToolbar';\r\nimport { useEditorHandlers } from './hooks/useEditorHandlers';\r\nimport { useFontHandlers } from './hooks/useFontHandlers';\r\nimport { useImageHandlers } from './hooks/useImageHandlers';\r\nimport { useLinkHandlers } from './hooks/useLinkHandlers';\r\nimport { useEmbedHandlers } from './hooks/useEmbedHandlers'; // 新增\r\nimport { createStyleMap, getBlockStyle } from './utils/editorUtils';\r\n\r\nconst DraftJsWysiwyg = ({  \r\n  editorState,  \r\n  onEditorStateChange,  \r\n  placeholder = \"\", \r\n  readOnly = false\r\n}) => {\r\n  const fileInputRef = useRef(null);\r\n  \r\n  const handlers = !readOnly ? useEditorHandlers(editorState, onEditorStateChange) : null;\r\n  const fontHandlers = !readOnly ? useFontHandlers(editorState, onEditorStateChange) : null;\r\n  const imageHandlers = !readOnly ? useImageHandlers(editorState, onEditorStateChange) : null;\r\n  const linkHandlers = !readOnly ? useLinkHandlers(editorState, onEditorStateChange) : null;\r\n  const embedHandlers = !readOnly ? useEmbedHandlers(editorState, onEditorStateChange) : null; // 新增\r\n\r\n  const blockRendererFn = (block) => {\r\n    if (block.getType() === 'atomic') {\r\n      const entity = editorState.getCurrentContent().getEntity(block.getEntityAt(0));\r\n      if (entity) {\r\n        const entityType = entity.getType();\r\n        \r\n        if (entityType === 'IMAGE') {\r\n          return {\r\n            component: ImageComponent,\r\n            editable: false,\r\n          };\r\n        }\r\n        \r\n        // 新增：处理嵌入网站\r\n        if (entityType === 'EMBED') {\r\n          return {\r\n            component: EmbedComponent,\r\n            editable: false,\r\n            props: {\r\n              onRemove: embedHandlers?.removeEmbed,\r\n              readOnly: readOnly, // 传递 readOnly 属性\r\n            },\r\n          };\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // 实体装饰器，用于渲染链接\r\n  const decorators = [\r\n    {\r\n      strategy: (contentBlock, callback, contentState) => {\r\n        contentBlock.findEntityRanges(\r\n          (character) => {\r\n            const entityKey = character.getEntity();\r\n            return (\r\n              entityKey !== null &&\r\n              contentState.getEntity(entityKey).getType() === 'LINK'\r\n            );\r\n          },\r\n          callback\r\n        );\r\n      },\r\n      component: ({ children, entityKey, contentState }) => (\r\n        <LinkComponent entityKey={entityKey} contentState={contentState}>\r\n          {children}\r\n        </LinkComponent>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 修复：在 readonly 模式下也要创建完整的样式映射\r\n  const FONT_SIZES = [10, 11, 12, 14, 16, 18, 20, 22, 24, 30, 36, 48, 60];\r\n  const FONT_FAMILIES = ['Arial', 'Georgia', 'Impact', 'Tahoma', 'Times New Roman', 'Verdana'];\r\n  \r\n  const styleMap = createStyleMap(\r\n    fontHandlers?.fontSizes || FONT_SIZES, \r\n    fontHandlers?.fontFamilies || FONT_FAMILIES\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: !readOnly ? '100%' : 'auto', // 在非readonly模式下占据全部高度\r\n        minHeight: 0, // 重要：允许flex子元素收缩\r\n      }}\r\n    >\r\n      <style>{`\r\n        .text-align-left { text-align: left !important; }\r\n        .text-align-center { text-align: center !important; }\r\n        .text-align-right { text-align: right !important; }\r\n        .text-align-justify { text-align: justify !important; }\r\n        .public-DraftEditor-content div[data-block=\"true\"] {\r\n          margin-bottom: 10px !important;\r\n        }\r\n      `}</style>\r\n\r\n      {!readOnly && (\r\n        <>\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n            accept=\"image/*\"\r\n            onChange={imageHandlers.handleFileUpload}\r\n          />\r\n          <Box sx={{ flexShrink: 0 }}> {/* 防止工具栏被压缩 */}\r\n            <EditorToolbar\r\n              editorState={editorState}\r\n              handlers={handlers}\r\n              fontHandlers={fontHandlers}\r\n              imageHandlers={imageHandlers}\r\n              linkHandlers={linkHandlers}\r\n              embedHandlers={embedHandlers} // 新增\r\n              fileInputRef={fileInputRef}\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n\r\n      <Box\r\n        sx={{\r\n          width: !readOnly ? 870 : 'auto',\r\n          maxWidth: '100%', // 防止溢出\r\n          border: !readOnly ? 'none' : 'none',\r\n          borderLeft: !readOnly ? '1px solid #e0e0e0' : 'none',\r\n          borderRight: !readOnly ? '1px solid #e0e0e0' : 'none',\r\n          borderBottom: !readOnly ? '1px solid #e0e0e0' : 'none',\r\n          margin: !readOnly ? '0 auto' : 'none',\r\n          padding: !readOnly ? '10px' : 'none',\r\n          flex: !readOnly ? 1 : 'none', // 在非readonly模式下占据剩余空间\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          minHeight: 0, // 重要：允许flex子元素收缩\r\n          overflow: !readOnly ? 'hidden' : 'visible', // 在非readonly模式下隐藏溢出\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            flex: 1,\r\n            overflow: !readOnly ? 'auto' : 'visible', // 在非readonly模式下允许滚动\r\n            minHeight: !readOnly ? '400px' : 'auto', // 设置最小高度\r\n            '& .rdw-editor-main': {\r\n              height: !readOnly ? '100%' : 'auto',\r\n              minHeight: !readOnly ? '100%' : 'auto',\r\n            },\r\n            '& .DraftEditor-root': {\r\n              height: !readOnly ? '100%' : 'auto',\r\n              minHeight: !readOnly ? '100%' : 'auto',\r\n            },\r\n            '& .DraftEditor-editorContainer': {\r\n              height: !readOnly ? '100%' : 'auto',\r\n              minHeight: !readOnly ? '100%' : 'auto',\r\n            },\r\n            '& .public-DraftEditor-content': {\r\n              height: !readOnly ? '100%' : 'auto',\r\n              minHeight: !readOnly ? '300px' : 'auto', // 给编辑器内容设置最小高度\r\n            }\r\n          }}\r\n        >\r\n          <Editor\r\n            editorState={editorState}\r\n            onEditorStateChange={onEditorStateChange}\r\n            placeholder={placeholder}\r\n            readOnly={readOnly}\r\n            handleKeyCommand={handlers?.handleKeyCommand}\r\n            customStyleMap={styleMap}\r\n            blockStyleFn={getBlockStyle}\r\n            blockRendererFn={blockRendererFn}\r\n            decorators={decorators}\r\n            toolbarHidden={true}\r\n            mention={{\r\n              separator: \" \",\r\n              trigger: \"@\",\r\n            }}\r\n            editorStyle={{\r\n              height: !readOnly ? '100%' : 'auto',\r\n              minHeight: !readOnly ? '100%' : 'auto',\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DraftJsWysiwyg;","import { RichUtils, EditorState, Modifier, AtomicBlockUtils } from 'draft-js';\r\n\r\nexport const useEditorHandlers = (editorState, onEditorStateChange) => {\r\n  const handleKeyCommand = (command, editorState) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      onEditorStateChange(newState);\r\n      return 'handled';\r\n    }\r\n    return 'not-handled';\r\n  };\r\n\r\n  const handleInlineStyle = (style) => {\r\n    onEditorStateChange(RichUtils.toggleInlineStyle(editorState, style));\r\n  };\r\n\r\n  const handleBlockType = (blockType) => {\r\n    onEditorStateChange(RichUtils.toggleBlockType(editorState, blockType));\r\n  };\r\n\r\n  const handleAlignment = (alignment) => {\r\n    const selection = editorState.getSelection();\r\n    const currentContent = editorState.getCurrentContent();\r\n    const blockKey = selection.getStartKey();\r\n    const block = currentContent.getBlockForKey(blockKey);\r\n    \r\n    const blockData = block.getData();\r\n    const currentAlign = blockData.get('text-align');\r\n    const newAlignment = currentAlign === alignment ? undefined : alignment;\r\n    \r\n    const newBlockData = newAlignment \r\n      ? blockData.set('text-align', newAlignment)\r\n      : blockData.delete('text-align');\r\n    \r\n    const newContentState = Modifier.setBlockData(\r\n      currentContent,\r\n      selection,\r\n      newBlockData\r\n    );\r\n    \r\n    const newEditorState = EditorState.push(\r\n      editorState,\r\n      newContentState,\r\n      'change-block-data'\r\n    );\r\n    \r\n    onEditorStateChange(newEditorState);\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    onEditorStateChange(EditorState.undo(editorState));\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    onEditorStateChange(EditorState.redo(editorState));\r\n  };\r\n\r\n  return {\r\n    handleKeyCommand,\r\n    handleInlineStyle,\r\n    handleBlockType,\r\n    handleAlignment,\r\n    handleUndo,\r\n    handleRedo\r\n  };\r\n};","\r\nimport { useState } from 'react';\r\nimport { EditorState, AtomicBlockUtils, Modifier } from 'draft-js';\r\n\r\nexport const useImageHandlers = (editorState, onEditorStateChange) => {\r\n  const [imageDialogOpen, setImageDialogOpen] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [imageAlt, setImageAlt] = useState('');\r\n\r\n  const insertImage = (src, alt = '', width = 300, height = 200, alignment = 'none') => {\r\n    const contentState = editorState.getCurrentContent();\r\n    const contentStateWithEntity = contentState.createEntity(\r\n      'IMAGE',\r\n      'IMMUTABLE',\r\n      { \r\n        src, \r\n        alt, \r\n        width: `${width}px`, // 保持与 ImageComponent 兼容的格式\r\n        height: `${height}px` \r\n      }\r\n    );\r\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n    \r\n    // 创建新的编辑器状态\r\n    let newEditorState = EditorState.set(editorState, {\r\n      currentContent: contentStateWithEntity,\r\n    });\r\n    \r\n    // 插入原子块\r\n    newEditorState = AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' ');\r\n    \r\n    // 如果有对齐设置，应用到新创建的块\r\n    if (alignment && alignment !== 'none') {\r\n      const currentContent = newEditorState.getCurrentContent();\r\n      const selection = newEditorState.getSelection();\r\n      const blockKey = selection.getStartKey();\r\n      const block = currentContent.getBlockForKey(blockKey);\r\n      \r\n      // 设置块的对齐数据\r\n      const newBlockData = block.getData().set('text-align', alignment);\r\n      const newContentState = Modifier.setBlockData(\r\n        currentContent,\r\n        selection,\r\n        newBlockData\r\n      );\r\n      \r\n      newEditorState = EditorState.push(\r\n        newEditorState,\r\n        newContentState,\r\n        'change-block-data'\r\n      );\r\n    }\r\n    \r\n    onEditorStateChange(newEditorState);\r\n  };\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type.startsWith('image/')) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n          const maxWidth = 500;\r\n          const maxHeight = 400;\r\n          let { width, height } = img;\r\n          \r\n          if (width > maxWidth || height > maxHeight) {\r\n            const ratio = Math.min(maxWidth / width, maxHeight / height);\r\n            width *= ratio;\r\n            height *= ratio;\r\n          }\r\n          \r\n          insertImage(e.target.result, file.name, Math.round(width), Math.round(height));\r\n        };\r\n        img.src = e.target.result;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n    event.target.value = '';\r\n  };\r\n\r\n  // 更新的 URL 插入处理函数\r\n  const handleImageUrlInsert = (imageData) => {\r\n    if (imageData && imageData.url) {\r\n      insertImage(\r\n        imageData.url,\r\n        imageData.alt || '',\r\n        imageData.width || 300,\r\n        imageData.height || 200,\r\n        imageData.alignment || 'none'\r\n      );\r\n    }\r\n    \r\n    // 清理状态\r\n    setImageUrl('');\r\n    setImageAlt('');\r\n    setImageDialogOpen(false);\r\n  };\r\n\r\n  // 保持向后兼容的旧方法\r\n  const handleImageUrlInsertLegacy = () => {\r\n    if (imageUrl.trim()) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const maxWidth = 500;\r\n        const maxHeight = 400;\r\n        let { width, height } = img;\r\n        \r\n        if (width > maxWidth || height > maxHeight) {\r\n          const ratio = Math.min(maxWidth / width, maxHeight / height);\r\n          width *= ratio;\r\n          height *= ratio;\r\n        }\r\n        \r\n        insertImage(imageUrl.trim(), imageAlt.trim(), Math.round(width), Math.round(height));\r\n      };\r\n      img.onerror = () => {\r\n        insertImage(imageUrl.trim(), imageAlt.trim(), 300, 200);\r\n      };\r\n      img.src = imageUrl.trim();\r\n      \r\n      setImageUrl('');\r\n      setImageAlt('');\r\n      setImageDialogOpen(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    imageDialogOpen,\r\n    setImageDialogOpen,\r\n    imageUrl,\r\n    setImageUrl,\r\n    imageAlt,\r\n    setImageAlt,\r\n    handleFileUpload,\r\n    handleImageUrlInsert, // 新的处理函数\r\n    handleImageUrlInsertLegacy, // 向后兼容的处理函数\r\n    insertImage // 导出基础插入函数供其他地方使用\r\n  };\r\n};","import { useState } from 'react';\r\nimport { \r\n  EditorState, \r\n  RichUtils, \r\n  SelectionState,\r\n  Modifier\r\n} from 'draft-js';\r\n\r\nexport const useLinkHandlers = (editorState, onEditorStateChange) => {\r\n  const [linkDialogOpen, setLinkDialogOpen] = useState(false);\r\n\r\n  // 获取当前选择的链接实体\r\n  const getCurrentLinkEntity = (editorState) => {\r\n    const selection = editorState.getSelection();\r\n    const contentState = editorState.getCurrentContent();\r\n    const startKey = selection.getStartKey();\r\n    const startOffset = selection.getStartOffset();\r\n    const blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\r\n    const linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\r\n\r\n    if (linkKey) {\r\n      const linkInstance = contentState.getEntity(linkKey);\r\n      if (linkInstance.getType() === 'LINK') {\r\n        return linkKey;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // 插入新链接\r\n  const insertLink = (url, text) => {\r\n    const selection = editorState.getSelection();\r\n    const contentState = editorState.getCurrentContent();\r\n    \r\n    // 创建链接实体\r\n    const contentStateWithEntity = contentState.createEntity(\r\n      'LINK',\r\n      'MUTABLE',\r\n      { url, text }\r\n    );\r\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n    \r\n    let newContentState;\r\n    let newEditorState;\r\n    \r\n    if (selection.isCollapsed()) {\r\n      // 如果没有选中文本，插入新文本\r\n      const textToInsert = text || url;\r\n      newContentState = Modifier.insertText(\r\n        contentStateWithEntity,\r\n        selection,\r\n        textToInsert,\r\n        null,\r\n        entityKey\r\n      );\r\n    } else {\r\n      // 如果有选中文本，为选中的文本添加链接\r\n      newContentState = Modifier.applyEntity(\r\n        contentStateWithEntity,\r\n        selection,\r\n        entityKey\r\n      );\r\n    }\r\n    \r\n    newEditorState = EditorState.push(\r\n      editorState,\r\n      newContentState,\r\n      'apply-entity'\r\n    );\r\n    \r\n    // 移动光标到链接文本的末尾\r\n    if (selection.isCollapsed()) {\r\n      const textToInsert = text || url;\r\n      const newSelection = selection.merge({\r\n        anchorOffset: selection.getAnchorOffset() + textToInsert.length,\r\n        focusOffset: selection.getFocusOffset() + textToInsert.length,\r\n      });\r\n      newEditorState = EditorState.forceSelection(newEditorState, newSelection);\r\n    }\r\n    \r\n    onEditorStateChange(newEditorState);\r\n  };\r\n\r\n  // 更新现有链接\r\n  const updateLink = (url, text) => {\r\n    const selection = editorState.getSelection();\r\n    const contentState = editorState.getCurrentContent();\r\n    const currentEntity = getCurrentLinkEntity(editorState);\r\n    \r\n    if (currentEntity) {\r\n      // 更新实体数据\r\n      const newContentState = contentState.mergeEntityData(\r\n        currentEntity,\r\n        { url, text }\r\n      );\r\n      \r\n      const newEditorState = EditorState.push(\r\n        editorState,\r\n        newContentState,\r\n        'apply-entity'\r\n      );\r\n      \r\n      onEditorStateChange(newEditorState);\r\n    }\r\n  };\r\n\r\n  // 移除链接\r\n  const removeLink = () => {\r\n    const selection = editorState.getSelection();\r\n    const currentEntity = getCurrentLinkEntity(editorState);\r\n    \r\n    if (currentEntity) {\r\n      // 找到整个链接的范围\r\n      const contentState = editorState.getCurrentContent();\r\n      const startKey = selection.getStartKey();\r\n      const block = contentState.getBlockForKey(startKey);\r\n      \r\n      let linkStart = null;\r\n      let linkEnd = null;\r\n      \r\n      // 找到链接的开始和结束位置\r\n      block.findEntityRanges(\r\n        (character) => {\r\n          const entityKey = character.getEntity();\r\n          return entityKey === currentEntity;\r\n        },\r\n        (start, end) => {\r\n          linkStart = start;\r\n          linkEnd = end;\r\n        }\r\n      );\r\n      \r\n      if (linkStart !== null && linkEnd !== null) {\r\n        const linkSelection = SelectionState.createEmpty(startKey).merge({\r\n          anchorOffset: linkStart,\r\n          focusOffset: linkEnd,\r\n        });\r\n        \r\n        const newContentState = Modifier.applyEntity(\r\n          contentState,\r\n          linkSelection,\r\n          null\r\n        );\r\n        \r\n        const newEditorState = EditorState.push(\r\n          editorState,\r\n          newContentState,\r\n          'apply-entity'\r\n        );\r\n        \r\n        onEditorStateChange(newEditorState);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 检查当前选择是否包含链接\r\n  const hasLinkInSelection = () => {\r\n    return getCurrentLinkEntity(editorState) !== null;\r\n  };\r\n\r\n  return {\r\n    linkDialogOpen,\r\n    setLinkDialogOpen,\r\n    getCurrentLinkEntity,\r\n    insertLink,\r\n    updateLink,\r\n    removeLink,\r\n    hasLinkInSelection\r\n  };\r\n};","import { useState } from 'react';\r\nimport { EditorState, AtomicBlockUtils } from 'draft-js';\r\n\r\nexport const useEmbedHandlers = (editorState, onEditorStateChange) => {\r\n  const [embedDialogOpen, setEmbedDialogOpen] = useState(false);\r\n\r\n  const insertEmbed = (embedData) => {\r\n    const contentState = editorState.getCurrentContent();\r\n    const contentStateWithEntity = contentState.createEntity(\r\n      'EMBED',\r\n      'IMMUTABLE',\r\n      embedData\r\n    );\r\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n    const newEditorState = EditorState.set(editorState, {\r\n      currentContent: contentStateWithEntity,\r\n    });\r\n    \r\n    const finalEditorState = AtomicBlockUtils.insertAtomicBlock(\r\n      newEditorState,\r\n      entityKey,\r\n      ' '\r\n    );\r\n    \r\n    onEditorStateChange(finalEditorState);\r\n  };\r\n\r\n  const removeEmbed = (blockKey) => {\r\n    const contentState = editorState.getCurrentContent();\r\n    const blockMap = contentState.getBlockMap();\r\n    const newBlockMap = blockMap.delete(blockKey);\r\n    \r\n    const newContentState = contentState.merge({\r\n      blockMap: newBlockMap,\r\n    });\r\n    \r\n    const newEditorState = EditorState.push(\r\n      editorState,\r\n      newContentState,\r\n      'remove-range'\r\n    );\r\n    \r\n    onEditorStateChange(newEditorState);\r\n  };\r\n\r\n  return {\r\n    embedDialogOpen,\r\n    setEmbedDialogOpen,\r\n    insertEmbed,\r\n    removeEmbed,\r\n  };\r\n};","// ./services/BlogService.js\r\nimport api from './api';\r\n\r\nconst BlogService = {\r\n  // 获取指定 ID 的博客\r\n  getBlog: async (blogId, accessToken) => {\r\n    try {\r\n      const response = await api.get(`/blog/${blogId}/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching blog:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 添加新博客\r\n  addBlog: async (blogData, accessToken) => {\r\n    try {\r\n      // 1. 创建一个 FormData 对象\r\n      const formData = new FormData();\r\n  \r\n      // 2. 将 blogData 对象中的每个字段添加到 formData\r\n      for (const [key, value] of Object.entries(blogData)) {\r\n        formData.append(key, value);\r\n      }\r\n  \r\n      // 3. 发送 POST 请求，并设置请求头为 multipart/form-data\r\n      const response = await api.post('/add_blog/', formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n      });\r\n  \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error adding blog:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n\r\n  // 编辑博客（支持部分更新）\r\n  editBlog: async (blogId, blogData, accessToken, isPartial = true) => {\r\n      try {\r\n          console.log(blogData);\r\n          const method = isPartial ? 'patch' : 'put';\r\n\r\n          // 创建 FormData 对象\r\n          const formData = new FormData();\r\n          for (const key in blogData) {\r\n              if (blogData[key] !== undefined && blogData[key] !== null) {\r\n                  formData.append(key, blogData[key]);\r\n              }\r\n          }\r\n\r\n          const response = await api[method](`/edit_blog/${blogId}/`, formData, {\r\n              headers: {\r\n                  Authorization: `Bearer ${accessToken}`,\r\n                  'Content-Type': 'multipart/form-data',\r\n              },\r\n          });\r\n\r\n          return response.data;\r\n      } catch (error) {\r\n          console.error('Error editing blog:', error);\r\n          throw error;\r\n      }\r\n  },\r\n\r\n  toggleVisibility: async (blogId, accessToken) => {\r\n    try {\r\n      const response = await api.patch(`/edit_visibility/${blogId}/`, null, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error toggling blog visibility:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getMeta: async (accessToken, page = null, pageSize = null) => {\r\n    try {\r\n      // 创建 FormData 对象\r\n      const formData = new FormData();\r\n      \r\n      if (page !== null && pageSize !== null) {\r\n        formData.append('page', page);\r\n        formData.append('page_size', pageSize);\r\n      }\r\n\r\n      const response = await api.post('/get_blog_meta/', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching blog metadata:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 删除博客\r\n  deleteBlog: async (blogId, accessToken) => {\r\n    try {\r\n      const response = await api.delete(`/delete_blog/${blogId}/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      return response.status;\r\n    } catch (error) {\r\n      console.error('Error deleting blog:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 获取草稿\r\n  getDraft: async (username, accessToken) => {\r\n    try {\r\n      const response = await api.get(`/get_draft_blog/${username}/`, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching draft:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // 保存草稿\r\n  saveDraft: async (draftData, accessToken) => {\r\n    try {\r\n      // 1. 创建一个 FormData 对象\r\n      const formData = new FormData();\r\n      // 2. 把 draftData 里的键值对添加到 formData\r\n      for (const [key, value] of Object.entries(draftData)) {\r\n        formData.append(key, value);\r\n      }\r\n  \r\n      // 3. 发起 POST 请求，Content-Type 将会是 multipart/form-data\r\n      const response = await api.post('/save_draft_blog/', formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n  \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error saving draft:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n};\r\n\r\nexport default BlogService;\r\n"],"names":["_ref","block","contentState","editorState","onEditorStateChange","readOnly","entityData","getEntity","getEntityAt","getData","src","alt","originalWidth","width","originalHeight","height","parseSize","size","defaultValue","numValue","parseInt","replace","isNaN","isSelected","setIsSelected","useState","isResizing","setIsResizing","currentWidth","setCurrentWidth","currentHeight","setCurrentHeight","imageRef","useRef","containerRef","alignment","get","useEffect","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","handleResizeStart","direction","preventDefault","stopPropagation","startX","clientX","startY","clientY","startWidth","startHeight","aspectRatio","handleMouseMove","deltaX","deltaY","newWidth","newHeight","Math","max","min","handleMouseUp","updateImageSize","getCurrentContent","entityKey","newEntityData","newContentState","replaceEntityData","newEditorState","EditorState","push","error","console","warn","_jsxs","ref","style","getContainerStyle","textAlign","margin","position","display","cursor","onClick","children","_jsx","border","borderRadius","draggable","_Fragment","bottom","right","backgroundColor","onMouseDown","top","transform","left","color","padding","fontSize","whiteSpace","round","entity","url","MuiLink","href","rel","underline","sx","textDecoration","blockProps","loading","setLoading","setError","type","isReadOnly","handleRefresh","iframe","querySelector","handleDelete","onRemove","getKey","getDomainFromUrl","URL","hostname","Box","my","Card","variant","CardContent","alignItems","mb","Language","mr","Typography","component","CardActions","Button","startIcon","OpenInNew","window","open","Delete","Paper","overflow","justifyContent","p","bgcolor","theme","palette","mode","borderBottom","borderColor","Tooltip","title","IconButton","Refresh","flexDirection","gutterBottom","mt","onLoad","handleLoad","onError","handleError","sandbox","onUndo","onRedo","gap","disabled","getUndoStack","Undo","getRedoStack","Redo","fontHandlers","FormControl","Select","value","getCurrentFontFamily","onChange","handleFontFamily","displayEmpty","fontFamilies","map","family","MenuItem","fontFamily","minWidth","getCurrentFontSize","handleFontSize","fontSizes","onInlineStyle","currentInlineStyle","getCurrentInlineStyle","styleButtons","icon","FormatBold","FormatItalic","FormatUnderlined","FormatStrikethrough","Superscript","Subscript","Code","_ref2","Icon","has","textColorAnchor","setTextColorAnchor","highlightAnchor","setHighlightAnchor","colors","name","highlightColors","handleTextColorClose","handleHighlightClose","hasTextColor","some","hasHighlight","ColorPalette","onColorSelect","Grid","container","spacing","item","boxShadow","content","event","currentTarget","FormatColorText","FormatColorFill","Popover","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","newStyle","forEach","c","styleKey","remove","colorStyle","highlightStyle","getBlockStyle","getCurrentBlockData","selection","getSelection","currentContent","blockKey","getStartKey","getBlockForKey","blockType","getType","blockData","currentAlignment","onAlignment","alignmentButtons","FormatAlignLeft","FormatAlignCenter","FormatAlignRight","FormatAlignJustify","onBlockType","listButtons","FormatListBulleted","FormatListNumbered","imageUrl","setImageUrl","imageAlt","setImageAlt","onInsert","imageWidth","setImageWidth","imageHeight","setImageHeight","setAlignment","previewLoaded","setPreviewLoaded","previewError","setPreviewError","isValidUrl","handleCancel","img","Image","onload","ratio","toString","onerror","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","TextField","autoFocus","label","placeholder","helperText","flex","inputProps","InputLabel","minHeight","maxHeight","handleImageLoad","handleImageError","DialogActions","handleInsert","trim","imageHandlers","fileInputRef","linkHandlers","embedHandlers","linkDialogOpen","setLinkDialogOpen","linkUrl","setLinkUrl","linkText","setLinkText","isEditingLink","setIsEditingLink","embedDialogOpen","setEmbedDialogOpen","embedUrl","setEmbedUrl","embedType","setEmbedType","embedWidth","setEmbedWidth","embedHeight","setEmbedHeight","handleLinkCancel","handleEmbedCancel","hasLink","getCurrentLinkEntity","handleLinkClick","selectedText","getText","slice","getStartOffset","getEndOffset","currentEntity","text","Link","handleRemoveLink","removeLink","LinkOff","handleEmbedClick","DatasetLinkedIcon","_document$getElementB3","rect","getBoundingClientRect","menu","zIndex","_document$getElementB","openFilePicker","_fileInputRef$current","click","getElementById","textTransform","_document$getElementB2","setImageDialogOpen","menuElement","createElement","id","body","appendChild","createRoot","render","_document$getElementB4","setTimeout","ImageIcon","handleLinkSave","updateLink","insertLink","ImageUrlDialog","imageDialogOpen","imageData","handleImageUrlInsert","handleEmbedSave","embedData","insertEmbed","handlers","buttonGroups","key","UndoRedoButtons","handleUndo","handleRedo","FontControls","ColorButtons","handleInlineStyle","TextStyleButtons","AlignmentButtons","handleAlignment","ListButtons","handleBlockType","MiscButtons","Toolbar","flexWrap","px","py","group","index","Fragment","flexShrink","length","Divider","orientation","flexItem","mx","alignSelf","FONT_SIZES","FONT_FAMILIES","getFontFamilyStyleKey","toUpperCase","useFontHandlers","RichUtils","toggleInlineStyle","newStyleKey","currentStyle","find","useEditorHandlers","handleKeyCommand","command","newState","toggleBlockType","newAlignment","undefined","newBlockData","set","delete","Modifier","setBlockData","undo","redo","useImageHandlers","insertImage","arguments","contentStateWithEntity","createEntity","getLastCreatedEntityKey","AtomicBlockUtils","insertAtomicBlock","handleFileUpload","file","files","startsWith","reader","FileReader","result","readAsDataURL","handleImageUrlInsertLegacy","useLinkHandlers","startKey","startOffset","linkKey","isCollapsed","textToInsert","insertText","applyEntity","newSelection","merge","anchorOffset","getAnchorOffset","focusOffset","getFocusOffset","forceSelection","mergeEntityData","linkStart","linkEnd","findEntityRanges","character","start","end","linkSelection","SelectionState","createEmpty","hasLinkInSelection","useEmbedHandlers","finalEditorState","removeEmbed","newBlockMap","getBlockMap","blockMap","decorators","strategy","contentBlock","callback","LinkComponent","styleMap","createStyleMap","colorKey","accept","EditorToolbar","borderLeft","borderRight","Editor","customStyleMap","blockStyleFn","blockRendererFn","entityType","ImageComponent","editable","EmbedComponent","props","toolbarHidden","mention","separator","trigger","editorStyle","getBlog","async","blogId","accessToken","api","headers","Authorization","data","addBlog","blogData","formData","FormData","Object","entries","append","post","editBlog","isPartial","log","method","toggleVisibility","patch","getMeta","page","pageSize","deleteBlog","status","getDraft","username","saveDraft","draftData"],"sourceRoot":""}
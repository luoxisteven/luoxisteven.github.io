{"version":3,"file":"static/js/990.ac26e7de.chunk.js","mappings":"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","sources":["components/shared-components/Footer.js","components/finance-components/SimpleStockChart.js","services/FinanceService.js","components/finance-components/StockGrid.js","pages/main-pages/Finance.js"],"sourcesContent":["import Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Link from '@mui/material/Link';\nimport { Fragment, useContext } from 'react';\nimport { Avatar } from '@mui/material';\nimport Typography from '@mui/material/Typography';\n\nimport { SettingsContext } from '../../context/SettingsContext';\n\nfunction Copyright({ language }) {\n  return (\n    <Typography \n      variant=\"body1\"\n      sx={{ \n        color: 'text.secondary', \n        mt: 1,\n        typography: { md: 'body1' } \n      }}\n    >\n      {\"All Rights Reserved Â© \"}\n      <Link \n        color=\"text.secondary\" \n        href=\"https://xiluo.net/\"\n        sx={{ typography: { md: 'body1' } }}\n      >\n        xiluo.net\n      </Link>\n      &nbsp;\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const { language, themeMode } = useContext(SettingsContext);\n\n  // å¨æè·¯å¾\n  const terms_path = language === \"cn\" ? \"/md/cn/terms\" : \"/md/en/terms\";\n  const privacy_path = language === \"cn\" ? \"/md/cn/privacy\" : \"/md/en/privacy\";\n\n  return (\n    <Fragment>\n      <Container\n        sx={{\n          display: 'flex',\n          flexDirection: { xs: 'column', md: 'row' },\n          justifyContent: { md: 'space-between' },\n          alignItems: { xs: 'flex-start', md: 'center' },\n          px: { xs: 4 },\n          py: { xs: 2, sm: 5 },\n        }}\n      >\n        {/* å·¦ä¾§ï¼å¤´ååLink åºå */}\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: { xs: 2, sm: 3 },\n            textAlign: 'left',\n            alignItems: 'flex-start',\n            mb: { xs: 2, md: 0 },\n            pb: 2,\n            width: '100%',\n            borderBottom: (theme) => ({\n              xs: `1px solid ${theme.palette.divider}`,\n              sm: 'none',\n            }),\n          }}\n        >\n          <Avatar\n            src={require('../../assets/img/steven_cartoon.jpeg')}\n            alt=\"Steven Logo\"\n            sx={{\n              width: 30,\n              height: 30,\n              overflow: 'hidden',\n            }}\n          />\n\n          <Box sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', gap: 2 }}>\n            {[\n              { path: '/', labelCn: 'é¦é¡µ', labelEn: 'Home' },\n              { path: '/notes', labelCn: 'ç¬è®°', labelEn: 'Notes' },\n              { path: '/blogs', labelCn: 'åå®¢', labelEn: 'Blogs' },\n              { path: '/projects', labelCn: 'é¡¹ç®', labelEn: 'Projects' },\n              { path: '/fin', labelCn: 'éèé¢æ¿', labelEn: 'Finance' },\n              { path: '/profile', labelCn: 'ä¸ªäººç®ä»', labelEn: 'Profile' },\n              // { path: '/dashboard', labelCn: 'ä»ªè¡¨ç', labelEn: 'Dashboard' }\n            ].map(({ path, labelCn, labelEn }) => (\n              <Link \n                key={path}\n                color=\"text.secondary\" \n                variant=\"body1\"\n                href={path}\n                sx={{ typography: { md: 'body1' } }}\n              >\n                {language === \"cn\" ? labelCn : labelEn}\n              </Link>\n            ))}\n          </Box>\n        </Box>\n\n        {/* å³ä¾§ï¼Legal åçæ */}\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: { xs: 'flex-start', md: 'flex-end' },\n            textAlign: { xs: 'left', md: 'right' },\n            gap: 1,\n            mt: { md: 2 },\n          }}\n        >\n          <Box sx={{ display: 'flex', flexDirection: 'row', gap: 2 }}>\n            <Typography \n              variant=\"body1\"\n              sx={{ \n                fontWeight: 'medium',\n              }}\n            >\n              {language === \"cn\" ? \"æ³å¾\" : \"Legal\"}\n            </Typography>\n            {[\n              { label: language === \"cn\" ? \"æ¡æ¬¾\" : \"Terms\", path: terms_path },\n              { label: language === \"cn\" ? \"éç§\" : \"Privacy\", path: privacy_path }\n            ].map(({ label, path }) => (\n              <Link \n                key={label}\n                color=\"text.secondary\" \n                variant=\"body1\"\n                href={path} // å¨æè·¯å¾\n              >\n                {label}\n              </Link>\n            ))}\n          </Box>\n\n          <Copyright language={language} />\n        </Box>\n      </Container>\n    </Fragment>\n  );\n}\n","import { useEffect, useRef, useContext } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { SettingsContext } from '../../context/SettingsContext';\n\nconst SimpleStockChart = ({ data }) => {\n  const chartContainerRef = useRef(null);\n  const legendRef = useRef(null);\n  const { themeMode, language } = useContext(SettingsContext);\n\n  useEffect(() => {\n    if (!data || !data.history || data.history.length === 0) {\n      console.error('Invalid data format');\n      return;\n    }\n\n    const isDarkMode = themeMode === 'dark';\n    const isChineseLanguage = language === 'cn';\n\n    const chartOptions = {\n      width: chartContainerRef.current.clientWidth,\n      layout: {\n        background: { color: isDarkMode ? '#1a1a1a' : '#f5f5f5', type: 'solid' },\n        textColor: isDarkMode ? '#d1d4dc' : '#000000',\n      },\n      grid: {\n        vertLines: { color: isDarkMode ? '#2B2B43' : '#E0E0E0' },\n        horzLines: { color: isDarkMode ? '#2B2B43' : '#E0E0E0' },\n      },\n      crosshair: {\n        mode: 1,\n        vertLine: {\n          color: '#758696',\n          width: 1,\n          style: 1,\n          labelBackgroundColor: isDarkMode ? '#1a1a1a' : '#FFFFFF',\n        },\n        horzLine: {\n          color: '#758696',\n          width: 1,\n          style: 1,\n          labelBackgroundColor: isDarkMode ? '#1a1a1a' : '#FFFFFF',\n        },\n      },\n      timeScale: {\n        borderColor: isDarkMode ? '#2B2B43' : '#E0E0E0',\n      },\n      rightPriceScale: {\n        borderColor: isDarkMode ? '#2B2B43' : '#E0E0E0',\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.2,\n        },\n      },\n      watermark: {\n        visible: false,\n      },\n      credits: {\n        enabled: false,\n      },\n    };\n\n    const chart = createChart(chartContainerRef.current, chartOptions);\n\n    const mainPriceScale = chart.priceScale('right');\n    const volumePriceScale = chart.priceScale('left');\n    volumePriceScale.applyOptions({\n      scaleMargins: {\n        top: 0.8,\n        bottom: 0,\n      },\n      visible: false,\n    });\n\n    // å¨ä¸­æç¯å¢ï¼çº¢æ¶¨ç»¿è·ï¼è±æç¯å¢ï¼ç»¿æ¶¨çº¢è·\n    const candleSeries = chart.addCandlestickSeries({\n      upColor: isChineseLanguage ? '#ef5350' : '#26a69a',\n      downColor: isChineseLanguage ? '#26a69a' : '#ef5350',\n      borderVisible: false,\n      wickUpColor: isChineseLanguage ? '#ef5350' : '#26a69a',\n      wickDownColor: isChineseLanguage ? '#26a69a' : '#ef5350',\n    });\n\n    const volumeSeries = chart.addHistogramSeries({\n      color: '#26a69a50',\n      priceFormat: {\n        type: 'volume',\n      },\n      priceScaleId: 'left',\n    });\n\n    const chartData = data.history.map((item) => ({\n      time: new Date(item.Date).getTime() / 1000,\n      open: item.Open,\n      high: item.High,\n      low: item.Low,\n      close: item.Close,\n    }));\n\n    const volumeData = data.history.map((item) => ({\n      time: new Date(item.Date).getTime() / 1000,\n      value: item.Volume,\n      color:\n        item.Close >= item.Open\n          ? isChineseLanguage\n            ? '#ef535050'\n            : '#26a69a50'\n          : isChineseLanguage\n          ? '#26a69a50'\n          : '#ef535050',\n    }));\n\n    candleSeries.setData(chartData);\n    volumeSeries.setData(volumeData);\n\n    // åå»ºå¹¶æ ·å¼åå¾ä¾å®¹å¨\n    const legend = document.createElement('div');\n    legend.style.position = 'absolute';\n    legend.style.left = '1px';\n    legend.style.top = '1px';\n    legend.style.zIndex = '1';\n    legend.style.fontSize = '12px';\n    legend.style.fontFamily = 'sans-serif';\n    legend.style.color = isDarkMode ? '#d1d4dc' : '#131722';\n    legend.style.display = 'flex';\n    legend.style.gap = '8px';\n    legend.style.alignItems = 'center';\n    legendRef.current = legend;\n    chartContainerRef.current.appendChild(legend);\n\n    // è®¢é crosshair ç§»å¨äºä»¶\n    chart.subscribeCrosshairMove((param) => {\n      if (!param.time || !param.point) {\n        legend.style.display = 'none';\n        return;\n      }\n\n      const candleData = param.seriesData.get(candleSeries);\n      const volData = param.seriesData.get(volumeSeries);\n\n      if (!candleData || !volData) {\n        legend.style.display = 'none';\n        return;\n      }\n\n      legend.style.display = 'flex';\n\n      // æ ¹æ®è¯­è¨ï¼å¯¹æ¥æåä¸åæ ¼å¼å\n      const date = new Date(param.time * 1000);\n\n      let formattedDate;\n      if (isChineseLanguage) {\n        // yyyy/mm/dd\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const day = String(date.getDate()).padStart(2, '0');\n        formattedDate = `${year}/${month}/${day}`;\n      } else {\n        // dd/Mon/yyyy (Mon ä¸ºè±æç¼©å)\n        const day = date.getDate();\n        const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        const month = monthNames[date.getMonth()];\n        const year = date.getFullYear();\n        formattedDate = `${day}/${month}/${year}`;\n      }\n\n      const formatPrice = (price) => price.toFixed(2);\n      const formatVolume = (volume) => {\n        if (volume >= 1000000) {\n          return (volume / 1000000).toFixed(2) + 'M';\n        } else if (volume >= 1000) {\n          return (volume / 1000).toFixed(2) + 'K';\n        }\n        return volume.toFixed(0);\n      };\n\n      // æ ¹æ®è¯­è¨åæ¢æ ç­¾\n      const OLabel = isChineseLanguage ? 'å¼' : 'O';\n      const HLabel = isChineseLanguage ? 'é«' : 'H';\n      const LLabel = isChineseLanguage ? 'ä½' : 'L';\n      const CLabel = isChineseLanguage ? 'æ¶' : 'C';\n      const VLabel = isChineseLanguage ? 'é' : 'V';\n\n      legend.innerHTML = `\n        <span>${formattedDate}</span>\n        <span>${OLabel}: ${formatPrice(candleData.open)}</span>\n        <span>${HLabel}: ${formatPrice(candleData.high)}</span>\n        <span>${LLabel}: ${formatPrice(candleData.low)}</span>\n        <span>${CLabel}: ${formatPrice(candleData.close)}</span>\n        <span>${VLabel}: ${formatVolume(volData.value)}</span>\n      `;\n    });\n\n    // éè TradingView logo\n    const style = document.createElement('style');\n    style.textContent = `\n      #tv-attr-logo {\n        display: none !important;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // å¤çå¾è¡¨èªéåº\n    const handleResize = () => {\n      chart.applyOptions({\n        width: chartContainerRef.current.clientWidth,\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      document.head.removeChild(style);\n      if (legendRef.current && chartContainerRef.current) {\n        chartContainerRef.current.removeChild(legendRef.current);\n      }\n      chart.remove();\n    };\n  }, [data, themeMode, language]);\n\n  return (\n    <div\n      ref={chartContainerRef}\n      style={{\n        width: '100%',\n        height: '250px',\n        backgroundColor: themeMode === 'dark' ? '#1a1a1a' : '#FFFFFF',\n        position: 'relative',\n      }}\n    />\n  );\n};\n\nexport default SimpleStockChart;\n","import api from './api';\n\nconst FinanceService = {\n    get_stock_history_data: async (ticker, accessToken) => {\n        try {\n            const response = await api.get(`/get_stock_history_data/${ticker}`, {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                },\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching stock history data:', error);\n            throw error;\n        }\n    },\n};\n\nexport default FinanceService;\n","import { useEffect, useState } from 'react';\nimport { Grid, Box, Typography, CircularProgress, Alert } from '@mui/material';\nimport SimpleStockChart from './SimpleStockChart';\nimport FinanceService from '../../services/FinanceService';\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\nimport { useUser } from \"../../context/UserContext\";\n\nconst StockGrid = ({ themeMode, language }) => {\n  const { userState } = useUser();\n\n  const [stockData, setStockData] = useState({\n    ASX200: { data: null, error: null },\n    SSE: { data: null, error: null },\n    SP500: { data: null, error: null },\n    FTSE: { data: null, error: null },\n  });\n\n  const tickers = {\n    ASX200: '^AXJO',\n    SSE: '000001.SS',\n    SP500: '^GSPC',\n    FTSE: '^FTSE',\n  };\n\n  useEffect(() => {\n    const fetchStockData = async () => {\n      // å¦æ access ä¸ºç©ºï¼åä¸æ§è¡åç»­æä½\n      if (!userState.access) {\n        return;\n      }\n      Object.keys(tickers).forEach(async (key) => {\n        try {\n          const data = await FinanceService.get_stock_history_data(tickers[key], userState.access);\n          setStockData((prevData) => ({\n            ...prevData,\n            [key]: { data, error: null },\n          }));\n        } catch (error) {\n          console.error(`Failed to fetch data for ${key}:`, error);\n          setStockData((prevData) => ({\n            ...prevData,\n            [key]: { data: null, error: 'Failed to load data' },\n          }));\n        }\n      });\n    };\n\n    fetchStockData();\n  }, [userState.access]);\n\n  const calculateChange = (data) => {\n    if (!data || data.history.length < 2) return null;\n    const lastClose = data.history[data.history.length - 1].Close;\n    const secondLastClose = data.history[data.history.length - 2].Close;\n    const change = lastClose - secondLastClose;\n    const percentageChange = (change / secondLastClose) * 100;\n\n    return { change, percentageChange };\n  };\n\n  const renderStockHeader = (title, data) => {\n    const changeData = calculateChange(data);\n    return (\n      <Typography\n        variant=\"h6\"\n        sx={{\n          fontWeight: 700,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          color: themeMode === 'dark' ? 'white' : 'black',\n        }}\n      >\n        {title}\n        {changeData && (\n          <Typography\n            variant=\"subtitle1\"\n            component=\"span\"\n            sx={{\n              marginLeft: 1,\n              fontWeight: 600,\n              color: changeData.change >= 0\n                ? language === 'cn' ? '#ef5350' : '#26a69a' // Red : Green for 'cn'\n                : language === 'cn' ? '#26a69a' : '#ef5350', // Green : Red for 'cn'\n            }}\n          >\n            {changeData.change >= 0 ? '+' : ''}\n            {changeData.change.toFixed(2)} / \n            {changeData.change >= 0 ? ' +' : ' '}\n            {changeData.percentageChange.toFixed(2)}%\n          </Typography>\n        )}\n      </Typography>\n    );\n  };\n\n  const stockItems = [\n    { title: 'ASX 200', key: 'ASX200' },\n    { title: 'SSE (Shanghai)', key: 'SSE' },\n    { title: 'S&P 500', key: 'SP500' },\n    { title: 'FTSE', key: 'FTSE' },\n  ];\n\n  return (\n    <Grid container spacing={2} sx={{ height: '100%' }}>\n      {stockItems.map((item, index) => {\n        const { data, error } = stockData[item.key];\n        return (\n          <Grid key={index} item xs={12} sm={6} sx={{ height: { xs: '25%', sm: '50%' } }}>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '100%',\n                border: '1px solid #ccc',\n                borderRadius: 2,\n              }}\n            >\n              {renderStockHeader(item.title, data)}\n              <Box\n                sx={{\n                  width: '100%',\n                  height: '250px',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                {error ? (\n                    <WarningAmberIcon\n                    sx={{\n                        color: 'error.main',\n                        fontSize: 48, // è®¾ç½®å¾æ å¤§å°\n                    }}\n                    />\n                ) : data ? (\n                  <SimpleStockChart data={data} />\n                ) : (\n                  <CircularProgress color=\"primary\" />\n                )}\n              </Box>\n            </Box>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default StockGrid;","import { useContext } from 'react';\nimport { Box, Container } from '@mui/material';\nimport CustomAppBar from '../../components/shared-components/AppBar/AppBar';\nimport { SettingsContext } from '../../context/SettingsContext';\nimport Footer from '../../components/shared-components/Footer';\nimport StockGrid from '../../components/finance-components/StockGrid';\n\nconst Finance = () => {\n  const { language, themeMode } = useContext(SettingsContext);\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          minHeight: '100vh',\n        }}\n      >\n        <CustomAppBar />\n        <Container maxWidth=\"lg\" sx={{ flex: 1, padding: 2, mt: 12 }}>\n          <StockGrid themeMode={themeMode} language={language} />\n        </Container>\n      </Box>\n\n      {/* Footer */}\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          backgroundColor: 'background.default',\n          borderTop: (theme) => ({\n            xs: 'none',\n            md: `1px solid ${theme.palette.divider}`,\n          }),\n          maxWidth: (theme) => theme.breakpoints.values.lg,\n          width: '100%',\n          mx: 'auto',\n        }}\n      >\n        <Footer />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Finance;"],"names":["Copyright","_ref","language","_jsxs","Typography","variant","sx","color","mt","typography","md","children","_jsx","Link","href","Date","getFullYear","Footer","themeMode","useContext","SettingsContext","terms_path","privacy_path","Fragment","Container","display","flexDirection","xs","justifyContent","alignItems","px","py","sm","Box","gap","textAlign","mb","pb","width","borderBottom","theme","palette","divider","Avatar","src","require","alt","height","overflow","flexWrap","path","labelCn","labelEn","map","_ref2","fontWeight","label","_ref3","data","chartContainerRef","useRef","legendRef","useEffect","history","length","console","error","isDarkMode","isChineseLanguage","chartOptions","current","clientWidth","layout","background","type","textColor","grid","vertLines","horzLines","crosshair","mode","vertLine","style","labelBackgroundColor","horzLine","timeScale","borderColor","rightPriceScale","scaleMargins","top","bottom","watermark","visible","credits","enabled","chart","createChart","priceScale","applyOptions","candleSeries","addCandlestickSeries","upColor","downColor","borderVisible","wickUpColor","wickDownColor","volumeSeries","addHistogramSeries","priceFormat","priceScaleId","chartData","item","time","getTime","open","Open","high","High","low","Low","close","Close","volumeData","value","Volume","setData","legend","document","createElement","position","left","zIndex","fontSize","fontFamily","appendChild","subscribeCrosshairMove","param","point","candleData","seriesData","get","volData","date","formattedDate","String","getMonth","padStart","getDate","formatPrice","price","toFixed","OLabel","HLabel","LLabel","CLabel","VLabel","volume","innerHTML","textContent","head","handleResize","window","addEventListener","removeEventListener","removeChild","remove","ref","backgroundColor","get_stock_history_data","async","ticker","accessToken","api","headers","Authorization","userState","useUser","stockData","setStockData","useState","ASX200","SSE","SP500","FTSE","tickers","access","Object","keys","forEach","FinanceService","key","prevData","fetchStockData","renderStockHeader","title","changeData","lastClose","secondLastClose","change","percentageChange","calculateChange","component","marginLeft","Grid","container","spacing","index","border","borderRadius","WarningAmberIcon","SimpleStockChart","CircularProgress","Finance","minHeight","CustomAppBar","maxWidth","flex","padding","StockGrid","borderTop","breakpoints","values","lg","mx"],"sourceRoot":""}
{"version":3,"file":"static/js/166.44dd0789.chunk.js","mappings":"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","sources":["components/blog-components/Draft-js-wysiwyg/components/ImageComponent.js","components/blog-components/Draft-js-wysiwyg/components/LinkComponent.js","components/blog-components/Draft-js-wysiwyg/components/EmbedComponent.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/UndoRedoButtons.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/FontControls.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/TextStyleButtons.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/ColorButtons.js","components/blog-components/Draft-js-wysiwyg/utils/editorUtils.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/AlignmentButtons.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/ListButtons.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/ImageUrlDialog.js","components/blog-components/Draft-js-wysiwyg/components/toolbar/MiscButtons.js","components/blog-components/Draft-js-wysiwyg/components/EditorToolbar.js","components/blog-components/Draft-js-wysiwyg/hooks/useFontHandlers.js","components/blog-components/Draft-js-wysiwyg/Draft-js-wysiwyg.js","components/blog-components/Draft-js-wysiwyg/hooks/useEditorHandlers.js","components/blog-components/Draft-js-wysiwyg/hooks/useImageHandlers.js","components/blog-components/Draft-js-wysiwyg/hooks/useLinkHandlers.js","components/blog-components/Draft-js-wysiwyg/hooks/useEmbedHandlers.js","services/BlogService.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { EditorState } from 'draft-js';\n\n// Image component for rendering in editor - compatible with draft-js-wysiwyg original format\nconst ImageComponent = ({ block, contentState, editorState, onEditorStateChange, readOnly }) => {\n  const entity = contentState.getEntity(block.getEntityAt(0));\n  const entityData = entity.getData();\n  \n  // URL transform function - convert API URLs to local paths\n  const transformImageUrl = (originalSrc) => {\n    if (originalSrc.startsWith(\"http://api.xiluo.net/get_blog_img/\") || originalSrc.startsWith(\"https://api.xiluo.net/get_blog_img/\")) {\n      // 提取文件名部分\n      const fileName = originalSrc.split(\"/get_blog_img/\")[1];\n      return `/Blogs/img/${fileName}`;\n    }\n    return originalSrc;\n  };\n  \n  // Compatible with original draft-js-wysiwyg format\n  const src = transformImageUrl(entityData.src);\n  const alt = entityData.alt;\n  // Original format uses 'height' and 'width' as strings with units or just numbers\n  const originalWidth = entityData.width;\n  const originalHeight = entityData.height;\n  \n  // Parse width and height, handling both string and number formats\n  const parseSize = (size, defaultValue) => {\n    if (!size) return defaultValue;\n    if (typeof size === 'number') return size;\n    if (typeof size === 'string') {\n      // Remove 'px', '%', or other units and convert to number\n      const numValue = parseInt(size.replace(/[^\\d]/g, ''));\n      return isNaN(numValue) ? defaultValue : numValue;\n    }\n    return defaultValue;\n  };\n  \n  const [isSelected, setIsSelected] = useState(false);\n  const [isResizing, setIsResizing] = useState(false);\n  const [currentWidth, setCurrentWidth] = useState(() => parseSize(originalWidth, 300));\n  const [currentHeight, setCurrentHeight] = useState(() => parseSize(originalHeight, 200));\n  const imageRef = useRef(null);\n  const containerRef = useRef(null);\n  const alignment = block.getData().get('text-align') || 'none';\n  \n  // Handle image selection\n  const handleImageClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsSelected(true);\n  };\n\n  // Handle click outside to deselect\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (containerRef.current && !containerRef.current.contains(e.target)) {\n        setIsSelected(false);\n      }\n    };\n\n    if (isSelected) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }\n  }, [isSelected]);\n\n  // Update image size in entity - maintain original format\n  const updateImageSize = (newWidth, newHeight) => {\n    if (!editorState || !onEditorStateChange) {\n      console.warn('EditorState or onEditorStateChange is not available');\n      return;\n    }\n\n    try {\n      const contentState = editorState.getCurrentContent();\n      const entityKey = block.getEntityAt(0);\n      const entity = contentState.getEntity(entityKey);\n      \n      // Keep original format - store as string with 'px' unit like original\n      const newEntityData = { \n        ...entity.getData(), \n        width: `${newWidth}px`, \n        height: `${newHeight}px` \n      };\n      \n      const newContentState = contentState.replaceEntityData(entityKey, newEntityData);\n      const newEditorState = EditorState.push(\n        editorState,\n        newContentState,\n        'apply-entity'\n      );\n      onEditorStateChange(newEditorState);\n    } catch (error) {\n      console.error('Error updating image size:', error);\n    }\n  };\n\n  // Handle resize drag\n  const handleResizeStart = (e, direction) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsResizing(true);\n    \n    const startX = e.clientX;\n    const startY = e.clientY;\n    const startWidth = currentWidth;\n    const startHeight = currentHeight;\n    const aspectRatio = startWidth / startHeight;\n\n    const handleMouseMove = (e) => {\n      const deltaX = e.clientX - startX;\n      const deltaY = e.clientY - startY;\n      \n      let newWidth, newHeight;\n      \n      if (direction === 'se') {\n        // Bottom-right corner - maintain aspect ratio\n        newWidth = Math.max(50, startWidth + deltaX);\n        newHeight = newWidth / aspectRatio;\n      } else if (direction === 'e') {\n        // Right edge\n        newWidth = Math.max(50, startWidth + deltaX);\n        newHeight = newWidth / aspectRatio;\n      } else if (direction === 's') {\n        // Bottom edge\n        newHeight = Math.max(50, startHeight + deltaY);\n        newWidth = newHeight * aspectRatio;\n      }\n      \n      setCurrentWidth(Math.min(newWidth, 800)); // Max width limit\n      setCurrentHeight(Math.min(newHeight, 600)); // Max height limit\n    };\n\n    const handleMouseUp = () => {\n      setIsResizing(false);\n      \n      // Update entity data with safety check\n      if (editorState && onEditorStateChange) {\n        updateImageSize(currentWidth, currentHeight);\n      }\n      \n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  };\n\n  // Get container style based on alignment (compatible with original)\n  const getContainerStyle = () => {\n    let textAlign = 'none';\n    if (alignment === 'left') textAlign = 'left';\n    else if (alignment === 'right') textAlign = 'right';\n    else if (alignment === 'center') textAlign = 'center';\n    \n    return {\n      textAlign: textAlign !== 'none' ? textAlign : 'left',\n      margin: '10px 0',\n      position: 'relative',\n      display: 'inline-block',\n      cursor: isSelected ? 'move' : 'pointer'\n    };\n  };\n\n  return (\n    <div \n      ref={containerRef}\n      style={getContainerStyle()}\n      onClick={handleImageClick}\n    >\n      <img\n        ref={imageRef}\n        src={src}\n        alt={alt || ''}\n        style={{\n          width: `${currentWidth}px`,\n          height: `${currentHeight}px`,\n          border: isSelected ? '2px solid #1976d2' : 'none',\n          borderRadius: isSelected ? '4px' : '0',\n          display: 'block',\n          margin: alignment === 'center' ? '0 auto' : '0'\n        }}\n        draggable={false}\n      />\n      \n      {/* Resize handles */}\n      {isSelected && !readOnly && (\n        <>\n          {/* Corner handle (bottom-right) */}\n          <div\n            style={{\n              position: 'absolute',\n              bottom: -4,\n              right: -4,\n              width: 8,\n              height: 8,\n              backgroundColor: '#1976d2',\n              cursor: 'se-resize',\n              borderRadius: '50%'\n            }}\n            onMouseDown={(e) => handleResizeStart(e, 'se')}\n          />\n          \n          {/* Right edge handle */}\n          <div\n            style={{\n              position: 'absolute',\n              right: -4,\n              top: '50%',\n              transform: 'translateY(-50%)',\n              width: 8,\n              height: 20,\n              backgroundColor: '#1976d2',\n              cursor: 'e-resize',\n              borderRadius: '4px'\n            }}\n            onMouseDown={(e) => handleResizeStart(e, 'e')}\n          />\n          \n          {/* Bottom edge handle */}\n          <div\n            style={{\n              position: 'absolute',\n              bottom: -4,\n              left: '50%',\n              transform: 'translateX(-50%)',\n              width: 20,\n              height: 8,\n              backgroundColor: '#1976d2',\n              cursor: 's-resize',\n              borderRadius: '4px'\n            }}\n            onMouseDown={(e) => handleResizeStart(e, 's')}\n          />\n\n          {/* Size info */}\n          <div style={{\n            position: 'absolute',\n            top: -30,\n            left: '50%',\n            transform: 'translateX(-50%)',\n            backgroundColor: 'rgba(0,0,0,0.8)',\n            color: 'white',\n            padding: '4px 8px',\n            borderRadius: '4px',\n            fontSize: '12px',\n            whiteSpace: 'nowrap'\n          }}>\n            <span>{Math.round(currentWidth)} × {Math.round(currentHeight)}</span>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ImageComponent;","import { Link as MuiLink } from '@mui/material';\n\nconst LinkComponent = ({ children, entityKey, contentState }) => {\n  const entity = contentState.getEntity(entityKey);\n  const { url } = entity.getData();\n  \n  return (\n    <MuiLink\n      href={url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      underline=\"hover\"\n      color=\"primary\"\n      sx={{\n        cursor: 'pointer',\n        '&:hover': {\n          textDecoration: 'underline',\n        }\n      }}\n    >\n      {children}\n    </MuiLink>\n  );\n};\n\nexport default LinkComponent;","import { useState } from 'react';\nimport { \n  Box, \n  Paper, \n  Typography, \n  IconButton, \n  Tooltip,\n  Link,\n  Card,\n  CardContent,\n  CardActions,\n  Button\n} from '@mui/material';\nimport { \n  OpenInNew, \n  Delete, \n  Refresh,\n  Language\n} from '@mui/icons-material';\n\nconst EmbedComponent = ({ \n  block, \n  contentState, \n  blockProps \n}) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  \n  const entity = contentState.getEntity(block.getEntityAt(0));\n  const { url, type = 'iframe', width = '100%', height = '400' } = entity.getData();\n  \n  // 获取 readonly 状态\n  const isReadOnly = blockProps?.readOnly || false;\n\n  const handleLoad = () => {\n    setLoading(false);\n    setError(false);\n  };\n\n  const handleError = () => {\n    setLoading(false);\n    setError(true);\n  };\n\n  const handleRefresh = () => {\n    setLoading(true);\n    setError(false);\n    // Force iframe reload by changing src\n    const iframe = document.querySelector(`iframe[data-embed-url=\"${url}\"]`);\n    if (iframe) {\n      iframe.src = iframe.src;\n    }\n  };\n\n  const handleDelete = () => {\n    if (blockProps && blockProps.onRemove) {\n      blockProps.onRemove(block.getKey());\n    }\n  };\n\n  const getDomainFromUrl = (url) => {\n    try {\n      return new URL(url).hostname;\n    } catch {\n      return url;\n    }\n  };\n\n  if (type === 'preview') {\n    return (\n      <Box sx={{ my: 2 }}>\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n              <Language sx={{ mr: 1, color: 'text.secondary' }} />\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {getDomainFromUrl(url)}\n              </Typography>\n            </Box>\n            <Typography variant=\"h6\" component=\"div\" sx={{ mb: 1 }}>\n              Embedded Website\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n              {url}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button \n              size=\"small\" \n              startIcon={<OpenInNew />}\n              onClick={() => window.open(url, '_blank')}\n            >\n              Open\n            </Button>\n            {/* 只在非 readonly 模式下显示 Remove 按钮 */}\n            {!isReadOnly && (\n              <Button \n                size=\"small\" \n                startIcon={<Delete />}\n                onClick={handleDelete}\n                color=\"error\"\n              >\n                Remove\n              </Button>\n            )}\n          </CardActions>\n        </Card>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ my: 2 }}>\n      <Paper \n        variant=\"outlined\" \n        sx={{ \n          overflow: 'hidden',\n          position: 'relative'\n        }}\n      >\n        {/* Header - 修复暗色模式兼容性 */}\n        <Box sx={{ \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'space-between',\n          p: 1,\n          bgcolor: (theme) => theme.palette.mode === 'dark' \n            ? 'grey.900' \n            : 'grey.50',\n          borderBottom: '1px solid',\n          borderColor: 'divider'\n        }}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <Language sx={{ mr: 1, fontSize: 16, color: 'text.secondary' }} />\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {getDomainFromUrl(url)}\n            </Typography>\n          </Box>\n          \n          <Box>\n            <Tooltip title=\"Refresh\">\n              <IconButton size=\"small\" onClick={handleRefresh}>\n                <Refresh fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Open in new tab\">\n              <IconButton \n                size=\"small\" \n                onClick={() => window.open(url, '_blank')}\n              >\n                <OpenInNew fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            {/* 只在非 readonly 模式下显示 Remove 按钮 */}\n            {!isReadOnly && (\n              <Tooltip title=\"Remove embed\">\n                <IconButton \n                  size=\"small\" \n                  onClick={handleDelete}\n                  color=\"error\"\n                >\n                  <Delete fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n        </Box>\n\n        {/* Loading indicator - 优化暗色模式 */}\n        {loading && (\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'center',\n            height: height + 'px',\n            bgcolor: (theme) => theme.palette.mode === 'dark' \n              ? 'grey.800' \n              : 'grey.100'\n          }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Loading...\n            </Typography>\n          </Box>\n        )}\n\n        {/* Error state - 优化暗色模式 */}\n        {error && (\n          <Box sx={{ \n            display: 'flex', \n            flexDirection: 'column',\n            alignItems: 'center', \n            justifyContent: 'center',\n            height: height + 'px',\n            bgcolor: (theme) => theme.palette.mode === 'dark' \n              ? 'grey.800' \n              : 'grey.100',\n            textAlign: 'center',\n            p: 2\n          }}>\n            <Typography variant=\"body2\" color=\"error\" gutterBottom>\n              Failed to load website\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n              This website may not allow embedding or may be temporarily unavailable.\n            </Typography>\n            <Box sx={{ mt: 2 }}>\n              {/* 只在非 readonly 模式下显示 Try Again 按钮 */}\n              {!isReadOnly && (\n                <Button \n                  size=\"small\" \n                  variant=\"outlined\"\n                  startIcon={<Refresh />}\n                  onClick={handleRefresh}\n                  sx={{ mr: 1 }}\n                >\n                  Try Again\n                </Button>\n              )}\n              <Button \n                size=\"small\" \n                variant=\"outlined\"\n                startIcon={<OpenInNew />}\n                onClick={() => window.open(url, '_blank')}\n              >\n                Open in New Tab\n              </Button>\n            </Box>\n          </Box>\n        )}\n\n        {/* IFrame */}\n        <iframe\n          data-embed-url={url}\n          src={url}\n          width={width}\n          height={height + 'px'}\n          style={{ \n            border: 'none',\n            display: loading || error ? 'none' : 'block'\n          }}\n          onLoad={handleLoad}\n          onError={handleError}\n          title={`Embedded content from ${getDomainFromUrl(url)}`}\n          sandbox=\"allow-scripts allow-same-origin allow-forms allow-popups allow-presentation\"\n        />\n      </Paper>\n    </Box>\n  );\n};\n\nexport default EmbedComponent;","import { Box, IconButton, Tooltip } from '@mui/material';\nimport { Undo, Redo } from '@mui/icons-material';\n\nconst UndoRedoButtons = ({ editorState, onUndo, onRedo }) => (\n  <Box sx={{ display: 'flex', gap: 0 }}>\n    <Tooltip title=\"Undo\">\n      <span>\n      <IconButton \n        size=\"small\" \n        onClick={onUndo}\n        disabled={editorState.getUndoStack().size === 0}\n      >\n        <Undo fontSize=\"small\" />\n      </IconButton>\n      </span>\n    </Tooltip>\n    <Tooltip title=\"Redo\">\n      <span>\n      <IconButton \n        size=\"small\" \n        onClick={onRedo}\n        disabled={editorState.getRedoStack().size === 0}\n      >\n        <Redo fontSize=\"small\" />\n      </IconButton>\n      </span>\n    </Tooltip>\n  </Box>\n);\n\nexport default UndoRedoButtons;","import { FormControl, Select, MenuItem, Box } from '@mui/material';\n\nconst FontControls = ({ fontHandlers }) => (\n  <Box display=\"flex\" alignItems=\"center\" gap={0.5}>\n    <FormControl size=\"small\" sx={{ width: 100 }}>\n      <Select\n        value={fontHandlers.getCurrentFontFamily()}\n        onChange={(e) => fontHandlers.handleFontFamily(e.target.value)}\n        displayEmpty\n        sx={{ height: 32 }}\n      >\n        {fontHandlers.fontFamilies.map(family => (\n          <MenuItem key={family} value={family} sx={{ fontFamily: family }}>\n            {family}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n\n    <FormControl size=\"small\" sx={{ minWidth: 70 }}>\n      <Select\n        value={fontHandlers.getCurrentFontSize()}\n        onChange={(e) => fontHandlers.handleFontSize(e.target.value)}\n        sx={{ height: 32 }}\n      >\n        {fontHandlers.fontSizes.map(size => (\n          <MenuItem key={size} value={size}>\n            {size}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  </Box>\n);\n\nexport default FontControls;","import { Box, IconButton, Tooltip } from '@mui/material';\nimport {\n  FormatBold,\n  FormatItalic,\n  FormatUnderlined,\n  FormatStrikethrough,\n  Superscript,\n  Subscript,\n  Code\n} from '@mui/icons-material';\n\nconst TextStyleButtons = ({ editorState, onInlineStyle }) => {\n  const currentInlineStyle = editorState.getCurrentInlineStyle();\n\n  const styleButtons = [\n    { style: 'BOLD', icon: FormatBold, title: 'Bold' },\n    { style: 'ITALIC', icon: FormatItalic, title: 'Italic' },\n    { style: 'UNDERLINE', icon: FormatUnderlined, title: 'Underline' },\n    { style: 'STRIKETHROUGH', icon: FormatStrikethrough, title: 'Strikethrough' },\n    { style: 'SUPERSCRIPT', icon: Superscript, title: 'Superscript' },\n    { style: 'SUBSCRIPT', icon: Subscript, title: 'Subscript' },\n    { style: 'CODE', icon: Code, title: 'Code' }\n  ];\n\n  return (\n    <Box sx={{ display: 'flex', gap: 0 }}>\n      {styleButtons.map(({ style, icon: Icon, title }) => (\n        <Tooltip key={style} title={title}>\n          <IconButton\n            size=\"small\"\n            onClick={() => onInlineStyle(style)}\n            color={currentInlineStyle.has(style) ? 'primary' : 'default'}\n          >\n            <Icon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ))}\n    </Box>\n  );\n};\n\nexport default TextStyleButtons;","import { useState } from 'react';\nimport { \n  Box, \n  IconButton, \n  Tooltip, \n  Popover, \n  Grid,\n  Typography\n} from '@mui/material';\nimport {\n  FormatColorText,\n  FormatColorFill\n} from '@mui/icons-material';\n\nconst ColorButtons = ({ editorState, onInlineStyle }) => {\n  const [textColorAnchor, setTextColorAnchor] = useState(null);\n  const [highlightAnchor, setHighlightAnchor] = useState(null);\n  \n  const currentInlineStyle = editorState.getCurrentInlineStyle();\n\n  // 预定义颜色选项\n  const colors = [\n    { name: 'Black', value: '#000000' },\n    { name: 'Red', value: '#FF0000' },\n    { name: 'Green', value: '#00FF00' },\n    { name: 'Blue', value: '#0000FF' },\n    { name: 'Orange', value: '#FFA500' },\n    { name: 'Purple', value: '#800080' },\n    { name: 'Pink', value: '#FFC0CB' },\n    { name: 'Brown', value: '#A52A2A' },\n    { name: 'Gray', value: '#808080' },\n    { name: 'Navy', value: '#000080' },\n    { name: 'Teal', value: '#008080' },\n    { name: 'Maroon', value: '#800000' }\n  ];\n\n  const highlightColors = [\n    { name: 'None', value: 'transparent' },\n    { name: 'Yellow', value: '#FFFF00' },\n    { name: 'Green', value: '#90EE90' },\n    { name: 'Pink', value: '#FFB6C1' },\n    { name: 'Blue', value: '#ADD8E6' },\n    { name: 'Orange', value: '#FFE4B5' },\n    { name: 'Purple', value: '#DDA0DD' },\n    { name: 'Red', value: '#FFA07A' },\n    { name: 'Gray', value: '#D3D3D3' }\n  ];\n\n  const handleTextColorClick = (event) => {\n    setTextColorAnchor(event.currentTarget);\n  };\n\n  const handleHighlightClick = (event) => {\n    setHighlightAnchor(event.currentTarget);\n  };\n\n  const handleTextColorClose = () => {\n    setTextColorAnchor(null);\n  };\n\n  const handleHighlightClose = () => {\n    setHighlightAnchor(null);\n  };\n\n  const applyTextColor = (color) => {\n    // 移除所有现有的文字颜色样式\n    let newStyle = currentInlineStyle;\n    colors.forEach(c => {\n      const styleKey = `COLOR_${c.value.replace('#', '')}`;\n      if (newStyle.has(styleKey)) {\n        newStyle = newStyle.remove(styleKey);\n      }\n    });\n\n    // 应用新的文字颜色\n    const colorStyle = `COLOR_${color.replace('#', '')}`;\n    onInlineStyle(colorStyle);\n    handleTextColorClose();\n  };\n\n  const applyHighlightColor = (color) => {\n    // 移除所有现有的高亮颜色样式\n    let newStyle = currentInlineStyle;\n    highlightColors.forEach(c => {\n      const styleKey = `HIGHLIGHT_${c.value.replace('#', '').replace('transparent', 'NONE')}`;\n      if (newStyle.has(styleKey)) {\n        newStyle = newStyle.remove(styleKey);\n      }\n    });\n\n    // 应用新的高亮颜色\n    const highlightStyle = `HIGHLIGHT_${color.replace('#', '').replace('transparent', 'NONE')}`;\n    onInlineStyle(highlightStyle);\n    handleHighlightClose();\n  };\n\n  // 检查当前是否有文字颜色样式\n  const hasTextColor = colors.some(color => \n    currentInlineStyle.has(`COLOR_${color.value.replace('#', '')}`)\n  );\n\n  // 检查当前是否有高亮样式\n  const hasHighlight = highlightColors.some(color => \n    currentInlineStyle.has(`HIGHLIGHT_${color.value.replace('#', '').replace('transparent', 'NONE')}`)\n  );\n\n  const ColorPalette = ({ colors, onColorSelect, title }) => (\n    <Box sx={{ p: 2, width: 240 }}>\n      <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>\n        {title}\n      </Typography>\n      <Grid container spacing={1}>\n        {colors.map((color) => (\n          <Grid item key={color.name}>\n            <Tooltip title={color.name}>\n              <Box\n                onClick={() => onColorSelect(color.value)}\n                sx={{\n                  width: 24,\n                  height: 24,\n                  backgroundColor: color.value === 'transparent' ? '#fff' : color.value,\n                  border: color.value === 'transparent' ? '2px solid #ddd' : '1px solid #ddd',\n                  borderRadius: 1,\n                  cursor: 'pointer',\n                  position: 'relative',\n                  '&:hover': {\n                    transform: 'scale(1.1)',\n                    boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n                  },\n                  ...(color.value === 'transparent' && {\n                    '&::before': {\n                      content: '\"\"',\n                      position: 'absolute',\n                      top: '50%',\n                      left: '10%',\n                      right: '10%',\n                      height: '2px',\n                      backgroundColor: '#ff0000',\n                      transform: 'translateY(-50%) rotate(45deg)',\n                    }\n                  })\n                }}\n              />\n            </Tooltip>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n\n  return (\n    <Box sx={{ display: 'flex', gap: 0.2}}>\n      {/* 文字颜色按钮 */}\n      <Tooltip title=\"Text Color\">\n        <IconButton\n          size=\"small\"\n          onClick={handleTextColorClick}\n          color={hasTextColor ? 'primary' : 'default'}\n        >\n          <FormatColorText fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n\n      {/* 高亮颜色按钮 */}\n      <Tooltip title=\"Highlight Color\">\n        <IconButton\n          size=\"small\"\n          onClick={handleHighlightClick}\n          color={hasHighlight ? 'primary' : 'default'}\n        >\n          <FormatColorFill fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n\n      {/* 文字颜色选择器弹窗 */}\n      <Popover\n        open={Boolean(textColorAnchor)}\n        anchorEl={textColorAnchor}\n        onClose={handleTextColorClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <ColorPalette \n          colors={colors} \n          onColorSelect={applyTextColor}\n          title=\"Text Color\"\n        />\n      </Popover>\n\n      {/* 高亮颜色选择器弹窗 */}\n      <Popover\n        open={Boolean(highlightAnchor)}\n        anchorEl={highlightAnchor}\n        onClose={handleHighlightClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <ColorPalette \n          colors={highlightColors} \n          onColorSelect={applyHighlightColor}\n          title=\"Highlight Color\"\n        />\n      </Popover>\n    </Box>\n  );\n};\n\nexport default ColorButtons;","export const createStyleMap = (fontSizes, fontFamilies) => {\n  const styleMap = {};\n\n  // 字体大小样式\n  if (fontSizes) {\n    fontSizes.forEach(size => {\n      styleMap[`FONTSIZE_${size}`] = {\n        fontSize: `${size}px`,\n      };\n    });\n  }\n\n  // 字体系列样式\n  if (fontFamilies) {\n    fontFamilies.forEach(family => {\n      const key = family.replace(/\\s+/g, '_').toUpperCase();\n      styleMap[`FONTFAMILY_${key}`] = {\n        fontFamily: family,\n      };\n    });\n  }\n\n  // 文字颜色样式\n  const colors = [\n    { name: 'Black', value: '#000000' },\n    { name: 'Red', value: '#FF0000' },\n    { name: 'Green', value: '#00FF00' },\n    { name: 'Blue', value: '#0000FF' },\n    { name: 'Orange', value: '#FFA500' },\n    { name: 'Purple', value: '#800080' },\n    { name: 'Pink', value: '#FFC0CB' },\n    { name: 'Brown', value: '#A52A2A' },\n    { name: 'Gray', value: '#808080' },\n    { name: 'Navy', value: '#000080' },\n    { name: 'Teal', value: '#008080' },\n    { name: 'Maroon', value: '#800000' }\n  ];\n\n  colors.forEach(color => {\n    const colorKey = color.value.replace('#', '');\n    styleMap[`COLOR_${colorKey}`] = {\n      color: color.value,\n    };\n  });\n\n  // 高亮颜色样式\n  const highlightColors = [\n    { name: 'Yellow', value: '#FFFF00' },\n    { name: 'Green', value: '#90EE90' },\n    { name: 'Pink', value: '#FFB6C1' },\n    { name: 'Blue', value: '#ADD8E6' },\n    { name: 'Orange', value: '#FFE4B5' },\n    { name: 'Purple', value: '#DDA0DD' },\n    { name: 'Red', value: '#FFA07A' },\n    { name: 'Gray', value: '#D3D3D3' }\n  ];\n\n  highlightColors.forEach(color => {\n    const colorKey = color.value.replace('#', '');\n    styleMap[`HIGHLIGHT_${colorKey}`] = {\n      backgroundColor: color.value,\n    };\n  });\n\n  // 移除高亮的特殊样式\n  styleMap['HIGHLIGHT_NONE'] = {\n    backgroundColor: 'transparent',\n  };\n\n  return styleMap;\n};\n\nexport const getBlockStyle = (block) => {\n  const blockData = block.getData();\n  const textAlign = blockData.get('text-align');\n  return textAlign ? `text-align-${textAlign}` : null;\n};\n\nexport const getCurrentBlockData = (editorState) => {\n  const selection = editorState.getSelection();\n  const currentContent = editorState.getCurrentContent();\n  const blockKey = selection.getStartKey();\n  const block = currentContent.getBlockForKey(blockKey);\n  return {\n    blockType: block.getType(),\n    blockData: block.getData(),\n    currentAlignment: block.getData().get('text-align')\n  };\n};","import { Box, IconButton, Tooltip } from '@mui/material';\nimport {\n  FormatAlignLeft,\n  FormatAlignCenter,\n  FormatAlignRight,\n  FormatAlignJustify\n} from '@mui/icons-material';\nimport { getCurrentBlockData } from '../../utils/editorUtils';\n\nconst AlignmentButtons = ({ editorState, onAlignment }) => {\n  const { currentAlignment } = getCurrentBlockData(editorState);\n\n  const alignmentButtons = [\n    { alignment: 'left', icon: FormatAlignLeft, title: 'Align Left' },\n    { alignment: 'center', icon: FormatAlignCenter, title: 'Align Center' },\n    { alignment: 'right', icon: FormatAlignRight, title: 'Align Right' },\n    { alignment: 'justify', icon: FormatAlignJustify, title: 'Justify' }\n  ];\n\n  return (\n    <Box sx={{ display: 'flex', gap: 0 }}>\n      {alignmentButtons.map(({ alignment, icon: Icon, title }) => (\n        <Tooltip key={alignment} title={title}>\n          <IconButton\n            size=\"small\"\n            onClick={() => onAlignment(alignment)}\n            color={currentAlignment === alignment ? 'primary' : 'default'}\n          >\n            <Icon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ))}\n    </Box>\n  );\n};\n\nexport default AlignmentButtons;","import { Box, IconButton, Tooltip } from '@mui/material';\nimport {\n  FormatListBulleted,\n  FormatListNumbered\n} from '@mui/icons-material';\nimport { getCurrentBlockData } from '../../utils/editorUtils';\n\nconst ListButtons = ({ editorState, onBlockType }) => {\n  const { blockType } = getCurrentBlockData(editorState);\n\n  const listButtons = [\n    { type: 'unordered-list-item', icon: FormatListBulleted, title: 'Bullet List' },\n    { type: 'ordered-list-item', icon: FormatListNumbered, title: 'Numbered List' }\n  ];\n\n  return (\n    <Box sx={{ display: 'flex', gap: 0 }}>\n      {listButtons.map(({ type, icon: Icon, title }) => (\n        <Tooltip key={type} title={title}>\n          <IconButton\n            size=\"small\"\n            onClick={() => onBlockType(type)}\n            color={blockType === type ? 'primary' : 'default'}\n          >\n            <Icon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ))}\n    </Box>\n  );\n};\n\nexport default ListButtons;","import { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n  Box,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\n\nconst ImageUrlDialog = ({ \n  open, \n  onClose, \n  imageUrl, \n  setImageUrl, \n  imageAlt, \n  setImageAlt, \n  onInsert \n}) => {\n  const [imageWidth, setImageWidth] = useState('300');\n  const [imageHeight, setImageHeight] = useState('200');\n  const [alignment, setAlignment] = useState('none');\n  const [previewLoaded, setPreviewLoaded] = useState(false);\n  const [previewError, setPreviewError] = useState(false);\n\n  const isValidUrl = (url) => {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  const handleImageLoad = () => {\n    setPreviewLoaded(true);\n    setPreviewError(false);\n  };\n\n  const handleImageError = () => {\n    setPreviewLoaded(false);\n    setPreviewError(true);\n  };\n\n  const handleInsert = () => {\n    if (imageUrl.trim() && isValidUrl(imageUrl)) {\n      onInsert({\n        url: imageUrl.trim(),\n        alt: imageAlt.trim(),\n        width: parseInt(imageWidth) || 300,\n        height: parseInt(imageHeight) || 200,\n        alignment: alignment\n      });\n    }\n  };\n\n  const handleCancel = () => {\n    setImageUrl('');\n    setImageAlt('');\n    setImageWidth('300');\n    setImageHeight('200');\n    setAlignment('none');\n    setPreviewLoaded(false);\n    setPreviewError(false);\n    onClose();\n  };\n\n  // Auto-detect image dimensions when URL changes\n  useEffect(() => {\n    if (imageUrl && isValidUrl(imageUrl)) {\n      const img = new Image();\n      img.onload = () => {\n        const maxWidth = 500;\n        const maxHeight = 400;\n        let { width, height } = img;\n        \n        if (width > maxWidth || height > maxHeight) {\n          const ratio = Math.min(maxWidth / width, maxHeight / height);\n          width = Math.round(width * ratio);\n          height = Math.round(height * ratio);\n        }\n        \n        setImageWidth(width.toString());\n        setImageHeight(height.toString());\n        setPreviewLoaded(true);\n        setPreviewError(false);\n      };\n      img.onerror = () => {\n        setPreviewError(true);\n        setPreviewLoaded(false);\n      };\n      img.src = imageUrl;\n    } else {\n      setPreviewLoaded(false);\n      setPreviewError(false);\n    }\n  }, [imageUrl]);\n\n  return (\n    <Dialog \n      open={open} \n      onClose={handleCancel}\n      maxWidth=\"md\"\n      fullWidth\n    >\n      <DialogTitle>\n        Insert Image from URL\n      </DialogTitle>\n      <DialogContent>\n        <Box sx={{ mt: 1 }}>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Image URL\"\n            type=\"url\"\n            fullWidth\n            variant=\"outlined\"\n            value={imageUrl}\n            onChange={(e) => setImageUrl(e.target.value)}\n            placeholder=\"https://example.com/image.jpg\"\n            sx={{ mb: 2 }}\n            error={!!(imageUrl && !isValidUrl(imageUrl))}\n            helperText={\n              imageUrl && !isValidUrl(imageUrl) \n                ? 'Please enter a valid URL' \n                : 'Enter the URL of the image you want to insert'\n            }\n          />\n          \n          <TextField\n            margin=\"dense\"\n            label=\"Alt Text\"\n            type=\"text\"\n            fullWidth\n            variant=\"outlined\"\n            value={imageAlt}\n            onChange={(e) => setImageAlt(e.target.value)}\n            placeholder=\"Description of the image\"\n            sx={{ mb: 2 }}\n            helperText=\"Alternative text for accessibility (optional)\"\n          />\n\n          <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n            <TextField\n              margin=\"dense\"\n              label=\"Width (px)\"\n              type=\"number\"\n              variant=\"outlined\"\n              value={imageWidth}\n              onChange={(e) => setImageWidth(e.target.value)}\n              placeholder=\"300\"\n              sx={{ flex: 1 }}\n              inputProps={{ min: 50, max: 1000 }}\n            />\n            <TextField\n              margin=\"dense\"\n              label=\"Height (px)\"\n              type=\"number\"\n              variant=\"outlined\"\n              value={imageHeight}\n              onChange={(e) => setImageHeight(e.target.value)}\n              placeholder=\"200\"\n              sx={{ flex: 1 }}\n              inputProps={{ min: 50, max: 800 }}\n            />\n          </Box>\n\n          <FormControl fullWidth margin=\"dense\" sx={{ mb: 2 }}>\n            <InputLabel>Alignment</InputLabel>\n            <Select\n              value={alignment}\n              onChange={(e) => setAlignment(e.target.value)}\n              label=\"Alignment\"\n            >\n              <MenuItem value=\"none\">Default</MenuItem>\n              <MenuItem value=\"left\">Left</MenuItem>\n              <MenuItem value=\"center\">Center</MenuItem>\n              <MenuItem value=\"right\">Right</MenuItem>\n            </Select>\n          </FormControl>\n\n          {/* Image Preview */}\n          {imageUrl && isValidUrl(imageUrl) && (\n            <Box sx={{ mt: 2, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                Preview:\n              </Typography>\n              <Box sx={{ \n                display: 'flex',\n                justifyContent: alignment === 'center' ? 'center' : \n                              alignment === 'right' ? 'flex-end' : 'flex-start',\n                p: 1,\n                border: '1px solid #ddd',\n                borderRadius: 1,\n                bgcolor: 'white',\n                minHeight: '100px',\n                alignItems: 'center'\n              }}>\n                {previewError ? (\n                  <Box sx={{ \n                    display: 'flex', \n                    alignItems: 'center', \n                    justifyContent: 'center',\n                    height: '100px',\n                    color: 'error.main'\n                  }}>\n                    <Typography variant=\"body2\">\n                      Failed to load image\n                    </Typography>\n                  </Box>\n                ) : (\n                  <img\n                    src={imageUrl}\n                    alt={imageAlt || 'Preview'}\n                    style={{\n                      maxWidth: '100%',\n                      maxHeight: '200px',\n                      width: 'auto',\n                      height: 'auto',\n                      border: '1px solid #ddd',\n                      borderRadius: '4px'\n                    }}\n                    onLoad={handleImageLoad}\n                    onError={handleImageError}\n                  />\n                )}\n              </Box>\n              {previewLoaded && (\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                  Image will be resized to {imageWidth} × {imageHeight} pixels\n                </Typography>\n              )}\n            </Box>\n          )}\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel}>Cancel</Button>\n        <Button \n          onClick={handleInsert} \n          variant=\"contained\"\n          disabled={!imageUrl.trim() || !isValidUrl(imageUrl)}\n        >\n          Insert Image\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ImageUrlDialog;","import { useState } from 'react';\nimport { \n  Box, \n  IconButton, \n  Tooltip, \n  Button, \n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\nimport { createRoot } from 'react-dom/client';\nimport {\n  Link,\n  LinkOff,\n  Image as ImageIcon\n} from '@mui/icons-material';\nimport DatasetLinkedIcon from '@mui/icons-material/DatasetLinked';\nimport ImageUrlDialog from './ImageUrlDialog'; // 引入我们刚创建的组件\n\nconst MiscButtons = ({ editorState, imageHandlers, fileInputRef, linkHandlers, embedHandlers }) => {\n  const [linkDialogOpen, setLinkDialogOpen] = useState(false);\n  const [linkUrl, setLinkUrl] = useState('');\n  const [linkText, setLinkText] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  \n  // Embedded website states\n  const [embedDialogOpen, setEmbedDialogOpen] = useState(false);\n  const [embedUrl, setEmbedUrl] = useState('');\n  const [embedType, setEmbedType] = useState('iframe');\n  const [embedWidth, setEmbedWidth] = useState('100%');\n  const [embedHeight, setEmbedHeight] = useState('400');\n\n  const openFilePicker = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleImageMenuClick = (event) => {\n    const rect = event.currentTarget.getBoundingClientRect();\n    const menu = (\n      <Box sx={{\n        position: 'fixed',\n        top: rect.bottom + 5,\n        left: rect.left,\n        bgcolor: 'background.paper',\n        boxShadow: 3,\n        borderRadius: 1,\n        p: 1,\n        zIndex: 1000,\n        minWidth: 150\n      }}>\n        <Button\n          size=\"small\"\n          fullWidth\n          onClick={() => {\n            openFilePicker();\n            document.getElementById('image-menu')?.remove();\n          }}\n          sx={{ mb: 1, justifyContent: 'flex-start', textTransform: 'none' }}\n        >\n          From Local\n        </Button>\n        <Button\n          size=\"small\"\n          fullWidth\n          onClick={() => {\n            imageHandlers.setImageDialogOpen(true);\n            document.getElementById('image-menu')?.remove();\n          }}\n          sx={{ justifyContent: 'flex-start', textTransform: 'none' }}\n        >\n          From URL\n        </Button>\n      </Box>\n    );\n    \n    // Remove existing menu\n    document.getElementById('image-menu')?.remove();\n    \n    // Create new menu\n    const menuElement = document.createElement('div');\n    menuElement.id = 'image-menu';\n    document.body.appendChild(menuElement);\n    \n    const root = createRoot(menuElement);\n    root.render(menu);\n    \n    // Click outside to close\n    const handleClickOutside = () => {\n      document.getElementById('image-menu')?.remove();\n      document.removeEventListener('click', handleClickOutside);\n    };\n    setTimeout(() => {\n      document.addEventListener('click', handleClickOutside);\n    }, 100);\n  };\n\n  const handleLinkClick = () => {\n    const selection = editorState.getSelection();\n    const selectedText = editorState.getCurrentContent()\n      .getBlockForKey(selection.getStartKey())\n      .getText()\n      .slice(selection.getStartOffset(), selection.getEndOffset());\n    \n    // Check if current selection is already a link\n    const currentEntity = linkHandlers.getCurrentLinkEntity(editorState);\n    \n    if (currentEntity) {\n      // Editing existing link\n      const entityData = editorState.getCurrentContent().getEntity(currentEntity).getData();\n      setLinkUrl(entityData.url || '');\n      setLinkText(selectedText || entityData.text || '');\n      setIsEditingLink(true);\n    } else {\n      // Creating new link\n      setLinkUrl('');\n      setLinkText(selectedText || '');\n      setIsEditingLink(false);\n    }\n    \n    setLinkDialogOpen(true);\n  };\n\n  const handleLinkSave = () => {\n    if (linkUrl.trim()) {\n      if (isEditingLink) {\n        linkHandlers.updateLink(linkUrl, linkText);\n      } else {\n        linkHandlers.insertLink(linkUrl, linkText);\n      }\n    }\n    handleLinkCancel();\n  };\n\n  const handleLinkCancel = () => {\n    setLinkDialogOpen(false);\n    setLinkUrl('');\n    setLinkText('');\n    setIsEditingLink(false);\n  };\n\n  const handleRemoveLink = () => {\n    linkHandlers.removeLink();\n  };\n\n  // Embedded website handlers\n  const handleEmbedClick = () => {\n    setEmbedDialogOpen(true);\n  };\n\n  const handleEmbedSave = () => {\n    if (embedUrl.trim()) {\n      const embedData = {\n        url: embedUrl,\n        type: embedType,\n        width: embedWidth,\n        height: embedHeight\n      };\n      \n      if (embedHandlers && embedHandlers.insertEmbed) {\n        embedHandlers.insertEmbed(embedData);\n      }\n    }\n    handleEmbedCancel();\n  };\n\n  const handleEmbedCancel = () => {\n    setEmbedDialogOpen(false);\n    setEmbedUrl('');\n    setEmbedType('iframe');\n    setEmbedWidth('100%');\n    setEmbedHeight('400');\n  };\n\n  // Image URL handlers\n  const handleImageUrlInsert = (imageData) => {\n    if (imageHandlers && imageHandlers.handleImageUrlInsert) {\n      imageHandlers.handleImageUrlInsert(imageData);\n    }\n  };\n\n  const isValidUrl = (url) => {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n\n  // Check if current selection has a link\n  const hasLink = linkHandlers.getCurrentLinkEntity(editorState) !== null;\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', gap: 0 }}>\n        \n        <Tooltip title={hasLink ? \"Edit Link\" : \"Insert Link\"}>\n          <IconButton \n            size=\"small\" \n            onClick={handleLinkClick}\n            color={hasLink ? 'primary' : 'default'}\n          >\n            <Link fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        \n        {hasLink && (\n          <Tooltip title=\"Remove Link\">\n            <IconButton size=\"small\" onClick={handleRemoveLink}>\n              <LinkOff fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        )}\n\n        <Tooltip title=\"Embed Website\">\n          <IconButton size=\"small\" onClick={handleEmbedClick}>\n            <DatasetLinkedIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        \n        <Tooltip title=\"Insert Image\">\n          <span>\n            <IconButton size=\"small\" onClick={handleImageMenuClick}>\n              <ImageIcon fontSize=\"small\" />\n            </IconButton>\n          </span>\n        </Tooltip>\n\n      </Box>\n\n      {/* Link Dialog */}\n      <Dialog \n        open={linkDialogOpen} \n        onClose={handleLinkCancel}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>\n          {isEditingLink ? 'Edit Link' : 'Insert Link'}\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ mt: 1 }}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"URL\"\n              type=\"url\"\n              fullWidth\n              variant=\"outlined\"\n              value={linkUrl}\n              onChange={(e) => setLinkUrl(e.target.value)}\n              placeholder=\"https://example.com\"\n              sx={{ mb: 2 }}\n            />\n            <TextField\n              margin=\"dense\"\n              label=\"Display Text\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              value={linkText}\n              onChange={(e) => setLinkText(e.target.value)}\n              placeholder=\"Link text (optional)\"\n              helperText=\"Leave empty to use the URL as display text\"\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleLinkCancel}>Cancel</Button>\n          <Button \n            onClick={handleLinkSave} \n            variant=\"contained\"\n            disabled={!linkUrl.trim()}\n          >\n            {isEditingLink ? 'Update' : 'Insert'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Image URL Dialog */}\n      <ImageUrlDialog\n        open={imageHandlers.imageDialogOpen}\n        onClose={() => imageHandlers.setImageDialogOpen(false)}\n        imageUrl={imageHandlers.imageUrl}\n        setImageUrl={imageHandlers.setImageUrl}\n        imageAlt={imageHandlers.imageAlt}\n        setImageAlt={imageHandlers.setImageAlt}\n        onInsert={handleImageUrlInsert}\n      />\n\n      {/* Embed Website Dialog */}\n      <Dialog \n        open={embedDialogOpen} \n        onClose={handleEmbedCancel}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>\n          Embed Website\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ mt: 1 }}>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Website URL\"\n              type=\"url\"\n              fullWidth\n              variant=\"outlined\"\n              value={embedUrl}\n              onChange={(e) => setEmbedUrl(e.target.value)}\n              placeholder=\"https://example.com\"\n              sx={{ mb: 2 }}\n              error={!!(embedUrl && !isValidUrl(embedUrl))}\n              helperText={embedUrl && !isValidUrl(embedUrl) ? 'Please enter a valid URL' : 'Enter the URL of the website you want to embed'}\n            />\n            \n            <FormControl fullWidth margin=\"dense\" sx={{ mb: 2 }}>\n              <InputLabel>Embed Type</InputLabel>\n              <Select\n                value={embedType}\n                onChange={(e) => setEmbedType(e.target.value)}\n                label=\"Embed Type\"\n              >\n                <MenuItem value=\"iframe\">IFrame</MenuItem>\n                <MenuItem value=\"preview\">Link Preview</MenuItem>\n              </Select>\n            </FormControl>\n\n            <Box sx={{ display: 'flex', gap: 2 }}>\n              <TextField\n                margin=\"dense\"\n                label=\"Width\"\n                type=\"text\"\n                variant=\"outlined\"\n                value={embedWidth}\n                onChange={(e) => setEmbedWidth(e.target.value)}\n                placeholder=\"100%\"\n                sx={{ flex: 1 }}\n                helperText=\"e.g., 100%, 800px\"\n              />\n              <TextField\n                margin=\"dense\"\n                label=\"Height\"\n                type=\"text\"\n                variant=\"outlined\"\n                value={embedHeight}\n                onChange={(e) => setEmbedHeight(e.target.value)}\n                placeholder=\"400\"\n                sx={{ flex: 1 }}\n                helperText=\"Height in pixels\"\n              />\n            </Box>\n\n            {embedUrl && isValidUrl(embedUrl) && (\n              <Box sx={{ mt: 2, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  Preview:\n                </Typography>\n                <Box sx={{ \n                  border: '1px solid #ddd', \n                  borderRadius: 1, \n                  overflow: 'hidden',\n                  height: '200px'\n                }}>\n                  <iframe\n                    src={embedUrl}\n                    width=\"100%\"\n                    height=\"100%\"\n                    style={{ border: 'none' }}\n                    title=\"Website Preview\"\n                  />\n                </Box>\n              </Box>\n            )}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleEmbedCancel}>Cancel</Button>\n          <span>\n            <Button \n              onClick={handleEmbedSave} \n              variant=\"contained\"\n              disabled={!embedUrl.trim() || !isValidUrl(embedUrl)}\n            >\n              Embed\n            </Button>\n          </span>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default MiscButtons;","import { Fragment } from 'react';\nimport { \n  Toolbar, \n  Box, \n  Divider \n} from \"@mui/material\";\nimport UndoRedoButtons from './toolbar/UndoRedoButtons';\nimport FontControls from './toolbar/FontControls';\nimport TextStyleButtons from './toolbar/TextStyleButtons';\nimport ColorButtons from './toolbar/ColorButtons';  // 新增\nimport AlignmentButtons from './toolbar/AlignmentButtons';\nimport ListButtons from './toolbar/ListButtons';\nimport MiscButtons from './toolbar/MiscButtons';\n\nconst EditorToolbar = ({ \n  editorState, \n  handlers, \n  fontHandlers, \n  imageHandlers,\n  linkHandlers,\n  embedHandlers,\n  fileInputRef \n}) => {\n  const buttonGroups = [\n    {\n      key: 'undo-redo',\n      component: (\n        <UndoRedoButtons \n          editorState={editorState}\n          onUndo={handlers.handleUndo}\n          onRedo={handlers.handleRedo}\n        />\n      )\n    },\n    {\n      key: 'font-controls',\n      component: (\n        <FontControls \n          fontHandlers={fontHandlers}\n        />\n      )\n    },\n    {\n      key: 'color-controls',\n      component: (\n        <ColorButtons \n          editorState={editorState}\n          onInlineStyle={handlers.handleInlineStyle}\n        />\n      )\n    },\n    {\n      key: 'text-style',\n      component: (\n        <TextStyleButtons \n          editorState={editorState}\n          onInlineStyle={handlers.handleInlineStyle}\n        />\n      )\n    },\n    {\n      key: 'alignment',\n      component: (\n        <AlignmentButtons \n          editorState={editorState}\n          onAlignment={handlers.handleAlignment}\n        />\n      )\n    },\n    {\n      key: 'list',\n      component: (\n        <ListButtons \n          editorState={editorState}\n          onBlockType={handlers.handleBlockType}\n        />\n      )\n    },\n    {\n      key: 'misc',\n      component: (\n        <MiscButtons \n          editorState={editorState}\n          imageHandlers={imageHandlers}\n          linkHandlers={linkHandlers}\n          embedHandlers={embedHandlers} // 新增\n          fileInputRef={fileInputRef}\n        />\n      )\n    }\n  ];\n\n  return (\n    <Toolbar \n      variant=\"dense\" \n      sx={{ \n        minHeight: 48,\n        borderBottom: '1px solid #e0e0e0',\n        flexWrap: 'wrap',\n        gap: 0,\n        px: 1,\n        py: 0.5,\n        alignItems: 'flex-start',\n      }}\n    >\n      {buttonGroups.map((group, index) => (\n        <Fragment key={group.key}>\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              flexShrink: 0,\n              minHeight: 40,\n            }}\n          >\n            {group.component}\n          </Box>\n          \n          {index < buttonGroups.length - 1 && (\n            <Divider \n              orientation=\"vertical\" \n              flexItem \n              sx={{ \n                mx: 1,\n                alignSelf: 'stretch',\n                minHeight: 30,\n              }} \n            />\n          )}\n        </Fragment>\n      ))}\n    </Toolbar>\n  );\n};\n\nexport default EditorToolbar;","import { RichUtils } from 'draft-js';\n\nconst FONT_SIZES = [10, 11, 12, 14, 16, 18, 20, 22, 24, 30, 36, 48, 60];\nconst FONT_FAMILIES = ['Arial', 'Georgia', 'Times New Roman', \"Impact\", \"Verdana\"];\n\n// 辅助函数：将字体名称转换为样式键\nconst getFontFamilyStyleKey = (fontFamily) => {\n  return `FONTFAMILY_${fontFamily.replace(/\\s+/g, '_').toUpperCase()}`;\n};\n\nexport const useFontHandlers = (editorState, onEditorStateChange) => {\n  const handleFontSize = (fontSize) => {\n    const selection = editorState.getSelection();\n    let newEditorState = editorState;\n    \n    // Remove existing font sizes\n    FONT_SIZES.forEach(size => {\n      if (newEditorState.getCurrentInlineStyle().has(`FONTSIZE_${size}`)) {\n        newEditorState = RichUtils.toggleInlineStyle(newEditorState, `FONTSIZE_${size}`);\n      }\n    });\n    \n    onEditorStateChange(RichUtils.toggleInlineStyle(newEditorState, `FONTSIZE_${fontSize}`));\n  };\n\n  const handleFontFamily = (fontFamily) => {\n    let newEditorState = editorState;\n    \n    // Remove existing font families - 使用正确的样式键格式\n    FONT_FAMILIES.forEach(family => {\n      const styleKey = getFontFamilyStyleKey(family);\n      if (newEditorState.getCurrentInlineStyle().has(styleKey)) {\n        newEditorState = RichUtils.toggleInlineStyle(newEditorState, styleKey);\n      }\n    });\n    \n    // 应用新的字体样式\n    const newStyleKey = getFontFamilyStyleKey(fontFamily);\n    onEditorStateChange(RichUtils.toggleInlineStyle(newEditorState, newStyleKey));\n  };\n\n  const getCurrentFontSize = () => {\n    const currentStyle = editorState.getCurrentInlineStyle();\n    return FONT_SIZES.find(size => currentStyle.has(`FONTSIZE_${size}`)) || '';\n  };\n\n  const getCurrentFontFamily = () => {\n    const currentStyle = editorState.getCurrentInlineStyle();\n    return FONT_FAMILIES.find(family => {\n      const styleKey = getFontFamilyStyleKey(family);\n      return currentStyle.has(styleKey);\n    }) || '';\n  };\n\n  return {\n    handleFontSize,\n    handleFontFamily,\n    getCurrentFontSize,\n    getCurrentFontFamily,\n    fontSizes: FONT_SIZES,\n    fontFamilies: FONT_FAMILIES\n  };\n};","import { useRef } from 'react';\nimport ImageComponent from './components/ImageComponent';\nimport LinkComponent from './components/LinkComponent';\nimport EmbedComponent from './components/EmbedComponent'; // 新增\nimport { Box } from \"@mui/material\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport EditorToolbar from './components/EditorToolbar';\nimport { useEditorHandlers } from './hooks/useEditorHandlers';\nimport { useFontHandlers } from './hooks/useFontHandlers';\nimport { useImageHandlers } from './hooks/useImageHandlers';\nimport { useLinkHandlers } from './hooks/useLinkHandlers';\nimport { useEmbedHandlers } from './hooks/useEmbedHandlers'; // 新增\nimport { createStyleMap, getBlockStyle } from './utils/editorUtils';\n\nconst DraftJsWysiwyg = ({  \n  editorState,  \n  onEditorStateChange,  \n  placeholder = \"\", \n  readOnly = false\n}) => {\n  const fileInputRef = useRef(null);\n  \n  const handlers = !readOnly ? useEditorHandlers(editorState, onEditorStateChange) : null;\n  const fontHandlers = !readOnly ? useFontHandlers(editorState, onEditorStateChange) : null;\n  const imageHandlers = !readOnly ? useImageHandlers(editorState, onEditorStateChange) : null;\n  const linkHandlers = !readOnly ? useLinkHandlers(editorState, onEditorStateChange) : null;\n  const embedHandlers = !readOnly ? useEmbedHandlers(editorState, onEditorStateChange) : null; // 新增\n\n  const blockRendererFn = (block) => {\n    if (block.getType() === 'atomic') {\n      const entity = editorState.getCurrentContent().getEntity(block.getEntityAt(0));\n      if (entity) {\n        const entityType = entity.getType();\n        \n        if (entityType === 'IMAGE') {\n          return {\n            component: ImageComponent,\n            editable: false,\n          };\n        }\n        \n        // 新增：处理嵌入网站\n        if (entityType === 'EMBED') {\n          return {\n            component: EmbedComponent,\n            editable: false,\n            props: {\n              onRemove: embedHandlers?.removeEmbed,\n              readOnly: readOnly, // 传递 readOnly 属性\n            },\n          };\n        }\n      }\n    }\n    return null;\n  };\n\n  // 实体装饰器，用于渲染链接\n  const decorators = [\n    {\n      strategy: (contentBlock, callback, contentState) => {\n        contentBlock.findEntityRanges(\n          (character) => {\n            const entityKey = character.getEntity();\n            return (\n              entityKey !== null &&\n              contentState.getEntity(entityKey).getType() === 'LINK'\n            );\n          },\n          callback\n        );\n      },\n      component: ({ children, entityKey, contentState }) => (\n        <LinkComponent entityKey={entityKey} contentState={contentState}>\n          {children}\n        </LinkComponent>\n      ),\n    },\n  ];\n\n  // 修复：在 readonly 模式下也要创建完整的样式映射\n  const FONT_SIZES = [10, 11, 12, 14, 16, 18, 20, 22, 24, 30, 36, 48, 60];\n  const FONT_FAMILIES = ['Arial', 'Georgia', 'Impact', 'Tahoma', 'Times New Roman', 'Verdana'];\n  \n  const styleMap = createStyleMap(\n    fontHandlers?.fontSizes || FONT_SIZES, \n    fontHandlers?.fontFamilies || FONT_FAMILIES\n  );\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: !readOnly ? '100%' : 'auto', // 在非readonly模式下占据全部高度\n        minHeight: 0, // 重要：允许flex子元素收缩\n      }}\n    >\n      <style>{`\n        .text-align-left { text-align: left !important; }\n        .text-align-center { text-align: center !important; }\n        .text-align-right { text-align: right !important; }\n        .text-align-justify { text-align: justify !important; }\n        .public-DraftEditor-content div[data-block=\"true\"] {\n          margin-bottom: 10px !important;\n        }\n      `}</style>\n\n      {!readOnly && (\n        <>\n          <input\n            type=\"file\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            accept=\"image/*\"\n            onChange={imageHandlers.handleFileUpload}\n          />\n          <Box sx={{ flexShrink: 0 }}> {/* 防止工具栏被压缩 */}\n            <EditorToolbar\n              editorState={editorState}\n              handlers={handlers}\n              fontHandlers={fontHandlers}\n              imageHandlers={imageHandlers}\n              linkHandlers={linkHandlers}\n              embedHandlers={embedHandlers} // 新增\n              fileInputRef={fileInputRef}\n            />\n          </Box>\n        </>\n      )}\n\n      <Box\n        sx={{\n          width: !readOnly ? 870 : 'auto',\n          maxWidth: '100%', // 防止溢出\n          border: !readOnly ? 'none' : 'none',\n          borderLeft: !readOnly ? '1px solid #e0e0e0' : 'none',\n          borderRight: !readOnly ? '1px solid #e0e0e0' : 'none',\n          borderBottom: !readOnly ? '1px solid #e0e0e0' : 'none',\n          margin: !readOnly ? '0 auto' : 'none',\n          padding: !readOnly ? '10px' : 'none',\n          flex: !readOnly ? 1 : 'none', // 在非readonly模式下占据剩余空间\n          display: 'flex',\n          flexDirection: 'column',\n          minHeight: 0, // 重要：允许flex子元素收缩\n          overflow: !readOnly ? 'hidden' : 'visible', // 在非readonly模式下隐藏溢出\n        }}\n      >\n        <Box\n          sx={{\n            flex: 1,\n            overflow: !readOnly ? 'auto' : 'visible', // 在非readonly模式下允许滚动\n            minHeight: !readOnly ? '400px' : 'auto', // 设置最小高度\n            '& .rdw-editor-main': {\n              height: !readOnly ? '100%' : 'auto',\n              minHeight: !readOnly ? '100%' : 'auto',\n            },\n            '& .DraftEditor-root': {\n              height: !readOnly ? '100%' : 'auto',\n              minHeight: !readOnly ? '100%' : 'auto',\n            },\n            '& .DraftEditor-editorContainer': {\n              height: !readOnly ? '100%' : 'auto',\n              minHeight: !readOnly ? '100%' : 'auto',\n            },\n            '& .public-DraftEditor-content': {\n              height: !readOnly ? '100%' : 'auto',\n              minHeight: !readOnly ? '300px' : 'auto', // 给编辑器内容设置最小高度\n            }\n          }}\n        >\n          <Editor\n            editorState={editorState}\n            onEditorStateChange={onEditorStateChange}\n            placeholder={placeholder}\n            readOnly={readOnly}\n            handleKeyCommand={handlers?.handleKeyCommand}\n            customStyleMap={styleMap}\n            blockStyleFn={getBlockStyle}\n            blockRendererFn={blockRendererFn}\n            decorators={decorators}\n            toolbarHidden={true}\n            mention={{\n              separator: \" \",\n              trigger: \"@\",\n            }}\n            editorStyle={{\n              height: !readOnly ? '100%' : 'auto',\n              minHeight: !readOnly ? '100%' : 'auto',\n            }}\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DraftJsWysiwyg;","import { RichUtils, EditorState, Modifier, AtomicBlockUtils } from 'draft-js';\n\nexport const useEditorHandlers = (editorState, onEditorStateChange) => {\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      onEditorStateChange(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  const handleInlineStyle = (style) => {\n    onEditorStateChange(RichUtils.toggleInlineStyle(editorState, style));\n  };\n\n  const handleBlockType = (blockType) => {\n    onEditorStateChange(RichUtils.toggleBlockType(editorState, blockType));\n  };\n\n  const handleAlignment = (alignment) => {\n    const selection = editorState.getSelection();\n    const currentContent = editorState.getCurrentContent();\n    const blockKey = selection.getStartKey();\n    const block = currentContent.getBlockForKey(blockKey);\n    \n    const blockData = block.getData();\n    const currentAlign = blockData.get('text-align');\n    const newAlignment = currentAlign === alignment ? undefined : alignment;\n    \n    const newBlockData = newAlignment \n      ? blockData.set('text-align', newAlignment)\n      : blockData.delete('text-align');\n    \n    const newContentState = Modifier.setBlockData(\n      currentContent,\n      selection,\n      newBlockData\n    );\n    \n    const newEditorState = EditorState.push(\n      editorState,\n      newContentState,\n      'change-block-data'\n    );\n    \n    onEditorStateChange(newEditorState);\n  };\n\n  const handleUndo = () => {\n    onEditorStateChange(EditorState.undo(editorState));\n  };\n\n  const handleRedo = () => {\n    onEditorStateChange(EditorState.redo(editorState));\n  };\n\n  return {\n    handleKeyCommand,\n    handleInlineStyle,\n    handleBlockType,\n    handleAlignment,\n    handleUndo,\n    handleRedo\n  };\n};","\nimport { useState } from 'react';\nimport { EditorState, AtomicBlockUtils, Modifier } from 'draft-js';\n\nexport const useImageHandlers = (editorState, onEditorStateChange) => {\n  const [imageDialogOpen, setImageDialogOpen] = useState(false);\n  const [imageUrl, setImageUrl] = useState('');\n  const [imageAlt, setImageAlt] = useState('');\n\n  const insertImage = (src, alt = '', width = 300, height = 200, alignment = 'none') => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      'IMAGE',\n      'IMMUTABLE',\n      { \n        src, \n        alt, \n        width: `${width}px`, // 保持与 ImageComponent 兼容的格式\n        height: `${height}px` \n      }\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    \n    // 创建新的编辑器状态\n    let newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntity,\n    });\n    \n    // 插入原子块\n    newEditorState = AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, ' ');\n    \n    // 如果有对齐设置，应用到新创建的块\n    if (alignment && alignment !== 'none') {\n      const currentContent = newEditorState.getCurrentContent();\n      const selection = newEditorState.getSelection();\n      const blockKey = selection.getStartKey();\n      const block = currentContent.getBlockForKey(blockKey);\n      \n      // 设置块的对齐数据\n      const newBlockData = block.getData().set('text-align', alignment);\n      const newContentState = Modifier.setBlockData(\n        currentContent,\n        selection,\n        newBlockData\n      );\n      \n      newEditorState = EditorState.push(\n        newEditorState,\n        newContentState,\n        'change-block-data'\n      );\n    }\n    \n    onEditorStateChange(newEditorState);\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('image/')) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const img = new Image();\n        img.onload = () => {\n          const maxWidth = 500;\n          const maxHeight = 400;\n          let { width, height } = img;\n          \n          if (width > maxWidth || height > maxHeight) {\n            const ratio = Math.min(maxWidth / width, maxHeight / height);\n            width *= ratio;\n            height *= ratio;\n          }\n          \n          insertImage(e.target.result, file.name, Math.round(width), Math.round(height));\n        };\n        img.src = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    }\n    event.target.value = '';\n  };\n\n  // 更新的 URL 插入处理函数\n  const handleImageUrlInsert = (imageData) => {\n    if (imageData && imageData.url) {\n      insertImage(\n        imageData.url,\n        imageData.alt || '',\n        imageData.width || 300,\n        imageData.height || 200,\n        imageData.alignment || 'none'\n      );\n    }\n    \n    // 清理状态\n    setImageUrl('');\n    setImageAlt('');\n    setImageDialogOpen(false);\n  };\n\n  // 保持向后兼容的旧方法\n  const handleImageUrlInsertLegacy = () => {\n    if (imageUrl.trim()) {\n      const img = new Image();\n      img.onload = () => {\n        const maxWidth = 500;\n        const maxHeight = 400;\n        let { width, height } = img;\n        \n        if (width > maxWidth || height > maxHeight) {\n          const ratio = Math.min(maxWidth / width, maxHeight / height);\n          width *= ratio;\n          height *= ratio;\n        }\n        \n        insertImage(imageUrl.trim(), imageAlt.trim(), Math.round(width), Math.round(height));\n      };\n      img.onerror = () => {\n        insertImage(imageUrl.trim(), imageAlt.trim(), 300, 200);\n      };\n      img.src = imageUrl.trim();\n      \n      setImageUrl('');\n      setImageAlt('');\n      setImageDialogOpen(false);\n    }\n  };\n\n  return {\n    imageDialogOpen,\n    setImageDialogOpen,\n    imageUrl,\n    setImageUrl,\n    imageAlt,\n    setImageAlt,\n    handleFileUpload,\n    handleImageUrlInsert, // 新的处理函数\n    handleImageUrlInsertLegacy, // 向后兼容的处理函数\n    insertImage // 导出基础插入函数供其他地方使用\n  };\n};","import { useState } from 'react';\nimport { \n  EditorState, \n  RichUtils, \n  SelectionState,\n  Modifier\n} from 'draft-js';\n\nexport const useLinkHandlers = (editorState, onEditorStateChange) => {\n  const [linkDialogOpen, setLinkDialogOpen] = useState(false);\n\n  // 获取当前选择的链接实体\n  const getCurrentLinkEntity = (editorState) => {\n    const selection = editorState.getSelection();\n    const contentState = editorState.getCurrentContent();\n    const startKey = selection.getStartKey();\n    const startOffset = selection.getStartOffset();\n    const blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\n    const linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\n\n    if (linkKey) {\n      const linkInstance = contentState.getEntity(linkKey);\n      if (linkInstance.getType() === 'LINK') {\n        return linkKey;\n      }\n    }\n    return null;\n  };\n\n  // 插入新链接\n  const insertLink = (url, text) => {\n    const selection = editorState.getSelection();\n    const contentState = editorState.getCurrentContent();\n    \n    // 创建链接实体\n    const contentStateWithEntity = contentState.createEntity(\n      'LINK',\n      'MUTABLE',\n      { url, text }\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    \n    let newContentState;\n    let newEditorState;\n    \n    if (selection.isCollapsed()) {\n      // 如果没有选中文本，插入新文本\n      const textToInsert = text || url;\n      newContentState = Modifier.insertText(\n        contentStateWithEntity,\n        selection,\n        textToInsert,\n        null,\n        entityKey\n      );\n    } else {\n      // 如果有选中文本，为选中的文本添加链接\n      newContentState = Modifier.applyEntity(\n        contentStateWithEntity,\n        selection,\n        entityKey\n      );\n    }\n    \n    newEditorState = EditorState.push(\n      editorState,\n      newContentState,\n      'apply-entity'\n    );\n    \n    // 移动光标到链接文本的末尾\n    if (selection.isCollapsed()) {\n      const textToInsert = text || url;\n      const newSelection = selection.merge({\n        anchorOffset: selection.getAnchorOffset() + textToInsert.length,\n        focusOffset: selection.getFocusOffset() + textToInsert.length,\n      });\n      newEditorState = EditorState.forceSelection(newEditorState, newSelection);\n    }\n    \n    onEditorStateChange(newEditorState);\n  };\n\n  // 更新现有链接\n  const updateLink = (url, text) => {\n    const selection = editorState.getSelection();\n    const contentState = editorState.getCurrentContent();\n    const currentEntity = getCurrentLinkEntity(editorState);\n    \n    if (currentEntity) {\n      // 更新实体数据\n      const newContentState = contentState.mergeEntityData(\n        currentEntity,\n        { url, text }\n      );\n      \n      const newEditorState = EditorState.push(\n        editorState,\n        newContentState,\n        'apply-entity'\n      );\n      \n      onEditorStateChange(newEditorState);\n    }\n  };\n\n  // 移除链接\n  const removeLink = () => {\n    const selection = editorState.getSelection();\n    const currentEntity = getCurrentLinkEntity(editorState);\n    \n    if (currentEntity) {\n      // 找到整个链接的范围\n      const contentState = editorState.getCurrentContent();\n      const startKey = selection.getStartKey();\n      const block = contentState.getBlockForKey(startKey);\n      \n      let linkStart = null;\n      let linkEnd = null;\n      \n      // 找到链接的开始和结束位置\n      block.findEntityRanges(\n        (character) => {\n          const entityKey = character.getEntity();\n          return entityKey === currentEntity;\n        },\n        (start, end) => {\n          linkStart = start;\n          linkEnd = end;\n        }\n      );\n      \n      if (linkStart !== null && linkEnd !== null) {\n        const linkSelection = SelectionState.createEmpty(startKey).merge({\n          anchorOffset: linkStart,\n          focusOffset: linkEnd,\n        });\n        \n        const newContentState = Modifier.applyEntity(\n          contentState,\n          linkSelection,\n          null\n        );\n        \n        const newEditorState = EditorState.push(\n          editorState,\n          newContentState,\n          'apply-entity'\n        );\n        \n        onEditorStateChange(newEditorState);\n      }\n    }\n  };\n\n  // 检查当前选择是否包含链接\n  const hasLinkInSelection = () => {\n    return getCurrentLinkEntity(editorState) !== null;\n  };\n\n  return {\n    linkDialogOpen,\n    setLinkDialogOpen,\n    getCurrentLinkEntity,\n    insertLink,\n    updateLink,\n    removeLink,\n    hasLinkInSelection\n  };\n};","import { useState } from 'react';\nimport { EditorState, AtomicBlockUtils } from 'draft-js';\n\nexport const useEmbedHandlers = (editorState, onEditorStateChange) => {\n  const [embedDialogOpen, setEmbedDialogOpen] = useState(false);\n\n  const insertEmbed = (embedData) => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      'EMBED',\n      'IMMUTABLE',\n      embedData\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntity,\n    });\n    \n    const finalEditorState = AtomicBlockUtils.insertAtomicBlock(\n      newEditorState,\n      entityKey,\n      ' '\n    );\n    \n    onEditorStateChange(finalEditorState);\n  };\n\n  const removeEmbed = (blockKey) => {\n    const contentState = editorState.getCurrentContent();\n    const blockMap = contentState.getBlockMap();\n    const newBlockMap = blockMap.delete(blockKey);\n    \n    const newContentState = contentState.merge({\n      blockMap: newBlockMap,\n    });\n    \n    const newEditorState = EditorState.push(\n      editorState,\n      newContentState,\n      'remove-range'\n    );\n    \n    onEditorStateChange(newEditorState);\n  };\n\n  return {\n    embedDialogOpen,\n    setEmbedDialogOpen,\n    insertEmbed,\n    removeEmbed,\n  };\n};","// ./services/BlogService.js\nimport api from './api';\n\nconst BlogService = {\n  // 获取指定 ID 的博客\n  getBlog: async (blogId, accessToken) => {\n    try {\n      const response = await api.get(`/blog/${blogId}/`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching blog:', error);\n      throw error;\n    }\n  },\n\n  // 添加新博客\n  addBlog: async (blogData, accessToken) => {\n    try {\n      // 1. 创建一个 FormData 对象\n      const formData = new FormData();\n  \n      // 2. 将 blogData 对象中的每个字段添加到 formData\n      for (const [key, value] of Object.entries(blogData)) {\n        formData.append(key, value);\n      }\n  \n      // 3. 发送 POST 请求，并设置请求头为 multipart/form-data\n      const response = await api.post('/add_blog/', formData, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          'Content-Type': 'multipart/form-data'\n        },\n      });\n  \n      return response.data;\n    } catch (error) {\n      console.error('Error adding blog:', error);\n      throw error;\n    }\n  },\n  \n\n  // 编辑博客（支持部分更新）\n  editBlog: async (blogId, blogData, accessToken, isPartial = true) => {\n      try {\n          console.log(blogData);\n          const method = isPartial ? 'patch' : 'put';\n\n          // 创建 FormData 对象\n          const formData = new FormData();\n          for (const key in blogData) {\n              if (blogData[key] !== undefined && blogData[key] !== null) {\n                  formData.append(key, blogData[key]);\n              }\n          }\n\n          const response = await api[method](`/edit_blog/${blogId}/`, formData, {\n              headers: {\n                  Authorization: `Bearer ${accessToken}`,\n                  'Content-Type': 'multipart/form-data',\n              },\n          });\n\n          return response.data;\n      } catch (error) {\n          console.error('Error editing blog:', error);\n          throw error;\n      }\n  },\n\n  toggleVisibility: async (blogId, accessToken) => {\n    try {\n      const response = await api.patch(`/edit_visibility/${blogId}/`, null, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error toggling blog visibility:', error);\n      throw error;\n    }\n  },\n\n  getMeta: async (accessToken, page = null, pageSize = null) => {\n    try {\n      // 创建 FormData 对象\n      const formData = new FormData();\n      \n      if (page !== null && pageSize !== null) {\n        formData.append('page', page);\n        formData.append('page_size', pageSize);\n      }\n\n      const response = await api.post('/get_blog_meta/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      \n      return response.data;\n    } catch (error) {\n      console.error('Error fetching blog metadata:', error);\n      throw error;\n    }\n  },\n\n  // 删除博客\n  deleteBlog: async (blogId, accessToken) => {\n    try {\n      const response = await api.delete(`/delete_blog/${blogId}/`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      return response.status;\n    } catch (error) {\n      console.error('Error deleting blog:', error);\n      throw error;\n    }\n  },\n\n  // 获取草稿\n  getDraft: async (username, accessToken) => {\n    try {\n      const response = await api.get(`/get_draft_blog/${username}/`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching draft:', error);\n      throw error;\n    }\n  },\n\n  // 保存草稿\n  saveDraft: async (draftData, accessToken) => {\n    try {\n      // 1. 创建一个 FormData 对象\n      const formData = new FormData();\n      // 2. 把 draftData 里的键值对添加到 formData\n      for (const [key, value] of Object.entries(draftData)) {\n        formData.append(key, value);\n      }\n  \n      // 3. 发起 POST 请求，Content-Type 将会是 multipart/form-data\n      const response = await api.post('/save_draft_blog/', formData, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n  \n      return response.data;\n    } catch (error) {\n      console.error('Error saving draft:', error);\n      throw error;\n    }\n  },\n  \n};\n\nexport default BlogService;\n"],"names":["_ref","block","contentState","editorState","onEditorStateChange","readOnly","entityData","getEntity","getEntityAt","getData","src","originalSrc","startsWith","split","transformImageUrl","alt","originalWidth","width","originalHeight","height","parseSize","size","defaultValue","numValue","parseInt","replace","isNaN","isSelected","setIsSelected","useState","isResizing","setIsResizing","currentWidth","setCurrentWidth","currentHeight","setCurrentHeight","imageRef","useRef","containerRef","alignment","get","useEffect","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","handleResizeStart","direction","preventDefault","stopPropagation","startX","clientX","startY","clientY","startWidth","startHeight","aspectRatio","handleMouseMove","deltaX","deltaY","newWidth","newHeight","Math","max","min","handleMouseUp","updateImageSize","getCurrentContent","entityKey","newEntityData","newContentState","replaceEntityData","newEditorState","EditorState","push","error","console","warn","_jsxs","ref","style","getContainerStyle","textAlign","margin","position","display","cursor","onClick","children","_jsx","border","borderRadius","draggable","_Fragment","bottom","right","backgroundColor","onMouseDown","top","transform","left","color","padding","fontSize","whiteSpace","round","entity","url","MuiLink","href","rel","underline","sx","textDecoration","blockProps","loading","setLoading","setError","type","isReadOnly","handleRefresh","iframe","querySelector","handleDelete","onRemove","getKey","getDomainFromUrl","URL","hostname","Box","my","Card","variant","CardContent","alignItems","mb","Language","mr","Typography","component","CardActions","Button","startIcon","OpenInNew","window","open","Delete","Paper","overflow","justifyContent","p","bgcolor","theme","palette","mode","borderBottom","borderColor","Tooltip","title","IconButton","Refresh","flexDirection","gutterBottom","mt","onLoad","handleLoad","onError","handleError","sandbox","onUndo","onRedo","gap","disabled","getUndoStack","Undo","getRedoStack","Redo","fontHandlers","FormControl","Select","value","getCurrentFontFamily","onChange","handleFontFamily","displayEmpty","fontFamilies","map","family","MenuItem","fontFamily","minWidth","getCurrentFontSize","handleFontSize","fontSizes","onInlineStyle","currentInlineStyle","getCurrentInlineStyle","styleButtons","icon","FormatBold","FormatItalic","FormatUnderlined","FormatStrikethrough","Superscript","Subscript","Code","_ref2","Icon","has","textColorAnchor","setTextColorAnchor","highlightAnchor","setHighlightAnchor","colors","name","highlightColors","handleTextColorClose","handleHighlightClose","hasTextColor","some","hasHighlight","ColorPalette","onColorSelect","Grid","container","spacing","item","boxShadow","content","event","currentTarget","FormatColorText","FormatColorFill","Popover","Boolean","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","newStyle","forEach","c","styleKey","remove","colorStyle","highlightStyle","getBlockStyle","getCurrentBlockData","selection","getSelection","currentContent","blockKey","getStartKey","getBlockForKey","blockType","getType","blockData","currentAlignment","onAlignment","alignmentButtons","FormatAlignLeft","FormatAlignCenter","FormatAlignRight","FormatAlignJustify","onBlockType","listButtons","FormatListBulleted","FormatListNumbered","imageUrl","setImageUrl","imageAlt","setImageAlt","onInsert","imageWidth","setImageWidth","imageHeight","setImageHeight","setAlignment","previewLoaded","setPreviewLoaded","previewError","setPreviewError","isValidUrl","handleCancel","img","Image","onload","ratio","toString","onerror","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","TextField","autoFocus","label","placeholder","helperText","flex","inputProps","InputLabel","minHeight","maxHeight","handleImageLoad","handleImageError","DialogActions","handleInsert","trim","imageHandlers","fileInputRef","linkHandlers","embedHandlers","linkDialogOpen","setLinkDialogOpen","linkUrl","setLinkUrl","linkText","setLinkText","isEditingLink","setIsEditingLink","embedDialogOpen","setEmbedDialogOpen","embedUrl","setEmbedUrl","embedType","setEmbedType","embedWidth","setEmbedWidth","embedHeight","setEmbedHeight","handleLinkCancel","handleEmbedCancel","hasLink","getCurrentLinkEntity","handleLinkClick","selectedText","getText","slice","getStartOffset","getEndOffset","currentEntity","text","Link","handleRemoveLink","removeLink","LinkOff","handleEmbedClick","DatasetLinkedIcon","_document$getElementB3","rect","getBoundingClientRect","menu","zIndex","_document$getElementB","openFilePicker","_fileInputRef$current","click","getElementById","textTransform","_document$getElementB2","setImageDialogOpen","menuElement","createElement","id","body","appendChild","createRoot","render","_document$getElementB4","setTimeout","ImageIcon","handleLinkSave","updateLink","insertLink","ImageUrlDialog","imageDialogOpen","imageData","handleImageUrlInsert","handleEmbedSave","embedData","insertEmbed","handlers","buttonGroups","key","UndoRedoButtons","handleUndo","handleRedo","FontControls","ColorButtons","handleInlineStyle","TextStyleButtons","AlignmentButtons","handleAlignment","ListButtons","handleBlockType","MiscButtons","Toolbar","flexWrap","px","py","group","index","Fragment","flexShrink","length","Divider","orientation","flexItem","mx","alignSelf","FONT_SIZES","FONT_FAMILIES","getFontFamilyStyleKey","toUpperCase","useFontHandlers","RichUtils","toggleInlineStyle","newStyleKey","currentStyle","find","useEditorHandlers","handleKeyCommand","command","newState","toggleBlockType","newAlignment","undefined","newBlockData","set","delete","Modifier","setBlockData","undo","redo","useImageHandlers","insertImage","arguments","contentStateWithEntity","createEntity","getLastCreatedEntityKey","AtomicBlockUtils","insertAtomicBlock","handleFileUpload","file","files","reader","FileReader","result","readAsDataURL","handleImageUrlInsertLegacy","useLinkHandlers","startKey","startOffset","linkKey","isCollapsed","textToInsert","insertText","applyEntity","newSelection","merge","anchorOffset","getAnchorOffset","focusOffset","getFocusOffset","forceSelection","mergeEntityData","linkStart","linkEnd","findEntityRanges","character","start","end","linkSelection","SelectionState","createEmpty","hasLinkInSelection","useEmbedHandlers","finalEditorState","removeEmbed","newBlockMap","getBlockMap","blockMap","decorators","strategy","contentBlock","callback","LinkComponent","styleMap","createStyleMap","colorKey","accept","EditorToolbar","borderLeft","borderRight","Editor","customStyleMap","blockStyleFn","blockRendererFn","entityType","ImageComponent","editable","EmbedComponent","props","toolbarHidden","mention","separator","trigger","editorStyle","getBlog","async","blogId","accessToken","api","headers","Authorization","data","addBlog","blogData","formData","FormData","Object","entries","append","post","editBlog","isPartial","log","method","toggleVisibility","patch","getMeta","page","pageSize","deleteBlog","status","getDraft","username","saveDraft","draftData"],"sourceRoot":""}
{"version":3,"file":"static/js/426.51192b8d.chunk.js","mappings":"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","sources":["pages/blog-pages/EditBlogPage.js"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { Box, Tabs, Tab, TextField, Button, Snackbar, Alert, CircularProgress } from \"@mui/material\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport CustomAppBar from \"../../components/shared-components/AppBar/AppBar\";\nimport DraftJsWysiwyg from \"../../components/blog-components/Draft-js-wysiwyg/Draft-js-wysiwyg\";\nimport BlogService from \"../../services/BlogService\";\nimport { SettingsContext } from \"../../context/SettingsContext\";\nimport { useUser } from \"../../context/UserContext\";\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\n\nconst EditBlogPage = () => {\n  const navigate = useNavigate();\n  const { blogID } = useParams();\n  const { themeMode, language } = useContext(SettingsContext);\n  const { userState } = useUser();\n\n  const [activeTab, setActiveTab] = useState(0);\n  const [tabsData, setTabsData] = useState({\n    CN: { title: \"\", content: EditorState.createEmpty() },\n    EN: { title: \"\", content: EditorState.createEmpty() },\n  });\n\n  // 新增：保存原版数据\n  const [originalData, setOriginalData] = useState({\n    CN: { title: \"\", content: EditorState.createEmpty() },\n    EN: { title: \"\", content: EditorState.createEmpty() },\n  });\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n  \n  // 添加提交状态\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  // 获取博客详情数据\n  useEffect(() => {\n    const fetchBlogData = async () => {\n      try {\n        const blogData = await BlogService.getBlog(blogID, userState.access);\n        const initialData = {\n          CN: {\n            title: blogData.cn_title || \"\",\n            content: EditorState.createWithContent(convertFromRaw(JSON.parse(blogData.cn_content))),\n          },\n          EN: {\n            title: blogData.en_title || \"\",\n            content: EditorState.createWithContent(convertFromRaw(JSON.parse(blogData.en_content))),\n          },\n        };\n        \n        // 同时设置当前编辑数据和原版数据\n        setTabsData(initialData);\n        setOriginalData(initialData);\n      } catch (error) {\n        console.error(\"Error fetching blog data:\", error);\n      }\n    };\n\n    fetchBlogData();\n  }, [blogID, userState.access]);\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const handleInputChange = (langKey, field, value) => {\n    setTabsData((prev) => ({\n      ...prev,\n      [langKey]: { ...prev[langKey], [field]: value },\n    }));\n  };\n\n  const handleContentChange = (langKey, editorState) => {\n    setTabsData((prev) => ({\n      ...prev,\n      [langKey]: { ...prev[langKey], content: editorState },\n    }));\n  };\n\n  // 新增：恢复原版数据的处理函数\n  const handleRestoreOriginal = () => {\n    setTabsData(originalData);\n    setSnackbarMessage(language === \"cn\" ? \"已恢复到原始内容\" : \"Restored to original content\");\n    setSnackbarSeverity(\"info\");\n    setSnackbarOpen(true);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // 开始提交，设置loading状态\n    setIsSubmitting(true);\n\n    const dataToSubmit = {\n      cn_title: tabsData.CN.title,\n      en_title: tabsData.EN.title,\n      author: userState.username,\n      cn_content: JSON.stringify(convertToRaw(tabsData.CN.content.getCurrentContent())),\n      en_content: JSON.stringify(convertToRaw(tabsData.EN.content.getCurrentContent())),\n    };\n\n    try {\n      await BlogService.editBlog(blogID, dataToSubmit, userState.access);\n      navigate(`/blog/${blogID}?updated=true`);\n    } catch (error) {\n      console.error(\"Error editing blog:\", error);\n      setSnackbarMessage(language === \"cn\" ? \"更新失败\" : \"Failed to update blog\");\n      setSnackbarSeverity(\"error\");\n      setSnackbarOpen(true);\n    } finally {\n      // 无论成功还是失败，都要结束loading状态\n      setIsSubmitting(false);\n    }\n  };\n\n  const labels = {\n    title: language === \"cn\" ? \"标题\" : \"Title\",\n    content: language === \"cn\" ? \"内容\" : \"Content\",\n    submit: language === \"cn\" ? \"提交\" : \"Submit\",\n    restore: language === \"cn\" ? \"恢复\" : \"Restore\",\n  };\n\n  return (\n    <Box sx={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\", overflow: \"hidden\" }}>\n      <CustomAppBar />\n      <Box\n        sx={{\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          maxWidth: 1000,\n          width: \"100%\",\n          mx: \"auto\",\n          mt: 11,\n          px: 2,\n          overflow: \"hidden\",\n        }}\n      >\n        <Tabs\n          value={activeTab}\n          onChange={handleTabChange}\n          sx={{ flexShrink: 0 }}\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"CN\" />\n          <Tab label=\"EN\" />\n        </Tabs>\n\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1,\n            overflow: \"hidden\",\n          }}\n        >\n          <TextField\n            label={\n              activeTab === 0 ? `${labels.title} (CN)` : `${labels.title} (EN)`\n            }\n            variant=\"filled\"\n            value={activeTab === 0 ? tabsData.CN.title : tabsData.EN.title}\n            onChange={(e) =>\n              handleInputChange(activeTab === 0 ? \"CN\" : \"EN\", \"title\", e.target.value)\n            }\n            fullWidth\n            sx={{\n              flexShrink: 0,\n              '& .MuiFilledInput-root': {\n                backgroundColor: 'transparent',\n                '&:hover': { backgroundColor: 'transparent' },\n                '&.Mui-focused': { backgroundColor: 'transparent' },\n              },\n            }}\n          />\n\n          <Box\n            sx={{\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              minHeight: 0,\n            }}\n          >\n            <DraftJsWysiwyg\n              editorState={activeTab === 0 ? tabsData.CN.content : tabsData.EN.content}\n              onEditorStateChange={(editorState) =>\n                handleContentChange(activeTab === 0 ? \"CN\" : \"EN\", editorState)\n              }\n            />\n          </Box>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              gap: 2,\n              mt: 2,\n              mb: 2,\n              flexShrink: 0,\n            }}\n          >\n            <Button \n              type=\"button\"\n              variant=\"outlined\" \n              color=\"secondary\"\n              onClick={handleRestoreOriginal}\n              disabled={isSubmitting}\n              sx={{ minWidth: 90 }}\n            >\n              {labels.restore}\n            </Button>\n            <Button \n              type=\"submit\" \n              variant=\"contained\" \n              color=\"primary\"\n              disabled={isSubmitting}\n              sx={{ minWidth: 90 }}\n            >\n              {isSubmitting ? <CircularProgress size={20} /> : labels.submit}\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={3000}\n        onClose={handleSnackbarClose}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <Alert severity={snackbarSeverity} sx={{ width: \"100%\" }}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default EditBlogPage;"],"names":["EditBlogPage","navigate","useNavigate","blogID","useParams","themeMode","language","useContext","SettingsContext","userState","useUser","activeTab","setActiveTab","useState","tabsData","setTabsData","CN","title","content","EditorState","createEmpty","EN","originalData","setOriginalData","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","isSubmitting","setIsSubmitting","useEffect","async","blogData","BlogService","getBlog","access","initialData","cn_title","createWithContent","convertFromRaw","JSON","parse","cn_content","en_title","en_content","error","console","fetchBlogData","labels","submit","restore","_jsxs","Box","sx","display","flexDirection","height","overflow","children","_jsx","CustomAppBar","flex","maxWidth","width","mx","mt","px","Tabs","value","onChange","handleTabChange","event","newValue","flexShrink","variant","Tab","label","component","onSubmit","e","preventDefault","dataToSubmit","author","username","stringify","convertToRaw","getCurrentContent","editBlog","TextField","handleInputChange","langKey","field","target","prev","fullWidth","backgroundColor","minHeight","DraftJsWysiwyg","editorState","onEditorStateChange","handleContentChange","justifyContent","gap","mb","Button","type","color","onClick","handleRestoreOriginal","disabled","minWidth","CircularProgress","size","Snackbar","open","autoHideDuration","onClose","handleSnackbarClose","anchorOrigin","vertical","horizontal","Alert","severity"],"sourceRoot":""}
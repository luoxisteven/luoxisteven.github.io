{"version":3,"file":"static/js/13.58307ef0.chunk.js","mappings":"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","sources":["pages/blog-pages/AddBlogPage.js"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Tabs, Tab, TextField, Button, Snackbar, Alert, CircularProgress} from \"@mui/material\";\nimport CustomAppBar from \"../../components/shared-components/AppBar/AppBar\";\nimport DraftJsWysiwyg from \"../../components/blog-components/Draft-js-wysiwyg/Draft-js-wysiwyg\";\nimport BlogService from \"../../services/BlogService\";\nimport { SettingsContext } from \"../../context/SettingsContext\";\nimport { useUser } from \"../../context/UserContext\";\nimport {\n  EditorState,\n  convertToRaw,\n  convertFromRaw,\n} from \"draft-js\";\n\nconst AddBlogPage = () => {\n  const navigate = useNavigate();\n  const { themeMode, language } = useContext(SettingsContext);\n  const { userState } = useUser();\n\n  const [activeTab, setActiveTab] = useState(0);\n  const [tabsData, setTabsData] = useState({\n    CN: { title: \"\", content: EditorState.createEmpty() },\n    EN: { title: \"\", content: EditorState.createEmpty() },\n  });\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n  \n  // 添加提交状态\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // 关闭时触发\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  // -------------------\n  // 1) 组件挂载时，获取草稿\n  // -------------------\n  useEffect(() => {\n    const fetchDraft = async () => {\n      try {\n        const draft = await BlogService.getDraft(\n          userState.username, \n          userState.access\n        );\n        if (draft) {\n          const cnEditorState = draft.cn_content\n            ? EditorState.createWithContent(\n                convertFromRaw(JSON.parse(draft.cn_content))\n              )\n            : EditorState.createEmpty();\n\n          const enEditorState = draft.en_content\n            ? EditorState.createWithContent(\n                convertFromRaw(JSON.parse(draft.en_content))\n              )\n            : EditorState.createEmpty();\n\n          setTabsData({\n            CN: {\n              title: draft.cn_title || \"\",\n              content: cnEditorState,\n            },\n            EN: {\n              title: draft.en_title || \"\",\n              content: enEditorState,\n            },\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching draft:\", error);\n      }\n    };\n\n    fetchDraft();\n  }, [userState.access, userState.username]);\n\n  // -------------------\n  // 2) 键盘快捷键监听：Ctrl + S 或 Cmd + S\n  // -------------------\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === \"s\") {\n        event.preventDefault();\n        handleSaveDraft();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [tabsData]);\n\n  // -------------------\n  // 选项卡切换\n  // -------------------\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const handleInputChange = (langKey, field, value) => {\n    setTabsData((prev) => ({\n      ...prev,\n      [langKey]: { ...prev[langKey], [field]: value },\n    }));\n  };\n\n  const handleContentChange = (langKey, editorState) => {\n    setTabsData((prev) => ({\n      ...prev,\n      [langKey]: { ...prev[langKey], content: editorState },\n    }));\n  };\n\n  // -------------------\n  // 保存草稿逻辑\n  // -------------------\n  const handleSaveDraft = async () => {\n    const draftData = {\n      cn_title: tabsData.CN.title,\n      en_title: tabsData.EN.title,\n      author: userState.username,\n      cn_content: JSON.stringify(\n        convertToRaw(tabsData.CN.content.getCurrentContent())\n      ),\n      en_content: JSON.stringify(\n        convertToRaw(tabsData.EN.content.getCurrentContent())\n      ),\n      status: \"draft\",\n    };\n\n    try {\n      const response = await BlogService.saveDraft(draftData, userState.access);\n      setSnackbarOpen(true);\n      setSnackbarMessage(language === \"cn\" ? \"草稿已保存\" : \"Draft saved\");\n      setSnackbarSeverity(\"success\");\n    } catch (error) {\n      setSnackbarOpen(true);\n      setSnackbarMessage(language === \"cn\" ? \"保存失败\" : \"Failed to save draft\");\n      setSnackbarSeverity(\"error\");\n    }\n  };\n\n  // -------------------\n  // 提交发布新博客\n  // -------------------\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // 开始提交，设置loading状态\n    setIsSubmitting(true);\n    \n    const dataToSubmit = {\n      cn_title: tabsData.CN.title,\n      en_title: tabsData.EN.title,\n      author: userState.username,\n      cn_content: JSON.stringify(\n        convertToRaw(tabsData.CN.content.getCurrentContent())\n      ),\n      en_content: JSON.stringify(\n        convertToRaw(tabsData.EN.content.getCurrentContent())\n      ),\n      visible: true\n    };\n\n    try {\n      const response = await BlogService.addBlog(dataToSubmit, userState.access);\n      console.log(\"Blog added successfully:\", response);\n      \n      // 成功后重置输入\n      setTabsData({\n        CN: { title: \"\", content: EditorState.createEmpty() },\n        EN: { title: \"\", content: EditorState.createEmpty() },\n      });\n      \n      // 导航到博客列表页\n      navigate(\"/blogs?updated=true\");\n    } catch (error) {\n      console.error(\"Error adding blog:\", error);\n      \n      // 显示错误提示\n      setSnackbarOpen(true);\n      setSnackbarMessage(language === \"cn\" ? \"发布失败\" : \"Failed to publish blog\");\n      setSnackbarSeverity(\"error\");\n    } finally {\n      // 无论成功还是失败，都要结束loading状态\n      setIsSubmitting(false);\n    }\n  };\n\n  // -------------------\n  // 额外：清空输入内容\n  // -------------------\n  const handleClear = () => {\n    setTabsData({\n      CN: { title: \"\", content: EditorState.createEmpty() },\n      EN: { title: \"\", content: EditorState.createEmpty() },\n    });\n  };\n\n  // -------------------\n  // 多语言标签\n  // -------------------\n  const labels = {\n    title: language === \"cn\" ? \"标题\" : \"Title\",\n    content: language === \"cn\" ? \"内容\" : \"Content\",\n    submit: language === \"cn\" ? \"提交\" : \"Submit\",\n    save: language === \"cn\" ? \"暂存\" : \"Save\",\n    clear: language === \"cn\" ? \"清空\" : \"Clear\",\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100vh\", \n        overflow: \"hidden\",\n      }}\n    >\n      <CustomAppBar />\n      <Box\n        sx={{\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          maxWidth: 1000,\n          width: \"100%\",\n          mx: \"auto\",\n          mt: 11  ,\n          px: 2,\n          overflow: \"hidden\", \n        }}\n      >\n        <Tabs\n          value={activeTab}\n          onChange={handleTabChange}\n          sx={{ flexShrink: 0 }}\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"CN\" />\n          <Tab label=\"EN\" />\n        </Tabs>\n\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit}\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1,\n            overflow: \"hidden\",\n          }}\n        >\n          <TextField\n            label={\n              activeTab === 0 \n                ? `${labels.title} (CN)` \n                : `${labels.title} (EN)`\n            }\n            variant=\"filled\"\n            value={\n              activeTab === 0 \n                ? tabsData.CN.title \n                : tabsData.EN.title\n            }\n            onChange={(e) =>\n              handleInputChange(\n                activeTab === 0 ? \"CN\" : \"EN\",\n                \"title\",\n                e.target.value\n              )\n            }\n            fullWidth\n            sx={{ \n              flexShrink: 0,\n              '& .MuiFilledInput-root': {\n                backgroundColor: 'transparent',\n                '&:hover': {\n                  backgroundColor: 'transparent',\n                },\n                '&.Mui-focused': {\n                  backgroundColor: 'transparent',\n                },\n              }\n            }}\n          />\n\n          {/* Editor容器 - 占据剩余空间并可滚动 */}\n          <Box\n            sx={{\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              minHeight: 0, \n            }}\n          >\n            <DraftJsWysiwyg\n              editorState={\n                activeTab === 0 \n                  ? tabsData.CN.content \n                  : tabsData.EN.content\n              }\n              onEditorStateChange={(editorState) =>\n                handleContentChange(\n                  activeTab === 0 ? \"CN\" : \"EN\",\n                  editorState\n                )\n              }\n            />\n          </Box>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              gap: 2,\n              mt: 2,\n              mb: 2,\n              flexShrink: 0,\n            }}\n          >\n            <Button \n              variant=\"outlined\" \n              color=\"secondary\" \n              onClick={handleClear}\n              disabled={isSubmitting}\n              sx={{ minWidth: 85 }}\n            >\n              {labels.clear}\n            </Button>\n\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={handleSaveDraft}\n              disabled={isSubmitting}\n              sx={{ minWidth: 85 }}\n            >\n              {labels.save}\n            </Button>\n\n            <Button \n              type=\"submit\" \n              variant=\"contained\" \n              color=\"primary\"\n              disabled={isSubmitting}\n              sx={{ minWidth: 90 }}\n            >\n              {isSubmitting ? <CircularProgress size={20} /> : labels.submit}\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n\n      {/* Snackbar + Alert 提示条 */}\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={3000} \n        onClose={handleSnackbarClose}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} \n      >\n        <Alert \n          severity={snackbarSeverity} \n          sx={{ width: \"100%\" }}\n        >\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default AddBlogPage;"],"names":["AddBlogPage","navigate","useNavigate","themeMode","language","useContext","SettingsContext","userState","useUser","activeTab","setActiveTab","useState","tabsData","setTabsData","CN","title","content","EditorState","createEmpty","EN","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","isSubmitting","setIsSubmitting","useEffect","async","draft","BlogService","getDraft","username","access","cnEditorState","cn_content","createWithContent","convertFromRaw","JSON","parse","enEditorState","en_content","cn_title","en_title","error","console","fetchDraft","handleKeyDown","event","ctrlKey","metaKey","key","preventDefault","handleSaveDraft","window","addEventListener","removeEventListener","draftData","author","stringify","convertToRaw","getCurrentContent","status","saveDraft","labels","submit","save","clear","_jsxs","Box","sx","display","flexDirection","height","overflow","children","_jsx","CustomAppBar","flex","maxWidth","width","mx","mt","px","Tabs","value","onChange","handleTabChange","newValue","flexShrink","variant","Tab","label","component","onSubmit","e","dataToSubmit","visible","response","addBlog","log","TextField","handleInputChange","langKey","field","target","prev","fullWidth","backgroundColor","minHeight","DraftJsWysiwyg","editorState","onEditorStateChange","handleContentChange","justifyContent","gap","mb","Button","color","onClick","handleClear","disabled","minWidth","type","CircularProgress","size","Snackbar","open","autoHideDuration","onClose","handleSnackbarClose","anchorOrigin","vertical","horizontal","Alert","severity"],"sourceRoot":""}
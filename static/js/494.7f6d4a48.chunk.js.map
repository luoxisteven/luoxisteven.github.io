{"version":3,"file":"static/js/494.7f6d4a48.chunk.js","mappings":"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","sources":["components/shared-components/AppBar/translations.js","components/shared-components/AppBar/LanguageSwitch.js","components/shared-components/AppBar/ThemeSwitch.js","components/shared-components/AppBar/DesktopNav.js","components/shared-components/AppBar/PasswordResetModal.js","components/shared-components/AppBar/MobileDrawer.js","components/shared-components/AppBar/UserMenu.js","components/shared-components/AppBar/LoginForm.js","components/shared-components/AppBar/SignupForm.js","components/shared-components/AppBar/AuthModals.js","components/shared-components/AppBar/AppBar.js"],"sourcesContent":["export const translations = {\r\n  en: {\r\n    home: 'Home',\r\n    blogs: 'Blogs',\r\n    notes: 'Notes',\r\n    projects: 'Projects',\r\n    finance: 'Finance',\r\n    profile: 'Profile',\r\n    dashboard: 'Dashboard',\r\n    login: 'Log in',\r\n    logout: 'Log out',\r\n    signup: 'Sign up',\r\n    password_reset: 'Reset Password',\r\n    passwords_not_match: 'Passwords do not match',\r\n    password_too_short: 'Password must be at least 6 characters',\r\n  },\r\n  cn: {\r\n    home: '主页',\r\n    blogs: '博客',\r\n    notes: '笔记',\r\n    projects: '项目',\r\n    finance: '金融面板',\r\n    profile: '个人简介',\r\n    dashboard: '仪表盘',\r\n    login: '登录',\r\n    logout: '退出登录',\r\n    signup: '注册',\r\n    password_reset: '修改密码',\r\n    passwords_not_match: '密码不匹配',\r\n    password_too_short: '密码至少需要6个字符',\r\n  },\r\n};","import { useContext } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Switch, FormControlLabel, useMediaQuery } from '@mui/material';\r\nimport { SettingsContext } from '../../../context/SettingsContext';\r\n\r\nconst LanguageSwitch = styled(Switch)(({ theme }) => ({\r\n  width: 62,\r\n  height: 34,\r\n  padding: 7,\r\n  '& .MuiSwitch-switchBase': {\r\n    // margin: 1,\r\n    padding: 0,\r\n    transform: 'translateX(6px)',\r\n    '&.Mui-checked': {\r\n      color: '#fff',\r\n      transform: 'translateX(22px)',\r\n      '& .MuiSwitch-thumb:before': {\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><text x=\"3\" y=\"15\" font-size=\"14\" fill=\"${encodeURIComponent(\r\n          '#fff',\r\n        )}\">中</text></svg>')`, // 中文图标\r\n      },\r\n      '& + .MuiSwitch-track': {\r\n        opacity: 1,\r\n        backgroundColor: '#8796A5',\r\n      },\r\n    },\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    backgroundColor: '#001e3c',\r\n    width: 32,\r\n    height: 32,\r\n    '&::before': {\r\n      content: \"''\",\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      left: 0,\r\n      top: 0,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: 'center',\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><text x=\"3\" y=\"15\" font-size=\"14\" fill=\"${encodeURIComponent(\r\n        '#fff',\r\n      )}\">En</text></svg>')`, // 英文图标\r\n    },\r\n  },\r\n  '& .MuiSwitch-track': {\r\n    opacity: 1,\r\n    backgroundColor: '#aab4be',\r\n    borderRadius: 20 / 2,\r\n  },\r\n}));\r\n\r\nexport default function LanguageSwitchComponent() {\r\n  const { language, toggleLanguage } = useContext(SettingsContext);\r\n  const isMobile = useMediaQuery((theme) => theme.breakpoints.down('md')); \r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <LanguageSwitch\r\n          checked={language === 'cn'}\r\n          onChange={toggleLanguage}\r\n        />\r\n      }\r\n      label={isMobile ? (language === 'en' ? 'English' : '中文') : ''} \r\n    />\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Switch, FormControlLabel, useMediaQuery } from '@mui/material';\r\nimport { SettingsContext } from '../../../context/SettingsContext';\r\n\r\nconst MaterialUISwitch = styled(Switch)(({ theme }) => ({\r\n  width: 62,\r\n  height: 34,\r\n  padding: 7,\r\n  '& .MuiSwitch-switchBase': {\r\n    // margin: 1,\r\n    padding: 0,\r\n    transform: 'translateX(6px)',\r\n    '&.Mui-checked': {\r\n      color: '#fff',\r\n      transform: 'translateX(22px)',\r\n      '& .MuiSwitch-thumb:before': {\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          '#fff',\r\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n      },\r\n      '& + .MuiSwitch-track': {\r\n        opacity: 1,\r\n        backgroundColor: '#8796A5',\r\n      },\r\n    },\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    backgroundColor: '#001e3c',\r\n    width: 32,\r\n    height: 32,\r\n    '&::before': {\r\n      content: \"''\",\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      left: 0,\r\n      top: 0,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundPosition: 'center',\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n        '#fff',\r\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n    },\r\n  },\r\n  '& .MuiSwitch-track': {\r\n    opacity: 1,\r\n    backgroundColor: '#aab4be',\r\n    borderRadius: 20 / 2,\r\n  },\r\n}));\r\n\r\nexport default function ThemeSwitch() {\r\n  const { language, themeMode, toggleTheme } = useContext(SettingsContext);\r\n  const isMobile = useMediaQuery((theme) => theme.breakpoints.down('md')); \r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <MaterialUISwitch\r\n          checked={themeMode === 'dark'}\r\n          onChange={toggleTheme}\r\n        />\r\n      }\r\n      label={\r\n        isMobile\r\n          ? language === 'cn'\r\n            ? themeMode === 'light'\r\n              ? '浅色模式'\r\n              : '深色模式'\r\n            : themeMode === 'light'\r\n            ? 'Light Mode'\r\n            : 'Dark Mode'\r\n          : ''\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { Button, Box, Avatar } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { translations } from './translations';\r\nimport LanguageSwitchComponent from './LanguageSwitch';\r\nimport ThemeSwitch from './ThemeSwitch';\r\nimport stevenCartoon from \"../../../assets/img/steven_cartoon.jpeg\";\r\n\r\nconst DesktopNav = ({ language, toggleLanguage, toggleTheme }) => {\r\n  return (\r\n    <>\r\n      <Box sx={{ flexGrow: 1, display: 'flex', alignItems: 'center', px: 0 }}>\r\n        <Avatar\r\n          src={stevenCartoon}\r\n          alt=\"Steven Logo\"\r\n          sx={{\r\n            width: 30,\r\n            height: 30,\r\n            mr: 1,\r\n            overflow: 'hidden',\r\n          }}\r\n        />\r\n        <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n          <Button component={Link} to=\"/\" variant=\"text\" color=\"info\" size=\"small\" sx={{ minWidth: 0 }}>\r\n            {translations[language].home || \"Home\"}\r\n          </Button>\r\n          <Button component={Link} to=\"/notes\" variant=\"text\" color=\"info\" size=\"small\" sx={{ minWidth: 0 }}>\r\n            {translations[language].notes || \"Notes\"}\r\n          </Button>\r\n          <Button component={Link} to=\"/blogs\" variant=\"text\" color=\"info\" size=\"small\" sx={{ minWidth: 0 }}>\r\n            {translations[language].blogs || \"Blogs\"}\r\n          </Button>\r\n          <Button component={Link} to=\"/projects\" variant=\"text\" color=\"info\" size=\"small\" sx={{ minWidth: 0 }}>\r\n            {translations[language].projects || \"Projects\"}\r\n          </Button>\r\n          <Button component={Link} to=\"/fin\" variant=\"text\" color=\"info\" size=\"small\" sx={{ minWidth: 0 }}>\r\n            {translations[language].finance || \"Finance\"}\r\n          </Button>\r\n          <Button component={Link} to=\"/profile\" variant=\"text\" color=\"info\" size=\"small\" sx={{ minWidth: 0 }}>\r\n            {translations[language].profile || \"Profile\"}\r\n          </Button>\r\n          {/* <Button component={Link} to=\"/dashboard\" variant=\"text\" color=\"info\" size=\"small\" sx={{ minWidth: 0 }}>\r\n            {translations[language].dashboard || \"Dashboard\"}\r\n          </Button> */}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box sx={{ \r\n        display: { xs: 'none', md: 'flex'}, \r\n        gap: 0, \r\n        alignItems: 'center',\r\n      }}>\r\n        <LanguageSwitchComponent onClick={toggleLanguage} />\r\n        <ThemeSwitch onClick={toggleTheme} />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DesktopNav;","import { useState } from 'react';\r\nimport { \r\n  Dialog, \r\n  DialogTitle, \r\n  DialogContent, \r\n  DialogActions, \r\n  TextField, \r\n  Button, \r\n  Box, \r\n  CircularProgress, \r\n  Alert\r\n} from '@mui/material';\r\nimport UserService from '../../../services/UserService';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport { translations } from './translations';\r\n\r\nconst PasswordResetModal = ({ open, onClose, language }) => {\r\n  const { userState, setUser } = useUser();\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  \r\n  const isSuperuser = userState.is_superuser;\r\n  \r\n  const resetForm = () => {\r\n    setCurrentPassword('');\r\n    setNewPassword('');\r\n    setConfirmPassword('');\r\n    setError('');\r\n    setSuccess(false);\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    resetForm();\r\n    onClose();\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess(false);\r\n    \r\n    // Validation\r\n    if (newPassword !== confirmPassword) {\r\n      setError(translations[language].passwords_not_match || 'New passwords do not match');\r\n      return;\r\n    }\r\n    \r\n    if (newPassword.length < 6) {\r\n      setError(translations[language].password_too_short || 'Password must be at least 6 characters');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      // If superuser, currentPassword is optional\r\n      const result = await UserService.reset_password(\r\n        userState.user_id, \r\n        newPassword,\r\n        !isSuperuser ? currentPassword : null, // Only send currentPassword if not superuser\r\n        userState.access\r\n      );\r\n      \r\n      if (result.success) {\r\n        setSuccess(true);\r\n        // Reset form fields after successful password change\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n\r\n        // Logout and Reset user state\r\n        const userData = await UserService.getNonuserJWT();\r\n        setUser(userData);\r\n        \r\n        // Auto close after 1 seconds on success\r\n        setTimeout(() => {\r\n          handleClose();\r\n        }, 1000);\r\n      } else {\r\n        setError(result.message || translations[language].password_reset_failed || 'Failed to reset password');\r\n      }\r\n    } catch (err) {\r\n      setError(translations[language].password_reset_error || 'An error occurred during password reset');\r\n      console.error('Password reset error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Dialog open={open} onClose={loading ? undefined : handleClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>\r\n        {translations[language].password_reset || 'Reset Password'}\r\n      </DialogTitle>\r\n      <form onSubmit={handleSubmit}>\r\n        <DialogContent>\r\n          {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n          {success && <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n            {translations[language].password_reset_success || 'Password reset successfully!'}\r\n          </Alert>}\r\n          \r\n          {/* Current password field (only required for non-superusers) */}\r\n          {!isSuperuser && (\r\n            <TextField\r\n              margin=\"dense\"\r\n              label={translations[language].current_password || 'Current Password'}\r\n              type=\"password\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={currentPassword}\r\n              onChange={(e) => setCurrentPassword(e.target.value)}\r\n              required\r\n              disabled={loading || success}\r\n              sx={{ mb: 2 }}\r\n            />\r\n          )}\r\n          \r\n          {/* New password fields */}\r\n          <TextField\r\n            margin=\"dense\"\r\n            label={translations[language].new_password || 'New Password'}\r\n            type=\"password\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n            disabled={loading || success}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          \r\n          <TextField\r\n            margin=\"dense\"\r\n            label={translations[language].confirm_new_password || 'Confirm New Password'}\r\n            type=\"password\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n            disabled={loading || success}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} disabled={loading}>\r\n            {translations[language].cancel || 'Cancel'}\r\n          </Button>\r\n          <Box sx={{ position: 'relative' }}>\r\n            <Button \r\n              type=\"submit\" \r\n              color=\"primary\" \r\n              variant=\"contained\" \r\n              disabled={loading || success}\r\n            >\r\n              {translations[language].reset || 'Reset'}\r\n            </Button>\r\n            {loading && (\r\n              <CircularProgress\r\n                size={24}\r\n                sx={{\r\n                  position: 'absolute',\r\n                  top: '50%',\r\n                  left: '50%',\r\n                  marginTop: '-12px',\r\n                  marginLeft: '-12px',\r\n                }}\r\n              />\r\n            )}\r\n          </Box>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PasswordResetModal;","import { useState } from 'react';\r\nimport { \r\n  Box, \r\n  IconButton, \r\n  Drawer, \r\n  MenuItem, \r\n  Divider, \r\n  Button \r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\r\nimport LanguageSwitchComponent from './LanguageSwitch';\r\nimport ThemeSwitch from './ThemeSwitch';\r\nimport { translations } from './translations';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport UserService from '../../../services/UserService';\r\nimport PasswordResetModal from './PasswordResetModal'; // Import the PasswordResetModal component\r\n\r\nconst MobileDrawer = ({ \r\n  language, \r\n  toggleLanguage, \r\n  toggleTheme, \r\n  handleLoginOpen, \r\n  handleSignupOpen \r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [passwordResetOpen, setPasswordResetOpen] = useState(false); // State for password reset modal\r\n  const { userState, setUser } = useUser();\r\n\r\n  const toggleDrawer = (newOpen) => () => {\r\n    setOpen(newOpen);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    const userData = await UserService.getNonuserJWT();\r\n    setUser(userData);\r\n    setOpen(false);\r\n  };\r\n\r\n  // Handle opening the password reset modal\r\n  const handlePasswordResetOpen = () => {\r\n    setPasswordResetOpen(true);\r\n    setOpen(false); // Optionally close the drawer when opening the modal\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: { xs: 'flex', md: 'none' }, gap: 1 }}>\r\n      <IconButton aria-label=\"Menu button\" onClick={toggleDrawer(true)}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Drawer\r\n        anchor=\"top\"\r\n        open={open}\r\n        onClose={toggleDrawer(false)}\r\n        PaperProps={{\r\n          sx: { top: 'var(--template-frame-height, 0px)' },\r\n        }}\r\n      >\r\n        <Box sx={{ p: 2, backgroundColor: 'background.default' }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <IconButton onClick={toggleDrawer(false)}>\r\n              <CloseRoundedIcon />\r\n            </IconButton>\r\n          </Box>\r\n          \r\n          <MenuItem component={Link} to=\"/\">{translations[language].home}</MenuItem>\r\n          <MenuItem component={Link} to=\"/notes\">{translations[language].notes}</MenuItem>\r\n          <MenuItem component={Link} to=\"/blogs\">{translations[language].blogs}</MenuItem>\r\n          <MenuItem component={Link} to=\"/projects\">{translations[language].projects}</MenuItem>\r\n          <MenuItem component={Link} to=\"/fin\">{translations[language].finance}</MenuItem>\r\n          <MenuItem component={Link} to=\"/profile\">{translations[language].profile}</MenuItem>\r\n          {/* <MenuItem component={Link} to=\"/dashboard\">{translations[language].dashboard}</MenuItem> */}\r\n          \r\n          <Divider sx={{ my: 3 }} />\r\n          \r\n          <MenuItem>\r\n            <LanguageSwitchComponent onClick={toggleLanguage} />\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <ThemeSwitch onClick={toggleTheme} />\r\n          </MenuItem>\r\n          \r\n          <Divider sx={{ my: 3 }} />\r\n\r\n          {userState.user_id === 0 ? (\r\n            <>\r\n              <MenuItem>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onClick={handleLoginOpen}\r\n                >\r\n                  {translations[language].login}\r\n                </Button>\r\n              </MenuItem>\r\n              <MenuItem>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  onClick={handleSignupOpen}\r\n                >\r\n                  {translations[language].signup}\r\n                </Button>\r\n              </MenuItem>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <MenuItem>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  onClick={handlePasswordResetOpen} // Updated to use the new handler\r\n                >\r\n                  {translations[language].password_reset}\r\n                </Button>\r\n              </MenuItem>\r\n              <MenuItem>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  fullWidth\r\n                  onClick={handleLogout}\r\n                >\r\n                  {translations[language].logout}\r\n                </Button>\r\n              </MenuItem>\r\n              <Divider sx={{ my: 1 }} />\r\n              <MenuItem>\r\n                <Button\r\n                  color=\"info\"\r\n                  fullWidth\r\n                  variant=\"text\"\r\n                  disabled\r\n                  sx={{ textTransform: 'none' }}\r\n                >\r\n                  {userState.username}\r\n                </Button>\r\n              </MenuItem>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Drawer>\r\n\r\n      {/* Password Reset Modal */}\r\n      <PasswordResetModal\r\n        open={passwordResetOpen}\r\n        onClose={() => setPasswordResetOpen(false)}\r\n        language={language}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MobileDrawer;","import { useState } from 'react';\r\nimport { Button, Menu, MenuItem } from '@mui/material';\r\nimport { translations } from './translations';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport UserService from '../../../services/UserService';\r\nimport PasswordResetModal from './PasswordResetModal'; // Import the new component\r\n\r\nconst UserMenu = ({ language }) => {\r\n  const { userState, setUser } = useUser();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [passwordResetOpen, setPasswordResetOpen] = useState(false); // State to control modal visibility\r\n    \r\n  const handleLogout = async () => {\r\n    const userData = await UserService.getNonuserJWT();\r\n    setUser(userData);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handlePasswordResetClick = () => {\r\n    setAnchorEl(null); // Close the menu\r\n    setPasswordResetOpen(true); // Open the password reset modal\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"info\"\r\n        size=\"small\"\r\n        onClick={(e) => setAnchorEl(e.currentTarget)}\r\n        sx={{ textTransform: 'none' }}\r\n      >\r\n        {userState.username}\r\n      </Button>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={() => setAnchorEl(null)}\r\n        sx={{ ml: 0 }}\r\n      >\r\n        <MenuItem onClick={handlePasswordResetClick} sx={{ fontSize: '0.85rem' }}>\r\n          {translations[language].password_reset || \"Reset Password\"}\r\n        </MenuItem>\r\n        <MenuItem onClick={handleLogout} sx={{ fontSize: '0.85rem' }}>\r\n          {translations[language].logout || 'Log out'}\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      {/* Password Reset Modal */}\r\n      <PasswordResetModal\r\n        open={passwordResetOpen}\r\n        onClose={() => setPasswordResetOpen(false)}\r\n        language={language}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserMenu;","import { useState, useContext, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport MuiCard from '@mui/material/Card';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { styled } from '@mui/material/styles';\r\nimport { SettingsContext } from '../../../context/SettingsContext';\r\nimport UserService from '../../../services/UserService';\r\nimport { useUser } from '../../../context/UserContext'; \r\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst Card = styled(MuiCard)(({ theme, themeMode }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignSelf: 'center',\r\n  padding: '32px',\r\n  margin: 'auto',\r\n  borderRadius: '8px',\r\n  gap: '16px',\r\n  boxShadow: themeMode === 'dark'\r\n    ? '0px 4px 20px rgba(0, 0, 0, 0.5)'\r\n    : '0px 4px 20px rgba(0, 0, 0, 0.2)',\r\n  [theme.breakpoints.down('sm')]: {\r\n    padding: '24px',\r\n    gap: '8px',\r\n  },\r\n}));\r\n\r\nexport default function LoginForm({ onClose, onSignupClick }) {\r\n  const { language, themeMode } = useContext(SettingsContext);\r\n  const { userState, setUser } = useUser();\r\n\r\n  const text = {\r\n    en: {\r\n      login: 'Log in',\r\n      username: 'Username',\r\n      usernamePlaceholder: 'username',\r\n      password: 'Password',\r\n      passwordPlaceholder: '••••••',\r\n      rememberMe: 'Remember me',\r\n      loginButton: 'Log In',\r\n      cancelButton: 'Cancel',\r\n      dividerText: 'or',\r\n      noAccount: \"Don't have an account?\",\r\n      signUp: 'Sign up',\r\n      usernameError: 'Username is required',\r\n      passwordError: 'Password is required',\r\n      unexpectedError: 'An unexpected error occurred',\r\n    },\r\n    cn: {\r\n      login: '登录',\r\n      username: '用户名',\r\n      usernamePlaceholder: '用户名',\r\n      password: '密码',\r\n      passwordPlaceholder: '••••••',\r\n      rememberMe: '记住我的密码',\r\n      loginButton: '登录',\r\n      cancelButton: '取消',\r\n      dividerText: '或',\r\n      noAccount: '还没有账号？',\r\n      signUp: '注册',\r\n      usernameError: '用户名是必填项',\r\n      passwordError: '密码是必填项',\r\n      unexpectedError: '意外错误',\r\n    },\r\n  };\r\n\r\n  const t = text[language] || text.en;\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [usernameError, setUsernameError] = useState(false);\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState('');\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // 当组件加载时，检查是否有保存的凭据\r\n  useEffect(() => {\r\n    const savedUsername = localStorage.getItem('rememberedUsername');\r\n    const savedPassword = localStorage.getItem('rememberedPassword');\r\n    \r\n    if (savedUsername && savedPassword) {\r\n      setUsername(savedUsername);\r\n      setPassword(savedPassword);\r\n      setRememberMe(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setUsernameError(false);\r\n    setPasswordError(false);\r\n    setUsernameErrorMessage('');\r\n    setPasswordErrorMessage('');\r\n    setLoading(true);\r\n  \r\n    if (!username) {\r\n      setUsernameError(true);\r\n      setUsernameErrorMessage(t.usernameError);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n  \r\n    if (!password) {\r\n      setPasswordError(true);\r\n      setPasswordErrorMessage(t.passwordError);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await UserService.login(username, password, userState.access);\r\n      if (response.status === 200) {\r\n        // 处理\"记住我\"功能\r\n        if (rememberMe) {\r\n          localStorage.setItem('rememberedUsername', username);\r\n        } else {\r\n          localStorage.removeItem('rememberedUsername');\r\n        }\r\n        \r\n        setUser(response);\r\n        if (onClose) onClose();\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      setPasswordError(true);\r\n      setPasswordErrorMessage(\r\n        error.response?.data?.detail || t.unexpectedError\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 2,\r\n      }}\r\n    >\r\n      <Card\r\n        component=\"form\"\r\n        onSubmit={handleSubmit}\r\n        sx={{\r\n          width: {\r\n            xs: '90%',\r\n            md: '100%',\r\n          },\r\n          maxWidth: '450px',\r\n        }}\r\n        themeMode={themeMode}\r\n      >\r\n        <IconButton\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: {\r\n              xs: 35,\r\n              md: 20,\r\n            },\r\n            top: {\r\n              xs: 15,\r\n              md: 20,\r\n            },\r\n          }}\r\n        >\r\n          <CloseRoundedIcon />\r\n        </IconButton>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h4\"\r\n          align=\"center\"\r\n          sx={{\r\n            fontWeight: 'bold',\r\n            fontSize: {\r\n              xs: '1.5rem',\r\n              md: '1.8rem',\r\n            },\r\n            color: 'primary.main',\r\n            letterSpacing: 0.8,\r\n          }}\r\n        >\r\n          {t.login}\r\n        </Typography>\r\n        <FormControl>\r\n          <FormLabel htmlFor=\"username\">{t.username}</FormLabel>\r\n          <TextField\r\n            error={usernameError}\r\n            helperText={usernameErrorMessage}\r\n            id=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder={t.usernamePlaceholder}\r\n            autoComplete=\"username\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            required\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormLabel htmlFor=\"password\">{t.password}</FormLabel>\r\n          <TextField\r\n            error={passwordError}\r\n            helperText={passwordErrorMessage}\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder={t.passwordPlaceholder}\r\n            autoComplete=\"current-password\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox \r\n              value=\"remember\" \r\n              color=\"primary\" \r\n              checked={rememberMe}\r\n              onChange={(e) => setRememberMe(e.target.checked)}\r\n            />\r\n          }\r\n          label={\r\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n              {t.rememberMe}\r\n              {loading && (\r\n                <CircularProgress\r\n                  size={20}\r\n                  sx={{\r\n                    marginLeft: 2,\r\n                  }}\r\n                />\r\n              )}\r\n            </Box>\r\n          }\r\n        />\r\n\r\n        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n          {t.loginButton}\r\n        </Button>\r\n        <Divider>{t.dividerText}</Divider>\r\n        <Typography align=\"center\" variant=\"body2\">\r\n          {t.noAccount}{' '}\r\n          <a\r\n            href=\"#\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              if (onSignupClick) onSignupClick();\r\n            }}\r\n          >\r\n            {t.signUp}\r\n          </a>\r\n        </Typography>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}","import { useState, useContext } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Divider from '@mui/material/Divider';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport MuiCard from '@mui/material/Card';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport { styled } from '@mui/material/styles';\r\nimport { SettingsContext } from '../../../context/SettingsContext';\r\nimport UserService from '../../../services/UserService';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport { useMediaQuery, useTheme } from '@mui/material';\r\nimport Link from '@mui/material/Link';\r\n\r\nconst Card = styled(MuiCard)(({ theme, themeMode }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignSelf: 'center',\r\n  width: '100%',\r\n  padding: '30px',\r\n  gap: '8px',\r\n  margin: 'auto',\r\n  maxWidth: '450px',\r\n  borderRadius: '8px',\r\n  boxShadow:\r\n    'hsla(220, 30%, 5%, 0.05) 0px 5px 15px 0px, hsla(220, 25%, 10%, 0.05) 0px 15px 35px -5px',\r\n  [theme.breakpoints.down('sm')]: {\r\n    padding: '24px',\r\n    gap: '8px',\r\n  },\r\n}));\r\n\r\nexport default function SignupForm({ onClose, onLoginClick }) {\r\n  const { userState, setUser } = useUser();\r\n  const theme = useTheme();\r\n  const isMediumScreen = useMediaQuery(theme.breakpoints.up('md'));\r\n  const { language, themeMode } = useContext(SettingsContext);\r\n\r\n  // Define language texts\r\n  const text = {\r\n    en: {\r\n      signup: 'Sign up',\r\n      username: 'Username',\r\n      usernamePlaceholder: 'Enter your username',\r\n      password: 'Password',\r\n      confirmPassword: 'Confirm Password',\r\n      inviteCode: 'Invite Code (If needed, email Steven)',\r\n      terms: 'I agree to the',\r\n      termsLink: 'terms and conditions',\r\n      signupButton: 'Sign Up',\r\n      cancelButton: 'Cancel',\r\n      dividerText: 'or',\r\n      haveAccount: 'Already have an account?',\r\n      login: 'Log in',\r\n      usernameError: 'Username must be at least 3 characters long.',\r\n      passwordError: 'Password must be at least 6 characters long.',\r\n      confirmPasswordError: 'Passwords do not match.',\r\n      inviteCodeError: 'Invite code is required.',\r\n      termsError: 'You must agree to the terms and conditions.',\r\n      apiError: 'An unexpected error occurred.',\r\n      success: 'successfully completed!',\r\n      error: 'error',\r\n    },\r\n    cn: {\r\n      signup: '注册',\r\n      username: '用户名',\r\n      usernamePlaceholder: '请输入用户名',\r\n      password: '密码',\r\n      confirmPassword: '确认密码',\r\n      inviteCode: '邀请码（找要）',\r\n      terms: '我同意',\r\n      termsLink: '本网站的条款和协议',\r\n      signupButton: '注册',\r\n      cancelButton: '取消',\r\n      dividerText: '或',\r\n      haveAccount: '已经有账号？',\r\n      login: '登录',\r\n      usernameError: '用户名至少需要3个字符。',\r\n      passwordError: '密码至少需要6个字符。',\r\n      confirmPasswordError: '两次输入的密码不一致。',\r\n      inviteCodeError: '邀请码是必填项。',\r\n      termsError: '您必须同意条款和协议。',\r\n      apiError: '发生了意外错误。',\r\n      success: '成功完成！',\r\n      error: '错误',\r\n    },\r\n  };\r\n\r\n  const t = text[language] || text.en;\r\n\r\n  const [usernameError, setUsernameError] = useState(false);\r\n  const [usernameErrorMessage, setUsernameErrorMessage] = useState('');\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\r\n  const [confirmPasswordErrorMessage, setConfirmPasswordErrorMessage] = useState('');\r\n  const [inviteCodeError, setInviteCodeError] = useState(false);\r\n  const [inviteCodeErrorMessage, setInviteCodeErrorMessage] = useState('');\r\n  const [termsAccepted, setTermsAccepted] = useState(false);\r\n  const [termsError, setTermsError] = useState(false);\r\n  const [apiError, setApiError] = useState('');\r\n\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\r\n\r\n  // Base URL for the terms page - replace with the appropriate URL or environment variable\r\n  const baseUrl = process.env.REACT_APP_BASE_URL || ''; \r\n  const termsUrl = `${baseUrl}/md/${language === 'cn' ? 'cn' : 'en'}/terms`;\r\n\r\n  const validateInputs = () => {\r\n    const username = document.getElementById('username');\r\n    const password = document.getElementById('password');\r\n    const confirmPassword = document.getElementById('confirmPassword');\r\n    const inviteCode = document.getElementById('inviteCode');\r\n\r\n    let isValid = true;\r\n\r\n    if (!username.value || username.value.length < 3) {\r\n      setUsernameError(true);\r\n      setUsernameErrorMessage(t.usernameError);\r\n      isValid = false;\r\n    } else {\r\n      setUsernameError(false);\r\n      setUsernameErrorMessage('');\r\n    }\r\n\r\n    if (!password.value || password.value.length < 6) {\r\n      setPasswordError(true);\r\n      setPasswordErrorMessage(t.passwordError);\r\n      isValid = false;\r\n    } else {\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage('');\r\n    }\r\n\r\n    if (confirmPassword.value !== password.value) {\r\n      setConfirmPasswordError(true);\r\n      setConfirmPasswordErrorMessage(t.confirmPasswordError);\r\n      isValid = false;\r\n    } else {\r\n      setConfirmPasswordError(false);\r\n      setConfirmPasswordErrorMessage('');\r\n    }\r\n\r\n    if (!inviteCode.value) {\r\n      setInviteCodeError(true);\r\n      setInviteCodeErrorMessage(t.inviteCodeError);\r\n      isValid = false;\r\n    } else {\r\n      setInviteCodeError(false);\r\n      setInviteCodeErrorMessage('');\r\n    }\r\n\r\n    if (!termsAccepted) {\r\n      setTermsError(true);\r\n      isValid = false;\r\n    } else {\r\n      setTermsError(false);\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!validateInputs()) return;\r\n  \r\n    const data = new FormData(event.currentTarget);\r\n    const username = data.get('username');\r\n    const password = data.get('password');\r\n    const inviteCode = data.get('inviteCode');\r\n    \r\n    setApiError('');\r\n  \r\n    try {\r\n      const response = await UserService.register(username, password, inviteCode, userState.access);\r\n      \r\n      if (response.status === 201) {\r\n        // Show success message\r\n        setSnackbarMessage(t.signupButton + ' ' + t.success);\r\n        setSnackbarSeverity('success');\r\n        setSnackbarOpen(true);\r\n      \r\n        // Auto login after successful registration\r\n        try {\r\n          const loginResponse = await UserService.login(username, password, userState.access);\r\n          if (loginResponse.status === 200) {\r\n            setUser(loginResponse.data);\r\n            if (onClose) onClose();\r\n          }\r\n        } catch (loginError) {\r\n          console.error('Auto login error:', loginError);\r\n          // If auto-login fails, still redirect to login page\r\n          if (onLoginClick) {\r\n            setTimeout(() => {\r\n              onLoginClick();\r\n            }, 1500);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      \r\n      if (error.response && error.response.data) {\r\n        const errors = error.response.data;\r\n        \r\n        // Show specific field errors\r\n        if (errors.username) {\r\n          setUsernameError(true);\r\n          setUsernameErrorMessage(Array.isArray(errors.username) ? errors.username[0] : errors.username);\r\n        }\r\n        \r\n        if (errors.password) {\r\n          setPasswordError(true);\r\n          setPasswordErrorMessage(Array.isArray(errors.password) ? errors.password[0] : errors.password);\r\n        }\r\n        \r\n        if (errors.invite_code) {\r\n          setInviteCodeError(true);\r\n          setInviteCodeErrorMessage(Array.isArray(errors.invite_code) ? errors.invite_code[0] : errors.invite_code);\r\n        }\r\n        \r\n        // Handle non-field errors\r\n        if (errors.non_field_errors || errors.detail) {\r\n          const nonFieldError = errors.non_field_errors || errors.detail;\r\n          setApiError(Array.isArray(nonFieldError) ? nonFieldError[0] : nonFieldError);\r\n          \r\n          // Show error in snackbar\r\n          setSnackbarMessage(Array.isArray(nonFieldError) ? nonFieldError[0] : nonFieldError);\r\n          setSnackbarSeverity('error');\r\n          setSnackbarOpen(true);\r\n        }\r\n      } else {\r\n        // Generic error handling\r\n        setApiError(t.apiError);\r\n        setSnackbarMessage(t.apiError);\r\n        setSnackbarSeverity('error');\r\n        setSnackbarOpen(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTermsLinkClick = (e) => {\r\n    // Prevent the checkbox from toggling when clicking on the link\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <Card component=\"form\" onSubmit={handleSubmit}>\r\n      <IconButton\r\n        onClick={onClose}\r\n        sx={{\r\n          position: 'absolute',\r\n          right: {\r\n            xs: 6,\r\n            md: 6,\r\n          },\r\n          top: {\r\n            xs: 6,\r\n            md: 6,\r\n          },\r\n        }}\r\n      >\r\n        <CloseRoundedIcon />\r\n      </IconButton>\r\n      <Typography\r\n        component=\"h1\"\r\n        variant=\"h4\"\r\n        align=\"center\"\r\n        sx={{\r\n          fontWeight: 'bold',\r\n          fontSize: { md: '1.8rem', xs: '1.8rem' },\r\n          color: 'primary.main',\r\n          letterSpacing: 0.8,\r\n        }}\r\n      >\r\n        {t.signup}\r\n      </Typography>\r\n\r\n      {apiError && (\r\n        <Typography color=\"error\" align=\"center\">\r\n          {apiError}\r\n        </Typography>\r\n      )}\r\n\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n        <FormControl>\r\n          <FormLabel htmlFor=\"username\">{t.username}</FormLabel>\r\n          <TextField\r\n            error={usernameError}\r\n            helperText={usernameErrorMessage}\r\n            autoComplete=\"username\"\r\n            name=\"username\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            placeholder={t.usernamePlaceholder}\r\n            variant=\"outlined\"\r\n            size={isMediumScreen ? 'medium' : 'small'}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormLabel htmlFor=\"password\">{t.password}</FormLabel>\r\n          <TextField\r\n            error={passwordError}\r\n            helperText={passwordErrorMessage}\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"new-password\"\r\n            variant=\"outlined\"\r\n            size={isMediumScreen ? 'medium' : 'small'}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormLabel htmlFor=\"confirmPassword\">{t.confirmPassword}</FormLabel>\r\n          <TextField\r\n            error={confirmPasswordError}\r\n            helperText={confirmPasswordErrorMessage}\r\n            required\r\n            fullWidth\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            autoComplete=\"new-password\"\r\n            variant=\"outlined\"\r\n            size={isMediumScreen ? 'medium' : 'small'}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormLabel htmlFor=\"inviteCode\">{t.inviteCode}</FormLabel>\r\n          <TextField\r\n            error={inviteCodeError}\r\n            helperText={inviteCodeErrorMessage}\r\n            required\r\n            fullWidth\r\n            name=\"inviteCode\"\r\n            id=\"inviteCode\"\r\n            variant=\"outlined\"\r\n            size={isMediumScreen ? 'medium' : 'small'}\r\n          />\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                required\r\n                color=\"primary\"\r\n                checked={termsAccepted}\r\n                onChange={(e) => setTermsAccepted(e.target.checked)}\r\n              />\r\n            }\r\n            label={\r\n              <Box component=\"span\" sx={{ display: 'inline-flex', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                {t.terms}{' '}\r\n                <Link \r\n                  href={termsUrl}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  onClick={handleTermsLinkClick}\r\n                  sx={{ ml: 0.5, mr: 0.5 }}\r\n                >\r\n                  {t.termsLink}\r\n                </Link>\r\n                .\r\n              </Box>\r\n            }\r\n          />\r\n          {termsError && (\r\n            <Typography color=\"error\" variant=\"body2\" sx={{ mt: 0.5 }}>\r\n              {t.termsError}\r\n            </Typography>\r\n          )}\r\n        </FormControl>\r\n\r\n        <Button type=\"submit\" fullWidth variant=\"contained\">\r\n          {t.signupButton}\r\n        </Button>\r\n      </Box>\r\n      <Divider>\r\n        <Typography sx={{ color: 'text.secondary' }}>{t.dividerText}</Typography>\r\n      </Divider>\r\n      <Box>\r\n        <Typography align=\"center\" variant=\"body2\">\r\n          {t.haveAccount}{' '}\r\n          <a\r\n            href=\"#\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              if (onLoginClick) onLoginClick();\r\n            }}\r\n          >\r\n            {t.login}\r\n          </a>\r\n        </Typography>\r\n      </Box>\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={2000}\r\n        onClose={() => setSnackbarOpen(false)}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      >\r\n        <MuiAlert onClose={() => setSnackbarOpen(false)} severity={snackbarSeverity} sx={{ width: '100%' }}>\r\n          {snackbarMessage}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </Card>\r\n  );\r\n}","import { Modal, Box, Backdrop } from '@mui/material';\r\nimport LoginForm from './LoginForm';\r\nimport SignupForm from './SignupForm';\r\n\r\nexport const LoginModal = ({ open, handleClose, handleSignupOpen }) => {\r\n  const handleSignupClick = () => {\r\n    handleClose();\r\n    handleSignupOpen();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n        style: { backgroundColor: 'rgba(0, 0, 0, 0.5)', backdropFilter: 'blur(5px)' },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          width: '100%',\r\n          maxWidth: 450,\r\n        }}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <LoginForm\r\n          onClose={handleClose}\r\n          onSignupClick={handleSignupClick}\r\n        />\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const SignupModal = ({ open, handleClose, handleLoginOpen }) => {\r\n  const handleLoginClick = () => {\r\n    handleClose();\r\n    handleLoginOpen();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n        style: { backgroundColor: 'rgba(0, 0, 0, 0.5)', backdropFilter: 'blur(5px)' },\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          width: { md: '100%', xs: \"80%\" },\r\n          maxWidth: 450,\r\n        }}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <SignupForm\r\n          onClose={handleClose}\r\n          onLoginClick={handleLoginClick}\r\n        />\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};","import { useContext, useState } from 'react';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { AppBar, Box, Toolbar, Button, Container } from '@mui/material';\r\nimport { SettingsContext } from '../../../context/SettingsContext';\r\nimport { useUser } from '../../../context/UserContext';\r\nimport { translations } from './translations';\r\nimport DesktopNav from './DesktopNav';\r\nimport MobileDrawer from './MobileDrawer';\r\nimport UserMenu from './UserMenu';\r\nimport { LoginModal, SignupModal } from './AuthModals';\r\n\r\nconst StyledToolbar = styled(Toolbar)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  flexShrink: 0,\r\n  borderRadius: `calc(${theme.shape.borderRadius}px + 8px)`,\r\n  backdropFilter: 'blur(24px)',\r\n  border: '1px solid',\r\n  borderColor: (theme.vars || theme).palette.divider,\r\n  backgroundColor: theme.vars\r\n    ? `rgba(${theme.vars.palette.background.defaultChannel} / 0.4)`\r\n    : alpha(theme.palette.background.default, 0.4),\r\n  boxShadow: (theme.vars || theme).shadows[1],\r\n  padding: '8px 12px',\r\n}));\r\n\r\nexport default function CustomAppBar() {\r\n  const { language, toggleLanguage, themeMode, toggleTheme } = useContext(SettingsContext);\r\n  const { userState } = useUser();\r\n\r\n  // 登录/注册模态框状态\r\n  const [loginOpen, setLoginOpen] = useState(false);\r\n  const [signupOpen, setSignupOpen] = useState(false);\r\n\r\n  const handleLoginOpen = () => setLoginOpen(true);\r\n  const handleLoginClose = () => setLoginOpen(false);\r\n  const handleSignupOpen = () => setSignupOpen(true);\r\n  const handleSignupClose = () => setSignupOpen(false);\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"absolute\"\r\n      enableColorOnDark\r\n      sx={{\r\n        boxShadow: 0,\r\n        bgcolor: 'transparent',\r\n        backgroundImage: 'none',\r\n        mt: 'calc(var(--template-frame-height, 0px) + 28px)',\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <StyledToolbar variant=\"dense\" disableGutters>\r\n          {/* 桌面导航组件 */}\r\n          <DesktopNav \r\n            language={language} \r\n            toggleLanguage={toggleLanguage} \r\n            toggleTheme={toggleTheme} \r\n          />\r\n\r\n          {/* 用户认证按钮/菜单 - 仅桌面版 */}\r\n          <Box sx={{ display: { xs: 'none', md: 'flex' }, gap: 1.5, alignItems: 'center' }}>\r\n            {userState.user_id === 0 ? (\r\n              <>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={handleLoginOpen}\r\n                >\r\n                  {translations[language].login}\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  onClick={handleSignupOpen}\r\n                >\r\n                  {translations[language].signup}\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <UserMenu language={language} />\r\n            )}\r\n          </Box>\r\n\r\n          {/* 移动端抽屉菜单 */}\r\n          <MobileDrawer\r\n            language={language}\r\n            toggleLanguage={toggleLanguage}\r\n            toggleTheme={toggleTheme}\r\n            handleLoginOpen={handleLoginOpen}\r\n            handleSignupOpen={handleSignupOpen}\r\n          />\r\n        </StyledToolbar>\r\n      </Container>\r\n\r\n      {/* 登录/注册模态框 */}\r\n      <LoginModal \r\n        open={loginOpen} \r\n        handleClose={handleLoginClose} \r\n        handleSignupOpen={handleSignupOpen} \r\n      />\r\n      \r\n      <SignupModal \r\n        open={signupOpen} \r\n        handleClose={handleSignupClose} \r\n        handleLoginOpen={handleLoginOpen} \r\n      />\r\n    </AppBar>\r\n  );\r\n}"],"names":["translations","en","home","blogs","notes","projects","finance","profile","dashboard","login","logout","signup","password_reset","passwords_not_match","password_too_short","cn","LanguageSwitch","styled","Switch","_ref","theme","width","height","padding","transform","color","backgroundImage","encodeURIComponent","opacity","backgroundColor","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","LanguageSwitchComponent","language","toggleLanguage","useContext","SettingsContext","isMobile","useMediaQuery","breakpoints","down","_jsx","FormControlLabel","control","checked","onChange","label","MaterialUISwitch","ThemeSwitch","themeMode","toggleTheme","_jsxs","_Fragment","children","Box","sx","flexGrow","display","alignItems","px","Avatar","src","stevenCartoon","alt","mr","overflow","xs","md","Button","component","Link","to","variant","size","minWidth","gap","onClick","open","onClose","userState","setUser","useUser","currentPassword","setCurrentPassword","useState","newPassword","setNewPassword","confirmPassword","setConfirmPassword","loading","setLoading","error","setError","success","setSuccess","isSuperuser","is_superuser","handleClose","Dialog","undefined","maxWidth","fullWidth","DialogTitle","onSubmit","async","e","preventDefault","length","result","UserService","reset_password","user_id","access","userData","getNonuserJWT","setTimeout","message","password_reset_failed","err","password_reset_error","console","DialogContent","Alert","severity","mb","password_reset_success","TextField","margin","current_password","type","value","target","required","disabled","new_password","confirm_new_password","DialogActions","cancel","reset","CircularProgress","marginTop","marginLeft","handleLoginOpen","handleSignupOpen","setOpen","passwordResetOpen","setPasswordResetOpen","toggleDrawer","newOpen","IconButton","MenuIcon","Drawer","anchor","PaperProps","p","justifyContent","CloseRoundedIcon","MenuItem","Divider","my","handlePasswordResetOpen","textTransform","username","PasswordResetModal","anchorEl","setAnchorEl","currentTarget","Menu","Boolean","ml","handlePasswordResetClick","fontSize","Card","MuiCard","flexDirection","alignSelf","boxShadow","LoginForm","_ref2","onSignupClick","text","usernamePlaceholder","password","passwordPlaceholder","rememberMe","loginButton","cancelButton","dividerText","noAccount","signUp","usernameError","passwordError","unexpectedError","t","setUsername","setPassword","setRememberMe","setUsernameError","usernameErrorMessage","setUsernameErrorMessage","setPasswordError","passwordErrorMessage","setPasswordErrorMessage","useEffect","savedUsername","localStorage","getItem","savedPassword","event","response","status","setItem","removeItem","_error$response","_error$response$data","data","detail","right","Typography","align","fontWeight","letterSpacing","FormControl","FormLabel","htmlFor","helperText","id","name","placeholder","autoComplete","Checkbox","href","SignupForm","onLoginClick","useTheme","isMediumScreen","up","inviteCode","terms","termsLink","signupButton","haveAccount","confirmPasswordError","inviteCodeError","termsError","apiError","setConfirmPasswordError","confirmPasswordErrorMessage","setConfirmPasswordErrorMessage","setInviteCodeError","inviteCodeErrorMessage","setInviteCodeErrorMessage","termsAccepted","setTermsAccepted","setTermsError","setApiError","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","termsUrl","process","REACT_APP_BASE_URL","validateInputs","document","getElementById","isValid","FormData","get","register","loginResponse","loginError","errors","Array","isArray","invite_code","non_field_errors","nonFieldError","flexWrap","rel","stopPropagation","mt","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","MuiAlert","LoginModal","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","style","backdropFilter","handleSignupClick","SignupModal","handleLoginClick","StyledToolbar","Toolbar","flexShrink","shape","border","borderColor","vars","palette","divider","background","defaultChannel","alpha","default","shadows","CustomAppBar","loginOpen","setLoginOpen","signupOpen","setSignupOpen","AppBar","enableColorOnDark","bgcolor","Container","disableGutters","DesktopNav","UserMenu","MobileDrawer","handleLoginClose","handleSignupClose"],"sourceRoot":""}
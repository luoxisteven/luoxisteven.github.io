{"version":3,"file":"static/js/990.64607ecc.chunk.js","mappings":"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","sources":["components/shared-components/Footer.js","components/finance-components/SimpleStockChart.js","services/FinanceService.js","components/finance-components/StockGrid.js","pages/main-pages/Finance.js"],"sourcesContent":["import Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Link from '@mui/material/Link';\r\nimport { Fragment, useContext } from 'react';\r\nimport { Avatar } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { SettingsContext } from '../../context/SettingsContext';\r\n\r\nfunction Copyright({ language }) {\r\n  return (\r\n    <Typography \r\n      variant=\"body1\"\r\n      sx={{ \r\n        color: 'text.secondary', \r\n        mt: 1,\r\n        typography: { md: 'body1' } \r\n      }}\r\n    >\r\n      {\"All Rights Reserved © \"}\r\n      <Link \r\n        color=\"text.secondary\" \r\n        href=\"https://xiluo.net/\"\r\n        sx={{ typography: { md: 'body1' } }}\r\n      >\r\n        xiluo.net\r\n      </Link>\r\n      &nbsp;\r\n      {new Date().getFullYear()}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function Footer() {\r\n  const { language, themeMode } = useContext(SettingsContext);\r\n\r\n  // 动态路径\r\n  const terms_path = language === \"cn\" ? \"/md/cn/terms\" : \"/md/en/terms\";\r\n  const privacy_path = language === \"cn\" ? \"/md/cn/privacy\" : \"/md/en/privacy\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: { xs: 'column', md: 'row' },\r\n          justifyContent: { md: 'space-between' },\r\n          alignItems: { xs: 'flex-start', md: 'center' },\r\n          px: { xs: 4 },\r\n          py: { xs: 2, sm: 5 },\r\n        }}\r\n      >\r\n        {/* 左侧：头像和Link 区域 */}\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: { xs: 2, sm: 3 },\r\n            textAlign: 'left',\r\n            alignItems: 'flex-start',\r\n            mb: { xs: 2, md: 0 },\r\n            pb: 2,\r\n            width: '100%',\r\n            borderBottom: (theme) => ({\r\n              xs: `1px solid ${theme.palette.divider}`,\r\n              sm: 'none',\r\n            }),\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              gap: 1\r\n            }}\r\n          >\r\n            <Avatar\r\n              src={require('../../assets/img/steven_cartoon.jpeg')}\r\n              alt=\"Steven Logo\"\r\n              sx={{\r\n                width: 30,\r\n                height: 30,\r\n                overflow: 'hidden',\r\n              }}\r\n            />\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                color: 'text.primary',\r\n                fontStyle: 'italic',\r\n                fontWeight: 500,\r\n                letterSpacing: 0.5,\r\n              }}\r\n            >\r\n              {language === \"cn\" ? \"天空没有极限\" : \"The sky is the limit\"}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', gap: 2 }}>\r\n            {[\r\n              { path: '/', labelCn: '首页', labelEn: 'Home' },\r\n              { path: '/notes', labelCn: '笔记', labelEn: 'Notes' },\r\n              { path: '/blogs', labelCn: '博客', labelEn: 'Blogs' },\r\n              { path: '/projects', labelCn: '项目', labelEn: 'Projects' },\r\n              { path: '/fin', labelCn: '金融面板', labelEn: 'Finance' },\r\n              { path: '/profile', labelCn: '个人简介', labelEn: 'Profile' },\r\n              // { path: '/dashboard', labelCn: '仪表盘', labelEn: 'Dashboard' }\r\n            ].map(({ path, labelCn, labelEn }) => (\r\n              <Link \r\n                key={path}\r\n                color=\"text.secondary\" \r\n                variant=\"body1\"\r\n                href={path}\r\n                sx={{ typography: { md: 'body1' } }}\r\n              >\r\n                {language === \"cn\" ? labelCn : labelEn}\r\n              </Link>\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* 右侧：Legal 和版权 */}\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: { xs: 'flex-start', md: 'flex-end' },\r\n            textAlign: { xs: 'left', md: 'right' },\r\n            gap: 1,\r\n            mt: { md: 2 },\r\n          }}\r\n        >\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', gap: 2 }}>\r\n            <Typography \r\n              variant=\"body1\"\r\n              sx={{ \r\n                fontWeight: 'medium',\r\n              }}\r\n            >\r\n              {language === \"cn\" ? \"法律\" : \"Legal\"}\r\n            </Typography>\r\n            {[\r\n              { label: language === \"cn\" ? \"条款\" : \"Terms\", path: terms_path },\r\n              { label: language === \"cn\" ? \"隐私\" : \"Privacy\", path: privacy_path }\r\n            ].map(({ label, path }) => (\r\n              <Link \r\n                key={label}\r\n                color=\"text.secondary\" \r\n                variant=\"body1\"\r\n                href={path} // 动态路径\r\n              >\r\n                {label}\r\n              </Link>\r\n            ))}\r\n          </Box>\r\n\r\n          <Copyright language={language} />\r\n        </Box>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useEffect, useRef, useContext } from 'react';\r\nimport { createChart } from 'lightweight-charts';\r\nimport { SettingsContext } from '../../context/SettingsContext';\r\n\r\nconst SimpleStockChart = ({ data }) => {\r\n  const chartContainerRef = useRef(null);\r\n  const legendRef = useRef(null);\r\n  const { themeMode, language } = useContext(SettingsContext);\r\n\r\n  useEffect(() => {\r\n    if (!data || !data.history || data.history.length === 0) {\r\n      console.error('Invalid data format');\r\n      return;\r\n    }\r\n\r\n    const isDarkMode = themeMode === 'dark';\r\n    const isChineseLanguage = language === 'cn';\r\n\r\n    const chartOptions = {\r\n      width: chartContainerRef.current.clientWidth,\r\n      layout: {\r\n        background: { color: isDarkMode ? '#1a1a1a' : '#f5f5f5', type: 'solid' },\r\n        textColor: isDarkMode ? '#d1d4dc' : '#000000',\r\n      },\r\n      grid: {\r\n        vertLines: { color: isDarkMode ? '#2B2B43' : '#E0E0E0' },\r\n        horzLines: { color: isDarkMode ? '#2B2B43' : '#E0E0E0' },\r\n      },\r\n      crosshair: {\r\n        mode: 1,\r\n        vertLine: {\r\n          color: '#758696',\r\n          width: 1,\r\n          style: 1,\r\n          labelBackgroundColor: isDarkMode ? '#1a1a1a' : '#FFFFFF',\r\n        },\r\n        horzLine: {\r\n          color: '#758696',\r\n          width: 1,\r\n          style: 1,\r\n          labelBackgroundColor: isDarkMode ? '#1a1a1a' : '#FFFFFF',\r\n        },\r\n      },\r\n      timeScale: {\r\n        borderColor: isDarkMode ? '#2B2B43' : '#E0E0E0',\r\n      },\r\n      rightPriceScale: {\r\n        borderColor: isDarkMode ? '#2B2B43' : '#E0E0E0',\r\n        scaleMargins: {\r\n          top: 0.1,\r\n          bottom: 0.2,\r\n        },\r\n      },\r\n      watermark: {\r\n        visible: false,\r\n      },\r\n      credits: {\r\n        enabled: false,\r\n      },\r\n    };\r\n\r\n    const chart = createChart(chartContainerRef.current, chartOptions);\r\n\r\n    const mainPriceScale = chart.priceScale('right');\r\n    const volumePriceScale = chart.priceScale('left');\r\n    volumePriceScale.applyOptions({\r\n      scaleMargins: {\r\n        top: 0.8,\r\n        bottom: 0,\r\n      },\r\n      visible: false,\r\n    });\r\n\r\n    // 在中文环境，红涨绿跌；英文环境，绿涨红跌\r\n    const candleSeries = chart.addCandlestickSeries({\r\n      upColor: isChineseLanguage ? '#ef5350' : '#26a69a',\r\n      downColor: isChineseLanguage ? '#26a69a' : '#ef5350',\r\n      borderVisible: false,\r\n      wickUpColor: isChineseLanguage ? '#ef5350' : '#26a69a',\r\n      wickDownColor: isChineseLanguage ? '#26a69a' : '#ef5350',\r\n    });\r\n\r\n    const volumeSeries = chart.addHistogramSeries({\r\n      color: '#26a69a50',\r\n      priceFormat: {\r\n        type: 'volume',\r\n      },\r\n      priceScaleId: 'left',\r\n    });\r\n\r\n    const chartData = data.history.map((item) => ({\r\n      time: new Date(item.Date).getTime() / 1000,\r\n      open: item.Open,\r\n      high: item.High,\r\n      low: item.Low,\r\n      close: item.Close,\r\n    }));\r\n\r\n    const volumeData = data.history.map((item) => ({\r\n      time: new Date(item.Date).getTime() / 1000,\r\n      value: item.Volume,\r\n      color:\r\n        item.Close >= item.Open\r\n          ? isChineseLanguage\r\n            ? '#ef535050'\r\n            : '#26a69a50'\r\n          : isChineseLanguage\r\n          ? '#26a69a50'\r\n          : '#ef535050',\r\n    }));\r\n\r\n    candleSeries.setData(chartData);\r\n    volumeSeries.setData(volumeData);\r\n\r\n    // 创建并样式化图例容器\r\n    const legend = document.createElement('div');\r\n    legend.style.position = 'absolute';\r\n    legend.style.left = '1px';\r\n    legend.style.top = '1px';\r\n    legend.style.zIndex = '1';\r\n    legend.style.fontSize = '12px';\r\n    legend.style.fontFamily = 'sans-serif';\r\n    legend.style.color = isDarkMode ? '#d1d4dc' : '#131722';\r\n    legend.style.display = 'flex';\r\n    legend.style.gap = '8px';\r\n    legend.style.alignItems = 'center';\r\n    legendRef.current = legend;\r\n    chartContainerRef.current.appendChild(legend);\r\n\r\n    // 订阅 crosshair 移动事件\r\n    chart.subscribeCrosshairMove((param) => {\r\n      if (!param.time || !param.point) {\r\n        legend.style.display = 'none';\r\n        return;\r\n      }\r\n\r\n      const candleData = param.seriesData.get(candleSeries);\r\n      const volData = param.seriesData.get(volumeSeries);\r\n\r\n      if (!candleData || !volData) {\r\n        legend.style.display = 'none';\r\n        return;\r\n      }\r\n\r\n      legend.style.display = 'flex';\r\n\r\n      // 根据语言，对日期做不同格式化\r\n      const date = new Date(param.time * 1000);\r\n\r\n      let formattedDate;\r\n      if (isChineseLanguage) {\r\n        // yyyy/mm/dd\r\n        const year = date.getFullYear();\r\n        const month = String(date.getMonth() + 1).padStart(2, '0');\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        formattedDate = `${year}/${month}/${day}`;\r\n      } else {\r\n        // dd/Mon/yyyy (Mon 为英文缩写)\r\n        const day = date.getDate();\r\n        const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const month = monthNames[date.getMonth()];\r\n        const year = date.getFullYear();\r\n        formattedDate = `${day}/${month}/${year}`;\r\n      }\r\n\r\n      const formatPrice = (price) => price.toFixed(2);\r\n      const formatVolume = (volume) => {\r\n        if (volume >= 1000000) {\r\n          return (volume / 1000000).toFixed(2) + 'M';\r\n        } else if (volume >= 1000) {\r\n          return (volume / 1000).toFixed(2) + 'K';\r\n        }\r\n        return volume.toFixed(0);\r\n      };\r\n\r\n      // 根据语言切换标签\r\n      const OLabel = isChineseLanguage ? '开' : 'O';\r\n      const HLabel = isChineseLanguage ? '高' : 'H';\r\n      const LLabel = isChineseLanguage ? '低' : 'L';\r\n      const CLabel = isChineseLanguage ? '收' : 'C';\r\n      const VLabel = isChineseLanguage ? '量' : 'V';\r\n\r\n      legend.innerHTML = `\r\n        <span>${formattedDate}</span>\r\n        <span>${OLabel}: ${formatPrice(candleData.open)}</span>\r\n        <span>${HLabel}: ${formatPrice(candleData.high)}</span>\r\n        <span>${LLabel}: ${formatPrice(candleData.low)}</span>\r\n        <span>${CLabel}: ${formatPrice(candleData.close)}</span>\r\n        <span>${VLabel}: ${formatVolume(volData.value)}</span>\r\n      `;\r\n    });\r\n\r\n    // 隐藏 TradingView logo\r\n    const style = document.createElement('style');\r\n    style.textContent = `\r\n      #tv-attr-logo {\r\n        display: none !important;\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n\r\n    // 处理图表自适应\r\n    const handleResize = () => {\r\n      chart.applyOptions({\r\n        width: chartContainerRef.current.clientWidth,\r\n      });\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      document.head.removeChild(style);\r\n      if (legendRef.current && chartContainerRef.current) {\r\n        chartContainerRef.current.removeChild(legendRef.current);\r\n      }\r\n      chart.remove();\r\n    };\r\n  }, [data, themeMode, language]);\r\n\r\n  return (\r\n    <div\r\n      ref={chartContainerRef}\r\n      style={{\r\n        width: '100%',\r\n        height: '250px',\r\n        backgroundColor: themeMode === 'dark' ? '#1a1a1a' : '#FFFFFF',\r\n        position: 'relative',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SimpleStockChart;\r\n","import api from './api';\r\n\r\nconst FinanceService = {\r\n    get_stock_history_data: async (ticker, accessToken) => {\r\n        try {\r\n            const response = await api.get(`/get_stock_history_data/${ticker}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${accessToken}`,\r\n                },\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching stock history data:', error);\r\n            throw error;\r\n        }\r\n    },\r\n};\r\n\r\nexport default FinanceService;\r\n","import { useEffect, useState } from 'react';\r\nimport { Grid, Box, Typography, CircularProgress, Alert } from '@mui/material';\r\nimport SimpleStockChart from './SimpleStockChart';\r\nimport FinanceService from '../../services/FinanceService';\r\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\r\nimport { useUser } from \"../../context/UserContext\";\r\n\r\nconst StockGrid = ({ themeMode, language }) => {\r\n  const { userState } = useUser();\r\n\r\n  const [stockData, setStockData] = useState({\r\n    ASX200: { data: null, error: null },\r\n    SSE: { data: null, error: null },\r\n    SP500: { data: null, error: null },\r\n    FTSE: { data: null, error: null },\r\n  });\r\n\r\n  const tickers = {\r\n    ASX200: '^AXJO',\r\n    SSE: '000001.SS',\r\n    SP500: '^GSPC',\r\n    FTSE: '^FTSE',\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchStockData = async () => {\r\n      // 如果 access 为空，则不执行后续操作\r\n      if (!userState.access) {\r\n        return;\r\n      }\r\n      Object.keys(tickers).forEach(async (key) => {\r\n        try {\r\n          const data = await FinanceService.get_stock_history_data(tickers[key], userState.access);\r\n          setStockData((prevData) => ({\r\n            ...prevData,\r\n            [key]: { data, error: null },\r\n          }));\r\n        } catch (error) {\r\n          console.error(`Failed to fetch data for ${key}:`, error);\r\n          setStockData((prevData) => ({\r\n            ...prevData,\r\n            [key]: { data: null, error: 'Failed to load data' },\r\n          }));\r\n        }\r\n      });\r\n    };\r\n\r\n    fetchStockData();\r\n  }, [userState.access]);\r\n\r\n  const calculateChange = (data) => {\r\n    if (!data || data.history.length < 2) return null;\r\n    const lastClose = data.history[data.history.length - 1].Close;\r\n    const secondLastClose = data.history[data.history.length - 2].Close;\r\n    const change = lastClose - secondLastClose;\r\n    const percentageChange = (change / secondLastClose) * 100;\r\n\r\n    return { change, percentageChange };\r\n  };\r\n\r\n  const renderStockHeader = (title, data) => {\r\n    const changeData = calculateChange(data);\r\n    return (\r\n      <Typography\r\n        variant=\"h6\"\r\n        sx={{\r\n          fontWeight: 700,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          color: themeMode === 'dark' ? 'white' : 'black',\r\n        }}\r\n      >\r\n        {title}\r\n        {changeData && (\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            component=\"span\"\r\n            sx={{\r\n              marginLeft: 1,\r\n              fontWeight: 600,\r\n              color: changeData.change >= 0\r\n                ? language === 'cn' ? '#ef5350' : '#26a69a' // Red : Green for 'cn'\r\n                : language === 'cn' ? '#26a69a' : '#ef5350', // Green : Red for 'cn'\r\n            }}\r\n          >\r\n            {changeData.change >= 0 ? '+' : ''}\r\n            {changeData.change.toFixed(2)} / \r\n            {changeData.change >= 0 ? ' +' : ' '}\r\n            {changeData.percentageChange.toFixed(2)}%\r\n          </Typography>\r\n        )}\r\n      </Typography>\r\n    );\r\n  };\r\n\r\n  const stockItems = [\r\n    { title: 'ASX 200', key: 'ASX200' },\r\n    { title: 'SSE (Shanghai)', key: 'SSE' },\r\n    { title: 'S&P 500', key: 'SP500' },\r\n    { title: 'FTSE', key: 'FTSE' },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={2} sx={{ height: '100%' }}>\r\n      {stockItems.map((item, index) => {\r\n        const { data, error } = stockData[item.key];\r\n        return (\r\n          <Grid key={index} item xs={12} sm={6} sx={{ height: { xs: '25%', sm: '50%' } }}>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100%',\r\n                border: '1px solid #ccc',\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              {renderStockHeader(item.title, data)}\r\n              <Box\r\n                sx={{\r\n                  width: '100%',\r\n                  height: '250px',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                {error ? (\r\n                    <WarningAmberIcon\r\n                    sx={{\r\n                        color: 'error.main',\r\n                        fontSize: 48, // 设置图标大小\r\n                    }}\r\n                    />\r\n                ) : data ? (\r\n                  <SimpleStockChart data={data} />\r\n                ) : (\r\n                  <CircularProgress color=\"primary\" />\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default StockGrid;","import { useContext } from 'react';\r\nimport { Box, Container } from '@mui/material';\r\nimport CustomAppBar from '../../components/shared-components/AppBar/AppBar';\r\nimport { SettingsContext } from '../../context/SettingsContext';\r\nimport Footer from '../../components/shared-components/Footer';\r\nimport StockGrid from '../../components/finance-components/StockGrid';\r\n\r\nconst Finance = () => {\r\n  const { language, themeMode } = useContext(SettingsContext);\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          minHeight: '100vh',\r\n        }}\r\n      >\r\n        <CustomAppBar />\r\n        <Container maxWidth=\"lg\" sx={{ flex: 1, padding: 2, mt: 12 }}>\r\n          <StockGrid themeMode={themeMode} language={language} />\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* Footer */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          backgroundColor: 'background.default',\r\n          borderTop: (theme) => ({\r\n            xs: 'none',\r\n            md: `1px solid ${theme.palette.divider}`,\r\n          }),\r\n          maxWidth: (theme) => theme.breakpoints.values.lg,\r\n          width: '100%',\r\n          mx: 'auto',\r\n        }}\r\n      >\r\n        <Footer />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Finance;"],"names":["Copyright","_ref","language","_jsxs","Typography","variant","sx","color","mt","typography","md","children","_jsx","Link","href","Date","getFullYear","Footer","themeMode","useContext","SettingsContext","terms_path","privacy_path","Fragment","Container","display","flexDirection","xs","justifyContent","alignItems","px","py","sm","Box","gap","textAlign","mb","pb","width","borderBottom","theme","palette","divider","Avatar","src","require","alt","height","overflow","fontStyle","fontWeight","letterSpacing","flexWrap","path","labelCn","labelEn","map","_ref2","label","_ref3","data","chartContainerRef","useRef","legendRef","useEffect","history","length","console","error","isDarkMode","isChineseLanguage","chartOptions","current","clientWidth","layout","background","type","textColor","grid","vertLines","horzLines","crosshair","mode","vertLine","style","labelBackgroundColor","horzLine","timeScale","borderColor","rightPriceScale","scaleMargins","top","bottom","watermark","visible","credits","enabled","chart","createChart","priceScale","applyOptions","candleSeries","addCandlestickSeries","upColor","downColor","borderVisible","wickUpColor","wickDownColor","volumeSeries","addHistogramSeries","priceFormat","priceScaleId","chartData","item","time","getTime","open","Open","high","High","low","Low","close","Close","volumeData","value","Volume","setData","legend","document","createElement","position","left","zIndex","fontSize","fontFamily","appendChild","subscribeCrosshairMove","param","point","candleData","seriesData","get","volData","date","formattedDate","String","getMonth","padStart","getDate","formatPrice","price","toFixed","OLabel","HLabel","LLabel","CLabel","VLabel","volume","innerHTML","textContent","head","handleResize","window","addEventListener","removeEventListener","removeChild","remove","ref","backgroundColor","get_stock_history_data","async","ticker","accessToken","api","headers","Authorization","userState","useUser","stockData","setStockData","useState","ASX200","SSE","SP500","FTSE","tickers","access","Object","keys","forEach","FinanceService","key","prevData","fetchStockData","renderStockHeader","title","changeData","lastClose","secondLastClose","change","percentageChange","calculateChange","component","marginLeft","Grid","container","spacing","index","border","borderRadius","WarningAmberIcon","SimpleStockChart","CircularProgress","Finance","minHeight","CustomAppBar","maxWidth","flex","padding","StockGrid","borderTop","breakpoints","values","lg","mx"],"sourceRoot":""}
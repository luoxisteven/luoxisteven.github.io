{"version":3,"file":"static/js/713.611d004e.chunk.js","mappings":"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","sources":["components/shared-components/Footer.js","components/shared-components/MarkdownViewer.js","styles/vsdark.js","styles/vslight.js","components/shared-components/ProfileCard.js","services/ChatbotService.js","components/chatbot-components/ChatbotCard.js","pages/main-pages/Home.js"],"sourcesContent":["import Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Link from '@mui/material/Link';\r\nimport { Fragment, useContext } from 'react';\r\nimport { Avatar } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { SettingsContext } from '../../context/SettingsContext';\r\n\r\nfunction Copyright({ language }) {\r\n  return (\r\n    <Typography \r\n      variant=\"body1\"\r\n      sx={{ \r\n        color: 'text.secondary', \r\n        mt: 1,\r\n        typography: { md: 'body1' } \r\n      }}\r\n    >\r\n      {\"All Rights Reserved © \"}\r\n      <Link \r\n        color=\"text.secondary\" \r\n        href=\"https://xiluo.net/\"\r\n        sx={{ typography: { md: 'body1' } }}\r\n      >\r\n        xiluo.net\r\n      </Link>\r\n      &nbsp;\r\n      {new Date().getFullYear()}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default function Footer() {\r\n  const { language, themeMode } = useContext(SettingsContext);\r\n\r\n  // 动态路径\r\n  const terms_path = language === \"cn\" ? \"/md/cn/terms\" : \"/md/en/terms\";\r\n  const privacy_path = language === \"cn\" ? \"/md/cn/privacy\" : \"/md/en/privacy\";\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: { xs: 'column', md: 'row' },\r\n          justifyContent: { md: 'space-between' },\r\n          alignItems: { xs: 'flex-start', md: 'center' },\r\n          px: { xs: 4 },\r\n          py: { xs: 2, sm: 5 },\r\n        }}\r\n      >\r\n        {/* 左侧：头像和Link 区域 */}\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: { xs: 2, sm: 3 },\r\n            textAlign: 'left',\r\n            alignItems: 'flex-start',\r\n            mb: { xs: 2, md: 0 },\r\n            pb: 2,\r\n            width: '100%',\r\n            borderBottom: (theme) => ({\r\n              xs: `1px solid ${theme.palette.divider}`,\r\n              sm: 'none',\r\n            }),\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              gap: 1\r\n            }}\r\n          >\r\n            <Avatar\r\n              src={require('../../assets/img/steven_cartoon.jpeg')}\r\n              alt=\"Steven Logo\"\r\n              sx={{\r\n                width: 30,\r\n                height: 30,\r\n                overflow: 'hidden',\r\n              }}\r\n            />\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                color: 'text.primary',\r\n                fontStyle: 'italic',\r\n                fontWeight: 500,\r\n                letterSpacing: 0.5,\r\n              }}\r\n            >\r\n              {language === \"cn\" ? \"天空没有极限\" : \"The sky is the limit\"}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', gap: 2 }}>\r\n            {[\r\n              { path: '/', labelCn: '首页', labelEn: 'Home' },\r\n              { path: '/notes', labelCn: '笔记', labelEn: 'Notes' },\r\n              { path: '/blogs', labelCn: '博客', labelEn: 'Blogs' },\r\n              { path: '/projects', labelCn: '项目', labelEn: 'Projects' },\r\n              { path: '/fin', labelCn: '金融面板', labelEn: 'Finance' },\r\n              { path: '/profile', labelCn: '个人简介', labelEn: 'Profile' },\r\n              // { path: '/dashboard', labelCn: '仪表盘', labelEn: 'Dashboard' }\r\n            ].map(({ path, labelCn, labelEn }) => (\r\n              <Link \r\n                key={path}\r\n                color=\"text.secondary\" \r\n                variant=\"body1\"\r\n                href={path}\r\n                sx={{ typography: { md: 'body1' } }}\r\n              >\r\n                {language === \"cn\" ? labelCn : labelEn}\r\n              </Link>\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n\r\n        {/* 右侧：Legal 和版权 */}\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: { xs: 'flex-start', md: 'flex-end' },\r\n            textAlign: { xs: 'left', md: 'right' },\r\n            gap: 1,\r\n            mt: { md: 2 },\r\n          }}\r\n        >\r\n          <Box sx={{ display: 'flex', flexDirection: 'row', gap: 2 }}>\r\n            <Typography \r\n              variant=\"body1\"\r\n              sx={{ \r\n                fontWeight: 'medium',\r\n              }}\r\n            >\r\n              {language === \"cn\" ? \"法律\" : \"Legal\"}\r\n            </Typography>\r\n            {[\r\n              { label: language === \"cn\" ? \"条款\" : \"Terms\", path: terms_path },\r\n              { label: language === \"cn\" ? \"隐私\" : \"Privacy\", path: privacy_path }\r\n            ].map(({ label, path }) => (\r\n              <Link \r\n                key={label}\r\n                color=\"text.secondary\" \r\n                variant=\"body1\"\r\n                href={path} // 动态路径\r\n              >\r\n                {label}\r\n              </Link>\r\n            ))}\r\n          </Box>\r\n\r\n          <Copyright language={language} />\r\n        </Box>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport { Box, Typography, CircularProgress } from \"@mui/material\";\r\nimport { SettingsContext } from '../../context/SettingsContext';\r\nimport axios from \"axios\";\r\nimport { BASE_URL , GITHUB_BASE_URL } from \"../../config\";\r\n\r\n// Markdown\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport remarkMath from \"remark-math\";\r\nimport remarkGfm from \"remark-gfm\"; \r\nimport rehypeKatex from \"rehype-katex\";\r\nimport \"katex/dist/katex.min.css\";\r\nimport rehypeRaw from \"rehype-raw\"; \r\nimport rehypeHighlight from \"rehype-highlight\"; \r\n\r\n// 导入code样式字符串\r\nimport vsdark from '../../styles/vsdark';\r\nimport vslight from '../../styles/vslight';\r\n\r\n// 目录\r\nimport remarkSlug from \"remark-slug\"; \r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\n\r\n// import WebService from \"../../services/WebService\";\r\n\r\nconst MarkdownViewer = ({ filePath, target=null }) => {\r\n  const [markdownContent, setMarkdownContent] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const { themeMode , language } = useContext(SettingsContext);\r\n\r\n  useEffect(() => {\r\n    const loadMarkdown = async () => {\r\n      try {\r\n        // 注意：加载前先清空可能的 errorMessage，以免多次切换时一直保留错误提示\r\n        setErrorMessage(\"\");\r\n        // await new Promise(resolve => setTimeout(resolve, 3000));\r\n\r\n        if (target === \"note_md\") {\r\n          \r\n          // let sanitizedFilePath = filePath;\r\n          // if (filePath.startsWith(\"/\")) {\r\n          //   sanitizedFilePath = filePath.substring(1);\r\n          // }\r\n          // const mdResponse = await axios.get(`${GITHUB_BASE_URL}/${sanitizedFilePath}`);\r\n          const mdResponse = await axios.get(`${GITHUB_BASE_URL}/${filePath}`);\r\n          setMarkdownContent(mdResponse.data);\r\n\r\n        } else if (target === \"note_readme\") {\r\n          const mdResponse = await axios.get(`${GITHUB_BASE_URL}/${filePath}`);\r\n          setMarkdownContent(mdResponse.data);\r\n        } else {\r\n          // 普通路径\r\n          const response = await axios.get(filePath);\r\n          setMarkdownContent(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (language === \"cn\") {\r\n          setErrorMessage(\"404 \\n 访问失败 \\n 无法加载Markdown 文件\");\r\n        } else {\r\n          setErrorMessage(\"404 \\n Not Found. \\n Fail to load markdown file.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    if (filePath) {\r\n      loadMarkdown();\r\n    }\r\n  }, [filePath, target, language]);\r\n\r\n  // 动态切换代码高亮的主题\r\n  useEffect(() => {\r\n    const styleTagId = 'code-theme-styles';\r\n    let styleTag = document.getElementById(styleTagId);\r\n\r\n    if (!styleTag) {\r\n      styleTag = document.createElement('style');\r\n      styleTag.type = 'text/css';\r\n      styleTag.id = styleTagId;\r\n      document.head.appendChild(styleTag);\r\n    }\r\n\r\n    if (themeMode === 'dark') {\r\n      styleTag.innerHTML = vsdark;\r\n    } else {\r\n      styleTag.innerHTML = vslight;\r\n    }\r\n  }, [themeMode]);\r\n  \r\n  // 根据有无 errorMessage、markdownContent 来决定最终渲染\r\n  if (errorMessage) {\r\n    // 如果有错误信息，优先渲染错误提示\r\n    return (\r\n      <Typography variant=\"h6\" color=\"error\" align=\"center\" mt={4}  style={{ whiteSpace: \"pre-line\" }}>\r\n        {errorMessage}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box>\r\n        {markdownContent ? (\r\n          <ReactMarkdown\r\n            children={markdownContent}\r\n            urlTransform={(url, children, title) => {\r\n              const isImage = /\\.(png|jpg|jpeg|gif|svg|webp)$/i.test(url);\r\n              \r\n              if (target === \"note_md\") {\r\n                // if (url.startsWith(\"http\") || url.startsWith(\"https\")) {\r\n                //   return url;\r\n                // }\r\n                // 从当前文档路径中提取目录结构\r\n                if (filePath && isImage) {\r\n                  // 获取当前文档的目录路径\r\n                  const pathParts = filePath.split('/');\r\n                  const documentDir = pathParts.slice(0, -1).join('/');\r\n                  \r\n                  const imagePath = url.startsWith('/') ? url.substring(1) : url;\r\n                  return `${GITHUB_BASE_URL}/${documentDir}/${imagePath}`;\r\n                }\r\n                \r\n                // return `${GITHUB_BASE_URL}/${url}`;\r\n              }\r\n              return url;\r\n            }}\r\n            remarkPlugins={[remarkMath, remarkGfm, remarkSlug]}\r\n            rehypePlugins={[\r\n              rehypeKatex,\r\n              rehypeRaw,\r\n              rehypeHighlight,\r\n              rehypeAutolinkHeadings,\r\n            ]}\r\n            components={{\r\n              h1: ({ node, ...props }) => (\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  gutterBottom\r\n                  sx={{\r\n                    fontWeight: 600,\r\n                    lineHeight: 1.5,\r\n                    marginBottom: 2,\r\n                    pb: 2,\r\n                    borderBottom: \"2px solid\",\r\n                    borderColor: themeMode === \"dark\" ? \"#888\" : \"#aaa\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              h2: ({ node, ...props }) => (\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  gutterBottom\r\n                  sx={{\r\n                    fontWeight: 600,\r\n                    lineHeight: 1.5,\r\n                    pb: 1.5,\r\n                    marginTop: 3,\r\n                    marginBottom: 1.5,\r\n                    borderBottom: \"2px solid\",\r\n                    borderColor: themeMode === \"dark\" ? \"#555\" : \"#ccc\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              h3: ({ node, ...props }) => (\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  gutterBottom\r\n                  sx={{ fontWeight: 600, lineHeight: 1.4, marginBottom: 1.2 }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              p: ({ node, ...props }) => (\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  gutterBottom\r\n                  sx={{\r\n                    fontSize: \"0.9rem\",\r\n                    lineHeight: 1.6,\r\n                    marginBottom: 1.5,\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              li: ({ node, ...props }) => (\r\n                <Typography\r\n                  component=\"li\"\r\n                  variant=\"body2\"\r\n                  gutterBottom\r\n                  sx={{\r\n                    fontSize: \"0.9rem\",\r\n                    lineHeight: 1.6,\r\n                    marginBottom: 0.5,\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              a: ({ node, ...props }) => {\r\n                const isExternalLink =\r\n                  props.href.startsWith(\"http://\") ||\r\n                  props.href.startsWith(\"https://\");\r\n                return (\r\n                  <Typography\r\n                    component=\"a\"\r\n                    variant=\"body2\"\r\n                    sx={{\r\n                      color: themeMode === \"dark\" ? \"#64b5f6\" : \"#13479c\",\r\n                      textDecoration: \"none\",\r\n                      \"&:hover\": {\r\n                        textDecoration: \"underline\",\r\n                      },\r\n                    }}\r\n                    target={isExternalLink ? \"_blank\" : \"_self\"}\r\n                    rel={isExternalLink ? \"noopener noreferrer\" : undefined}\r\n                    {...props}\r\n                  />\r\n                );\r\n              },\r\n              img: ({ node, ...props }) => (\r\n                <Box\r\n                  component=\"img\"\r\n                  sx={{\r\n                    maxWidth: { xs: \"100%\", md: \"85%\" },\r\n                    height: \"auto\",\r\n                    display: \"block\",\r\n                    margin: \"0 auto\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              table: ({ node, ...props }) => (\r\n                <Box\r\n                  component=\"table\"\r\n                  sx={{\r\n                    margin: \"0 auto\",\r\n                    borderCollapse: \"collapse\",\r\n                    maxWidth: { xs: \"100%\", md: \"85%\" },\r\n                    width: \"100%\",\r\n                    overflowX: \"auto\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              thead: ({ node, ...props }) => (\r\n                <Box\r\n                  component=\"thead\"\r\n                  sx={{\r\n                    borderBottom: \"2px solid\",\r\n                    borderColor: themeMode === \"dark\" ? \"#555\" : \"#ccc\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              tr: ({ node, ...props }) => (\r\n                <Box\r\n                  component=\"tr\"\r\n                  sx={{\r\n                    borderBottom: \"1px solid\",\r\n                    borderColor: themeMode === \"dark\" ? \"#444\" : \"#ddd\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              th: ({ node, ...props }) => (\r\n                <Box\r\n                  component=\"th\"\r\n                  sx={{\r\n                    padding: \"8px\",\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bold\",\r\n                    borderBottom: \"2px solid\",\r\n                    borderColor: themeMode === \"dark\" ? \"#555\" : \"#ccc\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              td: ({ node, ...props }) => (\r\n                <Box\r\n                  component=\"td\"\r\n                  sx={{\r\n                    padding: \"8px\",\r\n                    textAlign: \"center\",\r\n                    borderBottom: \"1px solid\",\r\n                    borderColor: themeMode === \"dark\" ? \"#444\" : \"#ddd\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              code: ({ node, inline, ...props }) => (\r\n                <Box\r\n                  component=\"code\"\r\n                  sx={{\r\n                    backgroundColor:\r\n                      themeMode === \"dark\" ? \"#353535\" : \"#E7E7E7\",\r\n                    fontFamily:\r\n                      \"'Menlo', 'Consolas', 'Courier New', monospace\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n              pre: ({ node, ...props }) => (\r\n                <Box\r\n                  component=\"pre\"\r\n                  sx={{\r\n                    borderRadius: \"5px\",\r\n                    overflowX: \"auto\", \r\n                    maxWidth: \"100%\",\r\n                    marginBottom: \"1rem\",\r\n                    fontSize: \"0.9rem\",\r\n                    boxShadow:\r\n                      \"0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06)\",\r\n                  }}\r\n                  {...props}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        ) : (\r\n          <Box sx={{ width: '100%' }}>    \r\n            <Typography variant=\"h6\" align=\"center\" mt={3.5}>\r\n              <CircularProgress />\r\n              {/* {language === \"cn\" ? \"正在加载内容...\" : \"Loading content...\"} */}\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MarkdownViewer;\r\n","const vsdark = `\r\n.hljs {\r\n  display: block;\r\n  overflow-x: auto;\r\n  background: #1a1a1a;\r\n  color: #dcdcdc;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);\r\n  padding: 1.5rem; /* 设置内边距为 1rem */\r\n  line-height: 1.4; /* 设置行高为 1.4 */\r\n  font-size: 0.9rem; /* 设置字体大小为 0.9rem */\r\n  font-family: 'Menlo', 'Consolas', 'Courier New', monospace;z\r\n}\r\n.hljs-keyword, .hljs-literal, .hljs-name, .hljs-symbol {\r\n  color: #569cd6;\r\n}\r\n.hljs-link {\r\n  color: #569cd6;\r\n  text-decoration: underline;\r\n}\r\n.hljs-built_in, .hljs-type {\r\n  color: #4ec9b0;\r\n}\r\n.hljs-class, .hljs-number {\r\n  color: #b8d7a3;\r\n}\r\n.hljs-meta-string, .hljs-string {\r\n  color: #d69d85;\r\n}\r\n.hljs-regexp, .hljs-template-tag {\r\n  color: #9a5334;\r\n}\r\n.hljs-formula, .hljs-function, .hljs-params, .hljs-subst, .hljs-title {\r\n  color: #dcdcdc;\r\n}\r\n.hljs-comment, .hljs-quote {\r\n  color: #57a64a;\r\n  font-style: italic;\r\n}\r\n.hljs-doctag {\r\n  color: #608b4e;\r\n}\r\n.hljs-meta, .hljs-meta-keyword, .hljs-tag {\r\n  color: #9b9b9b;\r\n}\r\n.hljs-template-variable, .hljs-variable {\r\n  color: #bd63c5;\r\n}\r\n.hljs-attr, .hljs-attribute, .hljs-builtin-name {\r\n  color: #9cdcfe;\r\n}\r\n.hljs-section {\r\n  color: gold;\r\n}\r\n.hljs-emphasis {\r\n  font-style: italic;\r\n}\r\n.hljs-strong {\r\n  font-weight: 700;\r\n}\r\n.hljs-bullet, .hljs-selector-attr, .hljs-selector-class, .hljs-selector-id, .hljs-selector-pseudo, .hljs-selector-tag {\r\n  color: #d7ba7d;\r\n}\r\n.hljs-addition {\r\n  background-color: #144212;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n.hljs-deletion {\r\n  background-color: #600;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n  \r\n`;\r\n\r\nexport default vsdark;\r\n","const vslight = `\r\n.hljs {\r\n  display: block;\r\n  overflow-x: auto;\r\n  background: #F8F9F8;\r\n  color: #000;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);\r\n  padding: 1.5rem; /* 设置内边距为 1rem */\r\n  line-height: 1.4; /* 设置行高为 1.4 */\r\n  font-size: 0.9rem; /* 设置字体大小为 0.9rem */\r\n  font-family: 'Menlo', 'Consolas', 'Courier New', monospace;z\r\n}\r\n.hljs-comment, .hljs-quote, .hljs-variable {\r\n  color: green;\r\n}\r\n.hljs-built_in, .hljs-keyword, .hljs-name, .hljs-selector-tag, .hljs-tag {\r\n  color: #00f;\r\n}\r\n.hljs-addition, .hljs-attribute, .hljs-literal, .hljs-section, .hljs-string, .hljs-template-tag, .hljs-template-variable, .hljs-title, .hljs-type {\r\n  color: #a31515;\r\n}\r\n.hljs-deletion, .hljs-meta, .hljs-selector-attr, .hljs-selector-pseudo {\r\n  color: #2b91af;\r\n}\r\n.hljs-doctag {\r\n  color: grey;\r\n}\r\n.hljs-attr {\r\n  color: red;\r\n}\r\n.hljs-bullet, .hljs-link, .hljs-symbol {\r\n  color: #00b0e8;\r\n}\r\n.hljs-emphasis {\r\n  font-style: italic;\r\n}\r\n.hljs-strong {\r\n  font-weight: 700;\r\n}\r\n`;\r\n\r\n\r\n\r\nexport default vslight;\r\n","import { useState, useContext } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Grid,\r\n  IconButton,\r\n  Box,\r\n  Link,\r\n} from \"@mui/material\";\r\nimport { SettingsContext } from \"../../context/SettingsContext\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport InstagramIcon from \"@mui/icons-material/Instagram\";\r\nimport SchoolIcon from \"@mui/icons-material/School\";\r\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\n\r\n// 导入两张图片，确保它们都被预加载\r\nimport stevenPhoto from \"../../assets/img/steven.jpeg\";\r\n// import stevenCartoon from \"../../assets/img/steven_cartoon_2.jpeg\";\r\nimport stevenCartoon from \"../../assets/img/steven_cartoon.jpeg\";\r\n\r\nconst ProfileCard = () => {\r\n  // 使用导入的图片作为初始状态\r\n  const [avatar, setAvatar] = useState(stevenPhoto);\r\n  const { language, themeMode } = useContext(SettingsContext); // 从 Context 中获取语言状态\r\n\r\n  // 切换图片的处理函数 - 使用预加载的图片变量\r\n  const handleAvatarClick = () => {\r\n    setAvatar(prevAvatar => prevAvatar === stevenPhoto ? stevenCartoon : stevenPhoto);\r\n  };\r\n\r\n  // 根据语言状态动态设置文本内容\r\n  const name = \"Xi Luo\";\r\n  const title = language === \"en\" ? \"Junior Machine Learning Engineer\" : \"初级机器学习工程师\";\r\n\r\n  // 根据主题模式设置图标颜色\r\n  const primaryIconColor = themeMode === \"dark\" ? \"#64B5F6\" : \"#0066CC\";\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        width: 320,\r\n        padding: 2,\r\n        textAlign: \"center\",\r\n        boxShadow: \"none !important\", // 强制移除阴影\r\n        background: \"transparent !important\", // 添加 background 属性\r\n      }}\r\n    >\r\n      {/* 头像 */}\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt={name}\r\n        src={avatar}\r\n        onClick={handleAvatarClick} // 添加点击事件处理函数\r\n        sx={{\r\n          width: 200,\r\n          height: 200,\r\n          margin: \"0 auto\",\r\n          borderRadius: \"50%\", // 圆形效果\r\n          cursor: \"pointer\", // 添加鼠标指针样式\r\n        }}\r\n      />\r\n      {/* 内容 */}\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"div\">\r\n          {name}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n          {title}\r\n        </Typography>\r\n        <Link\r\n          href=\"https://addaxis.ai\"\r\n          target=\"_blank\" // 在新标签页中打开\r\n          rel=\"noopener noreferrer\" // 安全属性\r\n          color=\"inherit\" // 继承父组件颜色\r\n          underline=\"hover\" // 设置下划线样式\r\n          sx={{ mt: 1, display: \"inline-block\" }}\r\n        >\r\n          @addaxis.ai\r\n        </Link>\r\n      </CardContent>\r\n\r\n      {/* 按钮区域 */}\r\n      <Box>\r\n        <Grid container justifyContent=\"center\" spacing={2}>\r\n          <Grid item>\r\n            <IconButton \r\n              href=\"mailto:steven@xiluo.net\" \r\n              aria-label=\"email\"\r\n              sx={{ color: primaryIconColor }}\r\n            >\r\n              <EmailIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton href=\"https://www.instagram.com/stevluo32/\" color=\"secondary\" aria-label=\"instagram\">\r\n              <InstagramIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton href=\"https://github.com/luoxisteven\" color=\"default\" aria-label=\"github\">\r\n              <GitHubIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton \r\n              href=\"https://scholar.google.com.au/citations?user=YtYvNGMAAAAJ\" \r\n              aria-label=\"google scholar\"\r\n              sx={{ color: primaryIconColor }}\r\n            >\r\n              <SchoolIcon />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton \r\n              href=\"https://www.linkedin.com/in/steven-luo-1a0ab8272/\" \r\n              aria-label=\"linkedin\"\r\n              sx={{ color: primaryIconColor }}\r\n            >\r\n              <LinkedInIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;","import api from './api'; // 引入共享的 axios 实例\r\n\r\nconst ChatbotService = {\r\n    query: async (query, username, accessToken) => {\r\n        const formData = new FormData();\r\n        formData.append('query', query);\r\n        formData.append('username', username);\r\n\r\n        const response = await api.post('/query/', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                Authorization: `Bearer ${accessToken}`,\r\n            },\r\n        });\r\n        return response.data;\r\n    },\r\n};\r\n\r\nexport default ChatbotService;\r\n","import { useState, useRef, useEffect, useContext } from 'react';\r\nimport { SettingsContext } from '../../context/SettingsContext';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Paper, \r\n  TextField, \r\n  IconButton, \r\n  Container,\r\n  CircularProgress,\r\n  Avatar\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport BotAvatar from '@mui/icons-material/SmartToy';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport ChatbotService from '../../services/ChatbotService';\r\nimport { useUser } from \"../../context/UserContext\";\r\n\r\nconst TypewriterText = ({ text, onComplete }) => {\r\n  const [displayedText, setDisplayedText] = useState('');\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentIndex < text.length) {\r\n      const timer = setTimeout(() => {\r\n        setDisplayedText(prev => prev + text[currentIndex]);\r\n        setCurrentIndex(currentIndex + 1);\r\n      }, 30);\r\n      \r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      setIsComplete(true);\r\n      if (onComplete) {\r\n        onComplete();\r\n      }\r\n    }\r\n  }, [currentIndex, text, onComplete]);\r\n\r\n  return (\r\n    <>\r\n      {displayedText}\r\n      {!isComplete && (\r\n        <motion.span\r\n          animate={{ opacity: [0, 1, 0] }}\r\n          transition={{ repeat: Infinity, duration: 0.8 }}\r\n        >\r\n          |\r\n        </motion.span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// 快捷问题链接组件\r\nconst QuickQuestionLink = ({ question, onQuestionClick, delay = 0, themeMode }) => {\r\n  const [showQuestion, setShowQuestion] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setShowQuestion(true);\r\n    }, delay);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [delay]);\r\n\r\n  // 根据主题模式选择合适的链接颜色\r\n  const linkColor = themeMode === 'dark' ? '#FFEFD5' : '#13479C';\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {showQuestion && (\r\n        <motion.span\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n          onClick={() => onQuestionClick(question)}\r\n          style={{ \r\n            color: linkColor,\r\n            textDecoration: 'underline',\r\n            cursor: 'pointer',\r\n            fontWeight: '500',\r\n          }}\r\n        >\r\n          <TypewriterText text={question} />\r\n        </motion.span>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\n// 普通文本组件（用于 \"or explore more...\"）\r\nconst DelayedText = ({ text, delay = 0 }) => {\r\n  const [showText, setShowText] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setShowText(true);\r\n    }, delay);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [delay]);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {showText && (\r\n        <motion.span\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <TypewriterText text={text} />\r\n        </motion.span>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\n// Fixed: 处理长链接和快捷问题的组件\r\nconst MessageContent = ({ text, isBot, showQuickQuestions, onQuestionClick, themeMode }) => {\r\n  const [mainTextComplete, setMainTextComplete] = useState(false);\r\n  \r\n  // URL 正则表达式\r\n  const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\r\n  \r\n  // 如果是机器人消息且包含快捷问题\r\n  if (isBot && showQuickQuestions) {\r\n    return (\r\n      <span style={{ wordBreak: 'break-word', overflowWrap: 'break-word' }}>\r\n        <TypewriterText text={text} onComplete={() => setMainTextComplete(true)} />\r\n        {mainTextComplete && (\r\n          <>\r\n            <br />\r\n            <DelayedText \r\n              text=\"Try:\"\r\n              delay={300}\r\n            />\r\n            <br />\r\n            <span style={{ display: 'block' }}>\r\n              <DelayedText text=\"- \" delay={600} />\r\n              <QuickQuestionLink \r\n                question=\"What are your hobbies?\"\r\n                onQuestionClick={onQuestionClick}\r\n                delay={700}\r\n                themeMode={themeMode}\r\n              />\r\n            </span>\r\n            <span style={{ display: 'block' }}>\r\n              <DelayedText text=\"- \" delay={1100} />\r\n              <QuickQuestionLink \r\n                question=\"What do you usually do at the weekend?\"\r\n                onQuestionClick={onQuestionClick}\r\n                delay={1200}\r\n                themeMode={themeMode}\r\n              />\r\n            </span>\r\n          </>\r\n        )}\r\n      </span>\r\n    );\r\n  }\r\n  \r\n  if (isBot && urlRegex.test(text)) {\r\n    // 将文本按链接分割\r\n    const parts = text.split(urlRegex);\r\n    \r\n    return (\r\n      <span style={{ wordBreak: 'break-all', overflowWrap: 'break-word' }}>\r\n        {parts.map((part, index) => {\r\n          if (urlRegex.test(part)) {\r\n            return (\r\n              <a \r\n                key={index} \r\n                href={part} \r\n                target=\"_blank\" \r\n                rel=\"noopener noreferrer\"\r\n                style={{ \r\n                  color: 'inherit', \r\n                  textDecoration: 'underline',\r\n                  wordBreak: 'break-all',\r\n                  overflowWrap: 'break-word'\r\n                }}\r\n              >\r\n                {part}\r\n              </a>\r\n            );\r\n          }\r\n          return <TypewriterText key={index} text={part} />;\r\n        })}\r\n      </span>\r\n    );\r\n  }\r\n  \r\n  if (isBot) {\r\n    return <TypewriterText text={text} />;\r\n  }\r\n  \r\n  return <span style={{ wordBreak: 'break-word', overflowWrap: 'break-word' }}>{text}</span>;\r\n};\r\n\r\nconst QuickQuestions = ({ onQuestionClick, themeMode }) => {\r\n  const questions = [\r\n    \"What are your hobbies?\",\r\n    \"What do you usually do at the weekend?\"\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ mt: 2, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n      {questions.map((question, index) => (\r\n        <Chip\r\n          key={index}\r\n          label={question}\r\n          onClick={() => onQuestionClick(question)}\r\n          clickable\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          sx={{\r\n            borderColor: themeMode === 'dark' ? 'grey.600' : 'primary.main',\r\n            color: themeMode === 'dark' ? 'grey.300' : 'primary.main',\r\n            fontSize: '0.75rem',\r\n            '&:hover': {\r\n              backgroundColor: themeMode === 'dark' ? 'grey.800' : 'primary.light',\r\n              color: themeMode === 'dark' ? 'grey.100' : 'white',\r\n            },\r\n            transition: 'all 0.2s ease-in-out'\r\n          }}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst ChatbotCard = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"I am Steven GPT! Feel free to ask me anything about myself.\\n\", sender: 'bot', showQuickQuestions: true }\r\n  ]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const messageListRef = useRef(null);\r\n  const isInitialRender = useRef(true);\r\n\r\n  const { themeMode } = useContext(SettingsContext);\r\n  const { userState } = useUser();\r\n\r\n  const handleQuestionClick = (question) => {\r\n    // 如果正在加载中，不允许发送新消息\r\n    if (loading) return;\r\n    \r\n    // 直接发送消息\r\n    handleSendMessageWithText(question);\r\n  };\r\n\r\n  const handleSendMessageWithText = async (text) => {\r\n    if (text.trim() === '') return;\r\n\r\n    if (text.length > 250) {\r\n      const errorReply = {\r\n        text: \"Your query exceeds the maximum allowed length of 250 characters. Please shorten it.\",\r\n        sender: 'bot',\r\n      };\r\n      setMessages((prevMessages) => [...prevMessages, errorReply]);\r\n      return;\r\n    }\r\n\r\n    const userMessage = { text: text, sender: 'user' };\r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n\r\n    setInputText('');\r\n    setLoading(true);\r\n\r\n    const loadingMessage = { text: \"loading\", sender: 'bot', loading: true };\r\n    setMessages(prevMessages => [...prevMessages, loadingMessage]);\r\n\r\n    try {\r\n      const response = await ChatbotService.query(text, userState.username, userState.access);\r\n\r\n      const botReply = {\r\n        text: response.response || \"I couldn't process your query. Please try again.\",\r\n        sender: 'bot'\r\n      };\r\n\r\n      setMessages(prevMessages => [\r\n        ...prevMessages.slice(0, -1),\r\n        botReply\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error fetching chatbot response:', error);\r\n      const errorReply = {\r\n        text: \"There was an error processing your query. Please try again later.\",\r\n        sender: 'bot'\r\n      };\r\n      setMessages(prevMessages => [\r\n        ...prevMessages.slice(0, -1),\r\n        errorReply\r\n      ]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    handleSendMessageWithText(inputText);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isInitialRender.current) {\r\n      isInitialRender.current = false;\r\n      return;\r\n    }\r\n\r\n    if (messageListRef.current) {\r\n      const scrollContainer = messageListRef.current;\r\n      scrollContainer.scrollTop = scrollContainer.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <Box maxWidth=\"sm\" \r\n        sx={{ \r\n        width: '100%',\r\n        height: '600px',\r\n        display: 'flex', \r\n        flexDirection: 'column' \r\n    }}>\r\n      <Paper \r\n        elevation={3} \r\n        sx={{ \r\n          flex: 1, \r\n          display: 'flex', \r\n          flexDirection: 'column', \r\n          borderRadius: 2, \r\n          overflow: 'hidden',\r\n          bgcolor: themeMode === 'dark' ? 'grey.900' : 'background.paper',\r\n          color: themeMode === 'dark' ? 'grey.100' : 'text.primary'\r\n        }}\r\n      >\r\n        \r\n        <Box \r\n          sx={{ \r\n            bgcolor: themeMode === 'dark' ? '#1976D2' : 'primary.main', \r\n            color: themeMode === 'dark' ? 'grey.100' : 'white', \r\n            p: 2, \r\n            display: 'flex', \r\n            alignItems: 'center' \r\n          }}\r\n        >\r\n          <BotAvatar sx={{ mr: 2 }} />\r\n          <Typography variant=\"h6\">Steven GPT</Typography>\r\n        </Box>\r\n\r\n        {/* Fixed: Removed component=\"main\" to avoid ARIA role conflict */}\r\n        <Box\r\n          role=\"log\"\r\n          aria-label=\"Chat messages\"\r\n          aria-live=\"polite\"\r\n          ref={messageListRef}\r\n          sx={{ \r\n            flex: 1, \r\n            overflowY: 'auto', \r\n            p: 2,\r\n            bgcolor: themeMode === 'dark' ? 'grey.900' : 'background.paper'\r\n          }}\r\n        >\r\n          <AnimatePresence>\r\n            {messages.map((msg, index) => (\r\n              <motion.div\r\n                key={index}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                <Box\r\n                  sx={{ \r\n                    display: 'flex',\r\n                    justifyContent: msg.sender === 'user' ? 'flex-end' : 'flex-start',\r\n                    alignItems: 'flex-start',\r\n                    mb: 2\r\n                  }}\r\n                >\r\n                  {/* 机器人头像 - 只在机器人消息时显示 */}\r\n                  {msg.sender === 'bot' && (\r\n                    <Avatar\r\n                      sx={{ \r\n                        bgcolor: themeMode === 'dark' ? '#1E88E5' : '#1976d2',\r\n                        width: 32,\r\n                        height: 32,\r\n                        mr: 1,\r\n                        mt: 1.5\r\n                      }}\r\n                    >\r\n                      <BotAvatar sx={{ fontSize: 18, color: \"white\" }} />\r\n                    </Avatar>\r\n                  )}\r\n\r\n                  {msg.loading ? (\r\n                      <CircularProgress size={20} sx={{ marginLeft: 2, marginTop: 2.2 }}/>\r\n                  ) : (\r\n                    <Box\r\n                      role={msg.sender === 'bot' ? 'status' : undefined}\r\n                      aria-label={msg.sender === 'bot' ? 'Bot message' : 'Your message'}\r\n                      sx={{\r\n                        maxWidth: msg.sender === 'user' ? '65%' : '65%', // 机器人消息稍微窄一点给头像留空间\r\n                        bgcolor: msg.sender === 'user' \r\n                          ? (themeMode === 'dark' ? 'grey.800' : 'grey.200') \r\n                          : (themeMode === 'dark' ? '#1E88E5' : '#BBDEFB'),\r\n                        color: themeMode === 'dark' ? 'white' : 'black',\r\n                        p: 1.5,\r\n                        borderRadius: 2,\r\n                        marginTop: 1,\r\n                        marginLeft: msg.sender === 'user' ? 1.5 : 0, // 用户消息保持左边距\r\n                        display: 'flex',\r\n                        alignItems: 'flex-start'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        sx={{\r\n                          fontSize: '1rem',\r\n                          whiteSpace: 'pre-wrap',\r\n                          wordBreak: 'break-word',\r\n                          overflowWrap: 'break-word'\r\n                        }}\r\n                      >\r\n                        <MessageContent \r\n                          text={msg.text} \r\n                          isBot={msg.sender === 'bot'}\r\n                          showQuickQuestions={msg.showQuickQuestions}\r\n                          onQuestionClick={handleQuestionClick}\r\n                          themeMode={themeMode}\r\n                        />\r\n                      </Typography>\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n        </Box>\r\n\r\n        <Box \r\n          component=\"form\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handleSendMessage();\r\n          }}\r\n          sx={{ \r\n            p: 2, \r\n            borderTop: '1px solid', \r\n            borderColor: themeMode === 'dark' ? 'grey.700' : 'divider', \r\n            display: 'flex',\r\n            bgcolor: themeMode === 'dark' ? 'grey.900' : 'background.paper'\r\n          }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"Enter another query...\"\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n            inputProps={{\r\n              'aria-label': 'Type your message',\r\n              maxLength: 250\r\n            }}\r\n            sx={{ \r\n              mr: 2,\r\n              bgcolor: themeMode === 'dark' ? 'grey.800' : 'white',\r\n              input: { color: themeMode === 'dark' ? 'grey.100' : 'black' }\r\n            }}\r\n            disabled={loading}\r\n          />\r\n          <IconButton \r\n            type=\"submit\"\r\n            color=\"primary\" \r\n            onClick={handleSendMessage}\r\n            sx={{ borderRadius: 2 }}\r\n            disabled={loading}\r\n            aria-label=\"Send message\"\r\n          >\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatbotCard;","import { useContext } from 'react';\r\nimport { Box, Container, useMediaQuery, useTheme } from '@mui/material';\r\nimport { SettingsContext } from '../../context/SettingsContext';\r\nimport CustomAppBar from '../../components/shared-components/AppBar/AppBar';\r\nimport ProfileCard from \"../../components/shared-components/ProfileCard\";\r\nimport Footer from '../../components/shared-components/Footer';\r\nimport ChatbotCard from '../../components/chatbot-components/ChatbotCard';\r\nimport MarkdownViewer from \"../../components/shared-components/MarkdownViewer\";\r\n\r\nimport { motion } from 'framer-motion';\r\n\r\nconst fadeInVariants = {\r\n  hidden: { opacity: 0, y: 20 },\r\n  visible: { opacity: 1, y: 0, transition: { duration: 0.5 } },\r\n};\r\n\r\nconst Home = () => {\r\n  const { language, themeMode } = useContext(SettingsContext);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  const intro_filePath = language === \"en\" ? \"md/en/steven_en.md\" : \"md/cn/steven_cn.md\";\r\n  const about_filePath = language === \"en\" ? \"md/en/about_website_en.md\" : \"md/cn/about_website_cn.md\";\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <CustomAppBar />\r\n\r\n      <Box\r\n        sx={{\r\n          marginTop: isMobile ? '120px' : '64px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n\r\n        <Container\r\n          maxWidth={isMobile ? 'sm' : 'lg'}\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: isMobile ? 'column' : 'row',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            minHeight: 'calc(100vh - 64px)',\r\n          }}\r\n        >\r\n\r\n          <motion.div initial=\"hidden\" animate=\"visible\" variants={fadeInVariants}>\r\n          <Box\r\n            sx={{\r\n              flex: isMobile ? 'none' : '1 1 20%',\r\n              width: isMobile ? '100%' : 'auto',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <ProfileCard />\r\n          </Box>\r\n          </motion.div>\r\n\r\n          <motion.div initial=\"hidden\" animate=\"visible\" variants={fadeInVariants} style={{ width: '100%', height: '100%' }}>\r\n            <Box\r\n              sx={{\r\n                flex: isMobile ? 'none' : '1 1 80%',\r\n                width: isMobile ? '100%' : 'auto',\r\n                display: 'flex',\r\n                overflow: 'auto',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <MarkdownViewer filePath={intro_filePath} />\r\n            </Box>\r\n          </motion.div>\r\n\r\n        </Container>\r\n\r\n\r\n        <Container\r\n          maxWidth=\"lg\"\r\n          sx={{\r\n            minHeight: '1px',\r\n            borderTop: isMobile\r\n              ? 'none'\r\n              : `1px solid ${themeMode === 'light' ? '#ccc' : '#555'}`,\r\n          }}\r\n        />\r\n\r\n        <Container\r\n          sx={{\r\n            minHeight: '100vh',\r\n            display: 'flex',\r\n            flexDirection: isMobile ? 'column' : 'row', // 动态设置 flexDirection\r\n            maxWidth: isMobile ? 'sm' : 'lg',\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              flex: isMobile ? 'none' : '1 1 65%', // 左侧宽度为 65%\r\n              width: isMobile ? '100%' : 'auto',\r\n              display: 'flex',\r\n              overflow: 'auto',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <MarkdownViewer filePath={about_filePath} />\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              flex: isMobile ? 'none' : '1 1 35%',\r\n              width: isMobile ? '100%' : 'auto', // 在移动端占满宽度\r\n              display: 'flex', // 始终显示\r\n              alignItems: 'center',\r\n              marginTop: isMobile ? 2 : 0, // 在移动端增加顶部间距\r\n              marginBottom: isMobile ? 2: 0,\r\n              paddingLeft: isMobile ? 0 : 4, // 在移动端移除左侧内边距\r\n            }}\r\n          >\r\n            <ChatbotCard />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n\r\n      {/* 下部 Footer */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          backgroundColor: 'background.default',\r\n          borderTop: (theme) => ({\r\n            xs: 'none', // 在 xs 屏幕无边框\r\n            md: `1px solid ${theme.palette.divider}`, // 在 md 屏幕及以上显示边框\r\n          }),\r\n          maxWidth: (theme) => theme.breakpoints.values.lg, // 限制最大宽度为 lg\r\n          width: '100%', // 确保宽度是 100% 的父元素宽度\r\n          mx: 'auto', // 水平居中\r\n        }}\r\n      >\r\n        <Footer />\r\n      </Box>\r\n\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;"],"names":["Copyright","_ref","language","_jsxs","Typography","variant","sx","color","mt","typography","md","children","_jsx","Link","href","Date","getFullYear","Footer","themeMode","useContext","SettingsContext","terms_path","privacy_path","Fragment","Container","display","flexDirection","xs","justifyContent","alignItems","px","py","sm","Box","gap","textAlign","mb","pb","width","borderBottom","theme","palette","divider","Avatar","src","require","alt","height","overflow","fontStyle","fontWeight","letterSpacing","flexWrap","path","labelCn","labelEn","map","_ref2","label","_ref3","filePath","target","markdownContent","setMarkdownContent","useState","errorMessage","setErrorMessage","useEffect","async","mdResponse","axios","get","GITHUB_BASE_URL","data","response","error","console","loadMarkdown","styleTagId","styleTag","document","getElementById","createElement","type","id","head","appendChild","innerHTML","align","style","whiteSpace","ReactMarkdown","urlTransform","url","title","isImage","test","documentDir","split","slice","join","imagePath","startsWith","substring","remarkPlugins","remarkMath","remarkGfm","remarkSlug","rehypePlugins","rehypeKatex","rehypeRaw","rehypeHighlight","rehypeAutolinkHeadings","components","h1","node","props","gutterBottom","lineHeight","marginBottom","borderColor","h2","marginTop","h3","_ref4","p","_ref5","fontSize","li","_ref6","component","a","_ref7","isExternalLink","textDecoration","rel","undefined","img","_ref8","maxWidth","margin","table","_ref9","borderCollapse","overflowX","thead","_ref10","tr","_ref11","th","_ref12","padding","td","_ref13","code","_ref14","inline","backgroundColor","fontFamily","pre","_ref15","borderRadius","boxShadow","CircularProgress","ProfileCard","avatar","setAvatar","stevenPhoto","name","primaryIconColor","Card","background","CardMedia","onClick","handleAvatarClick","prevAvatar","stevenCartoon","cursor","CardContent","underline","Grid","container","spacing","item","IconButton","EmailIcon","InstagramIcon","GitHubIcon","SchoolIcon","LinkedInIcon","query","username","accessToken","formData","FormData","append","api","post","headers","Authorization","TypewriterText","text","onComplete","displayedText","setDisplayedText","currentIndex","setCurrentIndex","isComplete","setIsComplete","length","timer","setTimeout","prev","clearTimeout","_Fragment","motion","span","animate","opacity","transition","repeat","Infinity","duration","QuickQuestionLink","question","onQuestionClick","delay","showQuestion","setShowQuestion","linkColor","AnimatePresence","initial","y","DelayedText","showText","setShowText","MessageContent","isBot","showQuickQuestions","mainTextComplete","setMainTextComplete","urlRegex","wordBreak","overflowWrap","parts","part","index","ChatbotCard","messages","setMessages","sender","inputText","setInputText","loading","setLoading","messageListRef","useRef","isInitialRender","userState","useUser","handleQuestionClick","handleSendMessageWithText","trim","errorReply","prevMessages","userMessage","loadingMessage","botReply","ChatbotService","access","handleSendMessage","current","scrollContainer","scrollTop","scrollHeight","Paper","elevation","flex","bgcolor","BotAvatar","mr","role","ref","overflowY","msg","div","size","marginLeft","onSubmit","e","preventDefault","borderTop","TextField","fullWidth","placeholder","value","onChange","onKeyPress","key","inputProps","maxLength","input","disabled","SendIcon","fadeInVariants","hidden","visible","Home","useTheme","isMobile","useMediaQuery","breakpoints","down","intro_filePath","about_filePath","CustomAppBar","minHeight","variants","MarkdownViewer","paddingLeft","values","lg","mx"],"sourceRoot":""}